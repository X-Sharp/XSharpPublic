<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-18T21:17:16.041+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>示例 4: Ole 自动化 - Excel</title>
  <body>
    <header>
      <para styleclass="Heading1">示例 4: Ole 自动化 - Excel</para>
    </header>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">在第 4 个示例中，我们将不使用 Visual Objects 中的标准示例，而是在 Visual Objects 中创建一个新的示例应用程序，用于远程控制 Excel 并将数据写入 Excel 表。</para>
    <para styleclass="Body Text">我在 Comp.Lang.Clipper.Visual-Objects 新闻组中找到了下面的示例（我为这个示例稍作了修改）。</para>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">在 Visual Objects 中创建一个新的终端应用程序，然后将下面的代码复制并粘贴到应用程序中。</li>
      <li styleclass="Body Text">打开应用程序属性，添加 Ole 库。</li>
      <li styleclass="Body Text">同时将应用程序重命名为 “ExcelTest”。</li>
      <li styleclass="Body Text">现在打开 Star 模块并复制代码。</li>
      <li styleclass="Body Text">编译并运行后，你会在 C:\ExcelTest 文件夹中找到一个 xls 文件。</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start()</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oExcel </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> OBJECT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oWorkBooks </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> OBJECT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oWorksheet </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> OBJECT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oRange </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> OBJECT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> cFile </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">cFile := &quot;C:\ExcelTest\example.xls&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">DirMake(&quot;C:\ExcelTest&quot;)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oExcel:=OLEAutoObject{&quot;Excel.Application&quot;}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oExcel:Visible:=FALSE </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 不显示 EXCEL 执行结果</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oExcel:DisplayAlerts:=FALSE </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 不显示消息</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oWorkBooks:=oExcel:Workbooks</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oWorkBooks:add() </text><text style="font-weight:bold; font-style:italic; color:#339966;">//打开一个新的 worksheet</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oWorkSheet:=oExcel:ActiveSheet </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 激活第一个 sheet</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oRange:=oWorkSheet:[Range,&quot;A1&quot;,&quot;A1&quot;] </text><text style="font-weight:bold; font-style:italic; color:#339966;">// A1 单元格</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oRange:SELECT()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oRange:FormulaR1C1:=&quot;Hello my text&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oExcel:ActiveWorkBook:SaveAs(cFile,56,&quot;&quot;,&quot;&quot;,;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;FALSE,FALSE) &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">//“56&quot; 在 EXCEL 97-2003 工作簿中保存文件（Excel 8）</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oWorkBooks:Close()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oExcel:Quit() &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">WAIT</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NIL &#160; </text></para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">将 AEF 导出到 “C:\ExcelTest\ExcelTest.AEF”。</li>
      <li styleclass="Body Text">运行 VOExporter 并导出代码。</li>
      <li styleclass="Body Text">在 Visual Studio 中打开解决方案后，您还会得到一个带有源文件（Start.prg）的应用程序。源文件几乎完全相同，只有一处不同。这一行 ：</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">oRange:=oWorkSheet:[Range,&quot;A1&quot;,&quot;A1&quot;] </text><text style="font-weight:bold; font-style:italic; color:#339966;">// A1 单元格</text></para>
    <para styleclass="Body Text">已更改为</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">oRange:=oWorkSheet:Range[&quot;A1&quot;,&quot;A1&quot;] </text><text style="font-weight:bold; font-style:italic; color:#339966;">// A1 单元格</text></para>
    <list id="2" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">注意，Range 现在位于方括号前面。<br/>Range 是工作表的所谓 “索引属性”。Visual Objects 为此使用了一种 “有趣 ”的语法。<br/>X# 使用与大多数其他语言相同的语法。属性看起来像一个数组（方括号）。</li>
    </list>
    <list id="3" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">现在用 X# 编译应用程序。您将收到以下错误：</li>
    </list>
    <para styleclass="Body Text"><image src="ExcelOle.png" scale="-99.90%" styleclass="Image Caption" figurelistinclude="0"></image></para>
    <para styleclass="Body Text">让我们来看看这些错误：</para>
    <list id="4" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">列表中的最后一个错误表明 Start 方法不正确。这是因为在 .Net 中，Start 函数必须是一个 VOID 函数或一个返回 INT 的函数。本例中没有声明返回类型，因此 X# 认为您要创建一个返回 USUAL 的函数。将 start 函数的原型改为</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text></para>
    <para styleclass="Body Text" style="margin-left:13px;">并删除 RETURN 语句中的 NIL 返回值。<br/></para>
    <list id="5" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">现在仍有 2 个错误。这表明 X# 不知道如何将数组索引从字符串转换为 int。这是在范围赋值的那一行。<br/>上述代码使用了 “后期绑定”，因此在编译时并不知道类型。X# 不知道工作表对象的 Range 属性是索引属性还是返回数组。它假定返回的是一个数组，并希望指定数组索引，而数组索引是数字（并减去 1，因为 Visual Objects 使用基于 1 的数组，而 .Net 使用基于 0 的数组）。</li>
      <li styleclass="Body Text">解决这个问题的最佳方法是使用强类型并使用 Excel 的生成类包装器。<br/>在 Visual Objects 中，您可以使用 “Automation Server ”工具生成这样的类包装器。在 .Net 中也有类似的工具。最简单的方法是在应用程序的引用中添加对 Excel 的引用：</li>
      <li styleclass="Body Text">右键单击解决方案资源管理器中的 “引用”，然后选择 &quot;添加引用&quot;</li>
      <li styleclass="Body Text">在 “添加引用 ”对话框中，选择 COM 标签页</li>
      <li styleclass="Body Text">找到 “Microsoft Excel nn.m 对象库”。在我的机器上是 Excel 16.0。</li>
    </list>
    <para styleclass="Body Text"><image src="ExcelAddRef.png" scale="-99.90%" styleclass="Image Caption" figurelistinclude="0"></image></para>
    <list id="5" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text"><text styleclass="Image Caption" style="font-style:normal;">点击 Ok.</text></li>
      <li styleclass="Body Text"><text styleclass="Image Caption" style="font-style:normal;">这将在您的引用列表中添加一个名为 “Microsoft.Office.Interop.Excel ”的条目。这是一个生成的类型库，包含 Excel 中所有类型的类定义。</text></li>
      <li styleclass="Body Text"><text styleclass="Image Caption" style="font-style:normal;">现在进入代码，为 Excel 类的命名空间添加 Using 语句，并将 “AS OBJECT ”改为正确的类型：</text></li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">USING</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Microsoft.Office.Interop.Excel</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oExcel </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Application</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oWorkBooks </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Workbooks</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oWorksheet </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Worksheet</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oRange </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Range</text></para>
    <list id="5" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text"><text styleclass="Image Caption" style="font-style:normal;">同时更改创建 Excel 主对象的调用：</text></li>
    </list>
    <para styleclass="Normal"><tab /><text styleclass="Code Example">oExcel:=ApplicationClass{}</text><br/></para>
    <list id="6" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Normal"><text styleclass="Body Text">现在，您的代码是强类型的，因此，如果您尝试从这些对象中选择一个成员（如 oExcel:Workbooks），您也应该获得 intellisense。</text></li>
    </list>
    <list id="7" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">编译并运行代码。运行结果符合预期。</li>
      <li styleclass="Body Text"><text styleclass="Code Example">您可能需要将 “SaveAs ”行中的值 56 更改为适当的枚举值：xlFileFormat.xlExcel8</text></li>
      <li styleclass="Body Text">现在再次运行应用程序，一切正常。</li>
      <li styleclass="Body Text">如果查看生成 EXE 的文件夹，就会看到 ExcelTest.Exe 和 Microsoft.Office.Interop.Excel.dll 类型的库</li>
    </list>
    <para styleclass="Heading2">备注 1</para>
    <para styleclass="Body Text">如果你想知道为什么我们将 oExcel 声明为 Application，却使用 ApplicationClass 来实例化对象，原因就在这里：</para>
    <para styleclass="Body Text">Application 是接口，ApplicationClass 是实现 Application 接口的实际类。这是大多数自动化服务器的模型。</para>
    <para styleclass="Heading2">备注 2</para>
    <para styleclass="Body Text">许多人都在询问实现 OLE 事件的方法。有了 X# 代码和生成的类型库，这个问题就很容易解决了。</para>
    <para styleclass="Body Text">在 start 方法中添加以下代码，定义 BeforeSave 和 AfterSave 事件</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">oExcel:WorkbookBeforeSave += OnBeforeSave</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">oExcel:WorkbookAfterSave += OnAfterSave</text></para>
    <para styleclass="Body Text">并添加以下功能</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> OnBeforeSave (oWb </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Workbook, SaveAsUI </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> LOGIC, Cancel </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">REF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Logic) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? &quot;OnBeforeSave&quot;, oWb:Path, oWb:Name, SaveAsUI</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> OnAfterSave (oWb </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Workbook, Success </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> LOGIC) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? &quot;OnAfterSave&quot;, oWb:Path, oWb:Name, Success</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text></para>
    <para styleclass="Body Text">然后再次运行示例。你会发现两个函数都被调用了。保存前，路径和名称没有正确设置，保存后，它们被设置为代码中指定的值<br/><text style="font-weight:bold; font-style:italic;">某些版本的 Excel 不支持 WorkbookAfterSave 事件。在这种情况下，编译时会出现错误</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="List"><text style="font-weight:bold; font-style:italic;">注意：</text><tab />如果在调试器中运行这段代码，并在 OnBeforeSaveAs 中设置断点，就会发现这些事件的调用堆栈有点奇怪： <br/>该调用栈中没有 Start() 函数（我禁用了 “Just My code option”，否则你只能看到 OnBeforeSave() 这一行）。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><image src="CallStackExcel.png" scale="100.00%" styleclass="Image Caption" figurelistinclude="0"></image></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><text style="font-weight:bold;">这是因为这些事件是在单独的线程上调用的。如果查看 VS 中的线程窗口（调试 - 窗口 - 线程），就会发现这一点：</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><image src="ExcelThreadWindow.png" scale="100.00%" styleclass="Image Caption" figurelistinclude="0"></image></para>
    <para styleclass="Heading2">备注 3</para>
    <para styleclass="Normal">如果仔细观察 “添加引用 ”对话框，还可以发现 Excel 库的其他位置（在 .Net 选项卡上）。在我的机器上，它们是</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><image src="ExcelAddRef2.png" scale="-99.90%" styleclass="Image Caption" figurelistinclude="0"></image></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">这些是所谓的 “Primary Interop Assemblies”（PIA），即预编译的程序集，适用于不同的 Excel 版本。您也可以使用这些程序集。这些程序集与 Visual Studio 的 Office 开发工具一起安装。在我的机器上，它们位于 “c:\Program Files (x86)\Microsoft Visual Studio 14.0\Visual Studio Tools for Office/PIA ”的子文件夹中。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Body Text"><text style="font-weight:bold;">您可以在 XSharp 示例文件夹中找到 “Code before ”和 “Code after”。</text></para>
  </body>
</topic>
