<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-15T06:59:32.821+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>编译器生成的特殊类和代码</title>
  <keywords>
    <keyword>$AppExit()</keyword>
    <keyword>$AppInit()</keyword>
    <keyword>$Exit</keyword>
    <keyword>$Init1</keyword>
    <keyword>$Init2</keyword>
    <keyword>$Init3</keyword>
    <keyword>$PCall$&lt;FunctionName&gt;$&lt;suffix&gt;</keyword>
    <keyword>$PCallNative$&lt;FunctionName&gt;$&lt;suffix</keyword>
    <keyword>_CAST</keyword>
    <keyword>&lt;&gt;ClassName</keyword>
    <keyword>&lt;AssemblyName&gt;.Functions</keyword>
    <keyword>Clipper calling convention</keyword>
    <keyword>Functions$&lt;ModuleName&gt;$</keyword>
    <keyword>PSZ</keyword>
    <keyword>RunInitProcs()</keyword>
    <keyword>String2Psz</keyword>
    <keyword>Xs$Args</keyword>
    <keyword>Xs$PSZLiteralsTable</keyword>
    <keyword>Xs$SymbolTable</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">编译器生成的特殊类和代码</para>
    </header>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">编译器可能会生成一些特殊的优化类。其中一些类由 Roslyn 生成（如 Lambda 表达式的类或异步代码的状态机）。其他则由 X# 编译器生成。</para>
    <para styleclass="Normal">下面是这些类的一些示例（如果使用 IlSpy 等工具打开 X# 编译器程序集，就可以看到这些类）</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><table styleclass="Default" rowcount="11" colcount="2">
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Normal" style="text-align:center;"><text style="font-weight:bold;">类</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal" style="text-align:center;"><text style="font-weight:bold;">用途</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">Xs$PSZLiteralsTable</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">如果应用程序中的代码看起来像这样，编译器就会生成该类：</para>
          <para styleclass="Normal"><br/><text styleclass="Code Example" style="font-size:12pt; font-weight:normal; font-style:normal; color:#000000;">LoadLibrary(</text><text styleclass="Code Example" style="font-size:12pt; font-weight:bold; font-style:normal; color:#ff0000;">PSZ</text><text styleclass="Code Example" style="font-size:12pt; font-weight:normal; font-style:normal; color:#000000;">(</text><text styleclass="Code Example" style="font-size:12pt; font-weight:bold; font-style:normal; color:#ff0000;">_CAST</text><text styleclass="Code Example" style="font-size:12pt; font-weight:normal; font-style:normal; color:#000000;">, &quot;RICHED20.DLL&quot;)) </text><text styleclass="Code Example" style="font-size:12pt; font-weight:bold; font-style:italic; color:#339966;">// inside GUI classes</text></para>
          <para styleclass="Body Text"></para>
          <para styleclass="Body Text">由于我们在编译时无法 &quot;知道 &quot;PSZ 的生命周期，因此我们在该类中创建了一个静态字段，并将生成的 PSZ 值（值类型）赋值给该字段。这样，在应用程序的整个生命周期内，PSZ 都将 &quot;活着&quot;。</para>
          <para styleclass="Body Text">如果您知道在调用 WIN32 api 后将不再需要 PSZ，那么您最好将 PSZ(_CAST 替换为 String2Psz()。这将确保 PSZ 值在创建它的函数结束后被销毁。</para>
          <para styleclass="Body Text">代码如下：</para>
          <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> TestMe() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; LoadLibrary(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PSZ</text><text style="font-weight:normal; font-style:normal; color:#000000;">(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">_CAST</text><text style="font-weight:normal; font-style:normal; color:#000000;">, &quot;RICHED20.DLL&quot;)) &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text></para>
          <para styleclass="Body Text">生成以下内容 </para>
          <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">unsafe</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">TestMe()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">VOWin32APILibrary.Functions.LoadLibrary((IntPtr)(</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#000000;">*)Xs$PSZLiteralsTable._$psz_$0);</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
          <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">以及下面的 PSZ 表：</text></para>
          <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">class</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Xs$PSZLiteralsTable</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">readonly</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Psz</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">_$psz_$0</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Psz(&quot;RICHED20.DLL&quot;);</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
          <para styleclass="Normal">如您所见，PSZ 值已存储在表中。请注意，每个 PSZ 变量都包含一个指向运行时使用 String2Mem 函数分配的静态内存的指针。因此，这些静态内存块将在应用程序的整个生命周期内分配。</para>
          <para styleclass="Normal"></para>
          <para styleclass="Normal">如果将代码改为使用 String2Psz() </para>
          <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> TestMe() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; LoadLibrary(String2Psz(&quot;RICHED20.DLL&quot;)) &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text></para>
          <para styleclass="Body Text">那么结果将是</para>
          <para styleclass="Body Text"></para>
          <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">unsafe</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">TestMe()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">List&lt;IntPtr&gt;</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">pszList</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">List&lt;IntPtr&gt;();</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">try</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">VOWin32APILibrary.Functions.LoadLibrary((IntPtr)(</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#000000;">*)</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Psz(CompilerServices.String2Psz(&quot;RICHED20.DLL&quot;,</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">pszList)));</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">}</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">finally</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">CompilerServices.String2PszRelease(pszList);</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
          <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">可以看到，编译器现在生成了一个局部变量（一个 IntPtr 列表），该变量在最后被传递给一个运行时函数，该函数在函数结束时负责删除分配的内存。为了确保这一点，我们添加了 try ... finally。</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">Xs$SymbolTable</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">如果您在代码中使用文字符号，编译器会生成该类。应用程序中的每个符号在该类中都有一个字段。在 System 类中有 21 个字面符号，反编译时可以看到：</para>
          <para styleclass="Normal" style="line-height:1.00; tabstops:720px left,1440px left,2160px left,2880px left,3600px left ;"><text style="font-family:&apos;Times New Roman&apos;; font-size:12pt; vertical-align:baseline; color:#000000;">internal static class Xs$SymbolTable</text></para>
          <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">readonly</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">_init</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol(&quot;INIT&quot;);</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">readonly</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">_concurrencycontrol</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol(&quot;CONCURRENCYCONTROL&quot;);</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">readonly</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">_notify</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol(&quot;NOTIFY&quot;);</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">.</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">.</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">readonly</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">_unknown</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol(&quot;UNKNOWN&quot;);</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">readonly</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">_resourcestring</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Symbol(&quot;RESOURCESTRING&quot;);</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
          <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">这与 Visual Objects 中传递符号的方式非常相似。</text></para>
          <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">当使用程序集中的第一个符号时，就会创建所有符号，之后使用文字符号的速度会非常快。符号存储在运行时的静态表中，符号值只包含该表中的偏移量。比较 2 个符号就像比较 2 个数字，因此速度非常快。</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">&lt;AssemblyName&gt;.Functions</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">Dotnet 没有函数或全局变量的概念。因此，X# 编译器会在每个程序集中创建一个静态类，其中包含代码中每个函数或过程的静态方法。</para>
          <para styleclass="Normal">该类的名称源自输出程序集的名称：</para>
          <para styleclass="Normal">MyFile.DLL 将包含一个 MyFile.Functions 类</para>
          <para styleclass="Normal">MyFile.EXE 将包含一个 MyFile.Exe.Functions 类</para>
          <para styleclass="Normal">如果输出程序集名称包含内嵌点，那么这些点将在函数类名称中用下划线字符代替：</para>
          <para styleclass="Normal">MyApp.Main.EXE 将包含一个类名 MyApp_Main.EXE.Functions</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">Functions$&lt;ModuleName&gt;$</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">只要您的代码使用了 STATIC FUNCTION、STATIC DEFINE、STATIC GLOBAL（其可见性仅限于同一文件内），编译器就会为每个模块（PRG 文件）生成一个单独的类，其中 PRG 文件的名称将用于 &lt;Modulename&gt; 中，因此 Application1.exe 中的文件 Start.Prg 将生成一个类名 </para>
          <para styleclass="Normal">Application1.Exe.Functions$Start$</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">$PCall$&lt;FunctionName&gt;$&lt;suffix&gt;</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">如果您的代码包含 PCALL() 结构，那么编译器将根据方法/函数名称生成一个特殊的委托，并将该委托作为使用 PCALL() 的类型内部的嵌套对象。因此，函数中的 PCALL() 将导致函数类中的嵌套委托，而 Window 类方法中的 PCALL() 将导致 Windows 类中的嵌套委托。</para>
          <para styleclass="Normal">委托的返回类型、参数名称和类型均源自传递给 PCALL() 的类型指针的函数声明。</para>
          <para styleclass="Normal"></para>
          <para styleclass="Normal">例如，VOGUIClasses 程序集在 Window 类中包含一个 $PCall$DeleteTrayIcon$430 函数，在 Functions 类中包含一个 $PCall$__InitFunctionPointer$28 函数。</para>
          <para styleclass="Normal">如果您查看 __InitFunctionPointer 过程中的原始代码，它看起来像这样：</para>
          <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">IF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> !PCALL(gpfnInitCommonControlsEx, @icex)</text></para>
          <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">生成的代码如下所示：</text></para>
          <para styleclass="Body Text"></para>
          <para styleclass="Normal" style="line-height:1.00; tabstops:720px left,1440px left,2160px left,2880px left,3600px left ;"><text style="font-family:&apos;Times New Roman&apos;; font-size:12pt; vertical-align:baseline; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#000000;">if</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">(!$PCallGetDelegate&lt;$PCall$__InitFunctionPointer$28&gt;(gpfnInitCommonControlsEx)(&amp;icex))</text></para>
          <para styleclass="Body Text"></para>
          <para styleclass="Body Text">$PCallGetDelegate 函数是编译器生成的一个特殊函数，看起来像这样：</para>
          <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">[CompilerGenerated]</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">T</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">$PCallGetDelegate&lt;T&gt;(IntPtr</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">p)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">return</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">(T)(</text><text style="font-weight:bold; font-style:normal; color:#000000;">object</text><text style="font-weight:normal; font-style:normal; color:#000000;">)Marshal.GetDelegateForFunctionPointer(p,</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">typeof</text><text style="font-weight:normal; font-style:normal; color:#000000;">(T));</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
          <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">简而言之：它接收一个函数指针（p），并获取一个 T 类型的委托。然后使用该委托调用 API 函数。</text></para>
          <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">如果你不明白，请不要担心。我们自己也是花了好长时间才创建出来的！</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">$PCallNative$&lt;FunctionName&gt;$&lt;suffix&gt;</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">这是一个为 PCallNative 结构生成的委托。返回类型是通用参数的类型，而参数类型是从参数类型派生出来的。参数名称为 $param1、$param2 等。</para>
          <para styleclass="Normal">因此，Test 函数中的以下代码</para>
          <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> p </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> IntPtr &#160; &#160; &#160; &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; P := GetProcAddress(hDLL, &quot;MyFunc&quot;)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; PCallNative&lt;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; color:#000000;">&gt; (p,1,2,3)</text></para>
          <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">将生成这样一个委托：</text></para>
          <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">[CompilerGenerated]</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">delegate</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">int</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">$PCallNative$Test$0(</text><text style="font-weight:bold; font-style:normal; color:#000000;">int</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">$param1,</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">int</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">$param2,</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">int</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">$param3);</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">Functions.$Init1</text><br/><text style="font-weight:bold;">Functions.$Init2</text></para>
          <para styleclass="Body Text"><text style="font-weight:bold;">Functions.$Init3</text></para>
          <para styleclass="Body Text"><text style="font-weight:bold;">Functions.$Exit</text><br/><text style="font-weight:bold;">&lt;Module&gt;.$AppInit()</text><br/><text style="font-weight:bold;">&lt;Module&gt;.$AppExit()</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">函数类内的这些特殊方法是为了调用 Init 和 Exit 程序而生成的。有关这方面的更多信息，<link displaytype="text" defaultstyle="true" type="topiclink" href="Compiler-magic-in-the-startup-code">请参阅启动代码主题</link></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">&lt;Module&gt;.RunInitProcs()</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">&lt;Module&gt; 类中的这个特殊方法由编译器生成，当你使用 XSharpLoadLibrary() 函数动态加载程序集时，它将在运行时被调用。当动态加载 DLL 时，它会调用所有初始程序。</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">&lt;&gt;ClassName</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">Roslyn 编译器会生成以 &lt;&gt; 前缀开头的特殊类，用于 lambda 表达式和 codeblock。</para>
          <para styleclass="Normal">如果查看 VORDDClasses 程序集，你会发现很多这样的例子。您可能需要将 ILSpy 设置为显示 IL 而不是 C# 或 XSharp 代码，否则这些类将被工具隐藏。</para>
          <para styleclass="Normal">如果您在 C# 模式下查看 RDD 类，它将显示如下内容：<br/></para>
          <para styleclass="Normal"><image src="RddClasses1.png" scale="100.00%" styleclass="Image Caption" figurelistinclude="0"></image></para>
          <para styleclass="Normal"></para>
          <para styleclass="Normal">如果将 ILSpy 切换到 IL 模式，就会显示如下图所示：</para>
          <para styleclass="Normal"></para>
          <para styleclass="Normal"><image src="RddClasses2.png" scale="100.00%" styleclass="Image Caption" figurelistinclude="0"></image></para>
          <para styleclass="Normal"></para>
          <para styleclass="Body Text">正如你所看到的，DbServer 类内部现在有很多嵌套类。&lt;&gt;c 类包含不需要从函数或方法访问局部变量的代码块。 在 DbServer 类中，该类有大约 25 个方法，每个方法都是一个代码块。</para>
          <para styleclass="Body Text">名称为 &lt;&gt;c_DisplayClass&lt;nn&gt; 的类包含的代码块需要从定义它们的函数或方法中访问局部变量。</para>
          <para styleclass="Body Text">编译器已检测到这一点，并将局部变量移出函数/方法，使其成为编译器生成类中的字段，这样代码块就可以访问它们了。在 Clipper 和 VO 中，这些变量被称为 &quot;分离局部变量&quot;。</para>
          <para styleclass="Body Text"></para>
          <para styleclass="Body Text">例如，DisplayClass56_0 包含 Average 函数的变量：</para>
          <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">.</text><text style="font-weight:bold; font-style:normal; color:#000000;">class</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">nested</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">private</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">auto</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">ansi</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">sealed</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">beforefieldinit</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">&apos;&lt;&gt;c__DisplayClass56_0&apos;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">extends</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">[mscorlib]System.Object</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">.custom</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">instance</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">[mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor()</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">(</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">01</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">00</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">00</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">00</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">)</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:italic; color:#000000;">// Fields</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">.field</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">int32</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">iCount</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">.field</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">class</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">[XSharp.RT]XSharp.__Array</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">acbExpr</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">.field</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">class</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">[XSharp.RT]XSharp.__Array</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">aResults</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">.field</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">valuetype</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">[XSharp.RT]XSharp.__Usual</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">cbKey</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">.field</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">valuetype</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">[XSharp.RT]XSharp.__Usual</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">uValue</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:italic; color:#000000;">// Methods</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">.method</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">hidebysig</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">specialname</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">rtspecialname</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">instance</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">.ctor</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">()</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">cil</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">managed</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:italic; color:#000000;">// end of class &lt;&gt;c__DisplayClass56_0</text></para>
          <para styleclass="Body Text"><text style="font-weight:normal; color:#000000;">Average 方法内部的代码块显然访问了 5 个局部变量（iCount、acbExpr、aResults、cbKey 和 uValue）。</text></para>
          <para styleclass="Body Text"></para>
          <para styleclass="Body Text"><text style="font-weight:normal; color:#000000;">如果查看 DbServer 的 Average() 方法，你会看到如下代码块 </text></para>
          <para styleclass="Body Text"><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">SELF:__DBServerEval( { || iCount += 1, __IterateForSum( acbExpr, aResults ) }.......)</text></para>
          <para styleclass="Body Text"></para>
          <para styleclass="Body Text"></para>
          <para styleclass="Body Text">如果您查看 Average() 的反编译代码（C# 模式），您会看到如下内容：</para>
          <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">__DbServerEval(</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Cb$Eval$</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">(&lt;&gt;F&lt;__Usual&gt;)</text><text style="font-weight:bold; font-style:normal; color:#000000;">delegate</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-style:italic; color:#000000;">{</text><br/><text style="font-style:italic; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-style:italic; color:#000000;">iCount++;</text><br/><text style="font-style:italic; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-style:italic; color:#000000;">VORDDClasses.Functions.__IterateForSum(acbExpr,</text><text style="font-style:italic; color:#ffffff;">&#32;</text><text style="font-style:italic; color:#000000;">aResults);</text><br/><text style="font-style:italic; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-style:italic; color:#000000;">return</text><text style="font-style:italic; color:#ffffff;">&#32;</text><text style="font-style:italic; color:#000000;">default(__Usual);</text><br/><text style="font-style:italic; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-style:italic; color:#000000;">},</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Cb$Src$</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">&quot;{ || iCount += 1, __IterateForSum( acbExpr, aResults ) }&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">},...........................)</text></para>
          <para styleclass="Body Text">new 后面的整个 {} 是一个匿名代码块表达式 </para>
          <para styleclass="Body Text">该表达式中的 Cb$Eval$ 字段是一个委托，其中包含代码块的代码。</para>
          <para styleclass="Body Text">该表达式中的 CB$Src 字段包含代码块的源代码，因此在运行时您可以看到编译时代码块的源代码（这是在 2.3.0 版中引入的）。</para>
          <para styleclass="Body Text"></para>
          <para styleclass="Body Text">代码块的实际主体（从 iCount++ 到 return default(__Usual) 的部分）实际上存储在 &lt;&gt;c__DisplayClass56_0 的方法中。这个代码块中需要的所有变量实际上并没有作为变量存储在 Average() 中，而是作为 &lt;&gt;c__DisplayClass56_0 的字段存储。</para>
          <para styleclass="Body Text"></para>
          <para styleclass="Body Text">如果您不明白，请不要担心。我们也是花了一段时间才理解并自己创建的！</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:307px;">
          <para styleclass="Body Text"><text style="font-weight:bold;">Xs$Args</text></para>
        </td>
        <td style="width:1074px;">
          <para styleclass="Normal">只要您的代码包含使用所谓 CLIPPER 调用约定的函数或方法，X# 编译器就会创建以特殊方式处理参数的代码： 例如，运行时中的函数 Str()。该函数声明了以下参数：<br/><br/><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> Str(nNumber,nLength,nDecimals) </text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text></para>
          <para styleclass="Normal"></para>
          <para styleclass="Body Text">编译器认为这是 CLIPPER 调用约定，因为所有 3 个参数都是可选的。</para>
          <para styleclass="Body Text"></para>
          <para styleclass="Body Text">为该函数生成的 C# 版本 IL 代码是</para>
          <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">[ClipperCallingConvention(</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">string</text><text style="font-weight:normal; font-style:normal; color:#000000;">[] {</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">&quot;nNumber&quot;, &quot;nLength&quot;, &quot;nDecimals&quot; })]</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">string</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Str([CompilerGenerated]</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">params</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Usual[]</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Xs$Args)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">int</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">num</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">(Xs$Args</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">!=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">null</text><text style="font-weight:normal; font-style:normal; color:#000000;">)</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">?</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Xs$Args.Length</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">:</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">0;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Usual</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">nNumber</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">(num</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">&gt;=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">1)</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">?</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Xs$Args[0]</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">:</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Usual._NIL;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Usual</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">nLength</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">(num</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">&gt;=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">2)</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">?</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Xs$Args[1]</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">:</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Usual._NIL;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Usual</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">nDecimals</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">(num</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">&gt;=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">3)</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">?</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Xs$Args[2]</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">:</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__Usual._NIL;</text></para>
          <para styleclass="Normal">如你所见，函数现在只有一个参数，即一个 usuals 数组。</para>
          <para styleclass="Normal">参数名称存储在 ClipperCallingConvention 类型的属性中。Visual Studio 和 XIDE 中的 intellisense 会使用该属性来显示参数名。</para>
          <para styleclass="Normal">现在，编译器会在生成方法的主体中声明一个变量，其中包含数组的长度（传递的参数数，您也可以在运行时使用 PCount()请求）。编译器还会生成一个与参数同名的局部变量，并用传递的值（基于 0 的数组元素）或 NIL 初始化每个变量。</para>
          <para styleclass="Normal">在方法的主体中，你会看到一个 try finally。在 finally 子句中有如下代码：</para>
          <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#000000;">finally</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">if</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">(num</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">&gt;=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">2)</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Xs$Args[1]</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">nLength;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">}</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
          <para styleclass="Body Text">产生这段代码的原因是 Str() 中的某个地方分配了 nLength。Str() 不知道变量是通过值传递还是通过引用传递。 如果值是通过引用传递的，那么必须更新 Xs$Args 中的数组元素，这正是此处发生的情况。</para>
          <para styleclass="Body Text">调用 Str() 的代码现在负责将数组中的值赋回本地，如果该值是通过引用传递的</para>
          <para styleclass="Normal"></para>
        </td>
      </tr>
    </table></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
