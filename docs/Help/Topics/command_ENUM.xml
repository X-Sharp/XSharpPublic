<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>ENUM Statement</title>
  <keywords>
    <keyword>ENUM</keyword>
    <keyword>enumeration</keyword>
    <keyword>enumeration members</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">ENUM Statement</para>
    </header>
    <para styleclass="Heading1">Purpose</para>
    <para styleclass="Normal">Declare an enum to &#160;the compiler.</para>
    <para styleclass="Heading1">Syntax</para>
    <para styleclass="Normal"><tab />[attributes] [Modifiers] </para>
    <para styleclass="Normal"><tab />ENUM &lt;idEnumName&gt; [AS type] &#160; </para>
    <para styleclass="Normal"><tab /><tab />memberName [:= value]</para>
    <para styleclass="Normal"><tab /><tab /> &#160;[...]</para>
    <para styleclass="Normal"><tab />END [ENUM]</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">Arguments</para>
    <para styleclass="List"><snippet src="__IncludeMethodModifiers" inline="false"/></para>
    <para styleclass="List"><text styleclass="Italic">idEnum</text><tab />A valid identifier name for the enum. &#160;Enum names must be unique within a namespace.</para>
    <para styleclass="List"></para>
    <para styleclass="List">AS type <tab />The data type of the enumeration members (optional).</para>
    <para styleclass="List"></para>
    <para styleclass="List"><text styleclass="List1">memberName </text><tab /><text styleclass="List1">The name(s) of the enumeration members.</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Heading1">Description</para>
    <para styleclass="Normal">A type declared with the <text style="font-weight:bold;">ENUM</text> keyword is an &quot;enumeration&quot; type, a type that consists of a set of named constants which are called the enumerator list. Enumeration types implicitly inherit from System.Enum.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">An enumeration type has an underlying type, which is the type of the items in the enumerator list. The default underlying type is INT; if the AS clause is specified then the type can be any signed or unsigned integral type except System.Char.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">By default, the first member in the enumerator list has a value of 0. &#160;The value of every other member is the value of the previous member plus 1. An element&apos;s value can be explicitly set to any value in the range of the underlying type by using the assignment operator (:=) followed by either a literal integer value, or an expression that resolves to an integer value at compile time. &#160;Two or more members can explicitly set to the same value.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The default value for an <text style="font-weight:bold;">ENUM</text> E is the expression (E)0., which may or may not represent a member of the enum type, depending on whether or not a member having the value of 0 exists.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Enumeration members are referenced by specifying the name of the enumeration type and the name of the member, separated by a period. If the enumeration type was declared in the namespace currently being compiled, the name of the enumeration type is sufficient. Otherwise, either the fully-qualified name of the enumeration must be used (e.g. System.Windows.Forms.MessageBoxButtons) or the namespace must be imported using the USING directive.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The System.FlagsAttribute attribute may be placed on an <text style="font-weight:bold;">ENUM</text> to indicate that the elements of the enum may be combined using a bitwise OR operation.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The enum name may include one or more namespace names, separated by periods. If no period is found in the enum name, then the default namespace is assumed. The default namespace is the base name of the output assembly name, unless explicitly overridden by the /ns compiler option.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">Example</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><text style="font-weight:normal; font-style:normal; color:#000000;"> days</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Sunday &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Monday &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 1</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Tuesday &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 2</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Wednesday &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 3</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Thursday &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 4</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Friday &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 5</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Saturday &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 6</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> example1() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> i </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; i := (</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; color:#000000;">) days.Friday</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? days.Friday, i &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// prints: Friday 5</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><text style="font-weight:normal; font-style:normal; color:#000000;"> direction</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; north &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// has default value of 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; east &#160;:= 90</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; south := 180</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; west &#160;:= 270</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> example2( x </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> direction ) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">IF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x == direction.north</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;goNorth()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSEIF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x == direction.east</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;goEast()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSEIF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x == direction.south</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;goSouth()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSEIF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x == direction.west</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;goWest()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSE</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Debug.Assert( &quot;Unknown value for direction&quot; )</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDIF</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">[System.FlagsAttribute];</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><text style="font-weight:normal; font-style:normal; color:#000000;"> CarOptions</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; SunRoof &#160; &#160; &#160; := 0x1</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Spoiler &#160; &#160; &#160; := 0x2</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; FogLights &#160; &#160; := 0x4</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; TintedWindows := 0x8</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> example3() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> options </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> CarOptions</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; options := CarOptions.SunRoof | CarOptions.FogLights</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? options &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// prints: SunRoof, FogLights</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? (</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; color:#000000;">) options </text><text style="font-weight:bold; font-style:italic; color:#339966;">// prints: 5</text></para>
    <para styleclass="Body Text">In the first and third examples, note that using the ? statement on an enum type prints out the textual value of the enum. This is because the names of the enum members are stored in the assembly&apos;s metadata, and the ToString() method in System.Enum (which every enum type inherits from) uses the metadata to obtain and return the name of the enum member, rather than its underlying numerical value.</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">Also note that even though the textual names of the enum members are returned from Enum.ToString(), the compiler uses the literal numeric values in the compiled code. So the expression IF x == direction.north for example actually compiles as IF x == 0, because the mapping between enumeration members and their underlying values occurs at compile time, not at runtime. &#160;This makes using enumeration types as efficient as #define, while providing much higher level of type safety and compile time error checking. However, this also means that changing the values of enum members can cause existing code that uses the enum to break unless it is recompiled.</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Heading1">Notes</para>
    <para styleclass="Normal"></para>
  </body>
</topic>
