<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-04T22:37:32.916+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>-vo3</title>
  <keywords>
    <keyword>-vo3</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">-vo3<tab /><tab />所有实例方法都是虚方法 </para>
    </header>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">-vo3 选项指示编译器将所有方法（包括 ACCESS 和 ASSIGN 方法）都视为虚方法。</para>
    <para styleclass="Heading2">语法</para>
    <para styleclass="Code with box">-vo3[+|-]</para>
    <para styleclass="Heading2">参数</para>
    <para styleclass="List">+ | - <tab />指定 + 或 -vo3，编译器就会将所有方法（包括 ACCESS 和 ASSIGN 方法）视为虚方法，无论是否使用 VIRTUAL 修饰符。这提供了与 Visual Objects 继承模型的兼容性。</para>
    <para styleclass="List"><text styleclass="Heading2">备注</text></para>
    <para styleclass="Normal">无论是否使用 -vo3，类方法都可以通过 VIRTUAL 关键字明确声明为虚方法。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">出于性能考虑，该选项默认为关闭。由于在运行前无法确定实际调用的方法实现，并且取决于调用实例的运行时类型，因此虚方法会带来轻微的性能损失。与此相反，对非虚拟成员的调用可以在编译时完全解决，并且调用总是针对实例的编译时类型。</para>
    <para styleclass="List"></para>
    <para styleclass="Normal"><text styleclass="Heading3">要在 Visual Studio 开发环境中设置该编译器选项，请执行以下操作</text></para>
    <para styleclass="Normal"></para>
    <list id="0" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:13px; font-family:Arial; font-size:11pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:13px;">打开项目的 &quot;属性&quot;页面</li>
      <li styleclass="Normal" style="margin-left:13px;">点击 Dialect 选项卡 </li>
      <li styleclass="Normal" style="margin-left:13px;">更改值</li>
      <li styleclass="Normal" style="margin-left:13px;"><link displaytype="text" defaultstyle="true" type="topiclink" href="PropPage-Dialect">查看属性页</link></li>
    </list>
    <para styleclass="Heading2">示例</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> BaseClass</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> WhoAmI() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &quot;BaseClass&quot;</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DerivedClass </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INHERIT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> BaseClass</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> WhoAmI() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &quot;DerivedClass&quot;</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> c </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> BaseClass</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">c := DerivedClass{}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? c:WhoAmI()</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><br/><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// 使用默认值或 /vo3- 输出：BaseClass</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// 使用 /vo3 或 /vo3+ 输出: DerivedClass</text></para>
    <para styleclass="Normal">如果不使用 -vo3 开关，对 &quot;c:WhoAmI() &quot;的调用总是解析到 BaseClass 中的实现，因为变量 &quot;c &quot;的类型是 &quot;BaseClass&quot;，而 &quot;BaseClass.WhoAmI &quot;是一个非虚拟方法。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">当使用 -vo3 开关时，对 &quot;c:WhoAmI() &quot;的调用将解析到 &quot;DerivedClass &quot;中的实现。尽管变量 &quot;c &quot;的类型是 &quot;BaseClass&quot;，但由于 &quot;BaseClass.WhoAmI &quot;是一个虚方法，因此运行时 &quot;c &quot;中存储的实例的实际类型将决定调用 &quot;WhoAmI &quot;的哪种实现。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">如果不使用 -vo3，也可以通过以下方法获得同样的效果：</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box">VIRTUAL METHOD WhoAmI() AS STRING CLASS BaseClass<br/> &#160; ...<text styleclass="Normal">&#32;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">这比使用 -vo3 更可取，因为您可以明确控制哪些方法是虚拟的，哪些不是，而且在不需要虚拟继承的地方也不会产生不必要的开销。但是，如果不使用 -vo3，现有的 Visual Objects 代码可能无法正常工作，而且修改现有代码并在真正需要的方法中添加 VIRTUAL 关键字可能也不现实。</para>
    <para styleclass="Normal"></para>
  </body>
</topic>
