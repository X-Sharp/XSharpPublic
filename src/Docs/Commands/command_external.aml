<?xml version="1.0" encoding="utf-8"?>
<topic id="6f05d867-c3eb-4958-84d7-0e52e88faa21" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>TODO: Move introduction text here</para>
    </introduction>




     
     <para><legacyBold>Navigation:</legacyBold>&#160;
     
     <!-- TODO: Unknown topic link: xsharp.html -->X# Documentation &gt; <!-- TODO: Unknown topic link: chapter-2.html -->X# Language Reference &gt; <!-- TODO: Unknown topic link: commands-by-category.html -->Commands and Statements &gt; <!-- TODO: Unknown topic link: cmd_cat_control.html -->Program Control&#160;&gt;</para>

     
     <!-- TODO: Add named anchor: prev --><mediaLink><image xlink:href="btn_prev_n" /></mediaLink><!-- TODO: Add named anchor: main --><mediaLink><image xlink:href="btn_home_n" /></mediaLink><!-- TODO: Add named anchor: next --><mediaLink><image xlink:href="btn_next_n" /></mediaLink>
    
    <h1 class="p_Heading1" style="page-break-after: avoid;">EXTERNAL Command</h1>

  
  <!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
  
  



     <!--ZOOMRESTART-->
     <table><row><entry>Note</entry><entry>This command is defined in a header file and will be preprocessed by the X# preprocessor to a function call. If you disable the standard header (<!-- TODO: Unknown topic link: opt-nostddefs.html -->-nostddefs) files then this command will not be available. If you tell the compiler to use a different standard header file (<!-- TODO: Unknown topic link: opt-stddefs.html -->-stddef&#160;) then this command may also be not available</entry></row></table><para>Purpose</para>
<para>Declare a list of routines (procedures or functions) to be linked into the application.</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Syntax</h1>
<para>EXTERNAL &lt;idRoutineList&gt;</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Arguments</h1>
<table><row><entry>&lt;idRoutineList&gt;</entry><entry>A comma-separated list of routine names to link. &#160;The names should not include parentheses.</entry></row></table><h1 class="p_Heading1" style="page-break-after: avoid;">Description</h1>
<para>EXTERNAL is a declaration statement that specifies one or more routines to be linked into the application. &#160;It should be placed after the variable declaration statements (such as LOCAL)</para>
<para>&#160;</para>
<para>During the compilation of X# source code, all explicit references to routines are automatically linked. &#160;In some instances however, there can be no references made to a routine until runtime. &#160;EXTERNAL resolves this by forcing the named routines to be linked even if they are not explicitly referenced in the source code. &#160;This is important in several instances:</para>
<para>&#183;Routines referenced in macro expressions or variables</para><para>&#183;Functions used in index keys and not otherwise referenced in the source code</para><para>&#160;</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Examples</h1>
<para>This example forces the code for HardCR(), Tone(), MemoTran(), and StrTran() to be linked into the application, regardless of whether these functions are referenced explicitly in the source code:</para>
<para>&#160;</para>
<para>EXTERNAL HardCR, Tone, MemoTran, StrTran</para>
<para>&#160;</para>

     <!--ZOOMSTOP-->

<!-- TODO: Review markup -->
<markup>
<script>
           var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
           if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
	   $(document).ready(function(){
		   $(window).bind('resize', function() {
				var y = $('#header').height();
				$('#content').css('margin-top', y);
				$('.hmanchor').css('margin-top', -y-20);
				$('.hmanchor').css('padding-top', y+20);
			});
		   $(window).triggerHandler('resize');	
		   $(window).triggerHandler('resize');	
                   
		});
</script>
</markup>

    <relatedTopics>
    </relatedTopics>

  </developerConceptualDocument>
</topic>
