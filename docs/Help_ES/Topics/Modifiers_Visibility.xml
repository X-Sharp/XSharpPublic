<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-02-19T11:56:44.359+01:00" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Access/Visibility modifiers</title>
  <keywords>
    <keyword>EXPORT</keyword>
    <keyword>HIDDEN</keyword>
    <keyword>INTERNAL</keyword>
    <keyword>PRIVATE</keyword>
    <keyword>PROTECT</keyword>
    <keyword>PROTECTED</keyword>
    <keyword>PUBLIC</keyword>
    <keyword>STATIC</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Access/Visibility modifiers</para>
    </header>
    <para styleclass="Heading2">Access / Visibility modifiers</para>
    <para styleclass="Normal">Access modifiers restrict the visibility of program elements:</para>
    <para styleclass="Normal"></para>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Normal">PUBLIC/EXPORT: A public function, global, type (class, structure, delegate etc) or type member (field, method, property, event etc) is visible to all code within the same assembly (exe or dll) where it is declared and assemblies referenced by the declaring assembly. This is the default in X#.</li>
      <li styleclass="Normal">PROTECT/PROTECTED: The PROTECT(ED) keyword can be applied only to type members and restrict their visibility to code within the same type and classes that inherit from that type</li>
      <li styleclass="Normal">INSTANCE: A unique modifier keyword to X# (and Visual Objects), very similar to PROTECT, but applies only to class fields and has different semantics to PROTECT, on the way it is used by code within the same class (see sample below)</li>
      <li styleclass="Normal">PRIVATE/HIDDEN: Also applies to type members and is more restrictive than PROTECT, as it limits the member visibility to only code within the type where it is declared (not to classes inheriting from that type). If you declare a field or method as PRIVATE then the compiler may produce a compiler warning <link displaytype="text" defaultstyle="true" type="topiclink" href="XS0169">xs0169</link> when it detects that that field or method is never called inside the class.</li>
      <li styleclass="Normal">INTERNAL: Restricts the visibility of a type or member only to code from the same assembly (dll or exe). An internal member is not visible to any code outside the defining assembly, not even to classes inheriting from this class declared in other assemblies. Can be combined with PROTECTED, so that an INTERNAL PROTECTED member can be seen only form within the same class and also from inheriting classes that are defined in the same assembly, but not from inheriting classes that are defined in other assemblies.</li>
      <li styleclass="Normal">The <text style="font-weight:bold; font-style:italic;">XBase</text>++ dialect also has the modifier STATIC which means that the class is only visible in the source file where it is used.</li>
    </list>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Note: It is still possible to explicitly specify certain assemblies where internal types and members of an assembly are visible, by using the InternalsVisibleTo attribute. See documentation for System.Runtime.CompilerServices.InternalsVisibleToAttribute for more information.</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INTERNAL</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">PROCEDURE</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> InternalProc() </text><tab /><tab /><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// procedure accessible only from within the same assembly</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INTERNAL</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">GLOBAL</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> InternalGlobal </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><tab /><tab /><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// global accessible only from within the same assembly</text><br/><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">PUBLIC</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> TestClass </text><tab /><tab /><tab /><tab /><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// accessible from everywhere</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">EXPORT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Export_field </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><tab /><tab /><tab /><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// accessible from everywhere</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">PROTECT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Protected_field </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><tab /><tab /><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// accessible to this class and classes inherited from it</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INTERNAL</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">PROTECT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Internal_Protected_field </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// accessible to this class and classes inherited from it, defined in this same assembly only</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">PRIVATE</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Private_Method() </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VOID</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><tab /><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// accessible only from code inside this particular class</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CLASS</text></para>
    <para styleclass="Heading3">PROTECTED vs HIDDEN</para>
    <para styleclass="Normal">A compatibility feature for code derived from Visual Objects, INSTANCE applies to fields and is similar to PROTECT, but has different semantics when a property (or ACCESS) is defined with the same name. When using a PROTECT field and an ACCESS/ASSIGN pair (or PROPERTY) is defined with the same name in the type, then any code within that class that tries to access this member, always refers to the field. But when the member is declared with the INSTANCE keyword, then the compiler binds the name to the ACCESS instead:</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Start() </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; TestClass{}:DoTest()</text><br/><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> TestClass</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">PROTECT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Protected_member := &quot;field&quot; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STRING</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INSTANCE</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Instance_member := &quot;field&quot; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STRING</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">ACCESS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Protected_member </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STRING</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &quot;access&quot;</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">ACCESS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Instance_member </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STRING</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &quot;access&quot;</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> DoTest() </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160;? </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">:Protected_member </text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// field</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160;? </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">:Instance_member </text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// access, because the field is defined with the INSTANCE keyword</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CLASS</text></para>
    <para styleclass="Normal">This feature is a left over from old Visual Objects versions that were emitting INSTANCE members for every control in the Window Editor and is depreciated in X#, but still available for compatibility reasons</para>
  </body>
</topic>
