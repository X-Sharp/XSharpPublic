<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>#text</title>
  <keywords>
    <keyword>ENDTEXT command</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">#text</para>
    </header>
    <para styleclass="Heading1">Purpose</para>
    <para styleclass="Body Text">Mark the start of a #text .. #endtext region.</para>
    <para styleclass="Body Text">The #text directive also defines the nature of the region. This region can either assign a value to a local variable or process the contents of the region.</para>
    <para styleclass="Body Text">There are 2 variations of the #text directibe</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">1.</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">#text [:= | +=] VarName [, LineDelimiter [, LineFunc, [, EndFunc]] ]</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">2.</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">#text LineFunc [, EndFunc]</text></para>
    <list id="1" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Arial; font-size:11pt; color:#000000;">
      <li styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">This variation can be recognized by the := or += operator that follows the #text directive. This declares a #text .. #endtext region that stores the value to a local variable for which the name is specified behind the operator. The text declaration may also contain (optional) tokens that will be used as &quot;line delimiters&quot;, an optional function that will be used to calculate each line and an optional function name that will be called from the #endtext line</text></li>
      <li styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">This variation does not have a variable name and declares up to 2 function names for each line and the #endtext line</text></li>
    </list>
    <para styleclass="Body Text"></para>
    <para styleclass="Heading1">Arguments</para>
    <para styleclass="Normal"></para>
    <para styleclass="List">VarName<tab />is the Name of the variable that should be assigned the value of the Text block</para>
    <para styleclass="List"></para>
    <para styleclass="List">LineDelimiter<tab />is the delimiter that should be added to the end of every line in the block</para>
    <para styleclass="List"></para>
    <para styleclass="List">LineFunc<tab />is the Name of a function that should be called on every line in the block. The function gets passed the line and should return a string</para>
    <para styleclass="List"></para>
    <para styleclass="List">EndFunc<tab />is the Name of a function that gets called after all the lines were created. This function receives the string value of the block when the block is assigned to a variable and should return a string. When the block is not assigned to a variable then this function gets called without parameters.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">Example 1</para>
    <para styleclass="Body Text">Please note that the 3 UDCs below are already defined in XSharpDefs.xh</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">#xcommand </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDTEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> =&gt; #</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">endtext</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">#xcommand &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TO</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;varname&gt; &#160;;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;=&gt; &#160;#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">text</text><text style="font-weight:normal; font-style:normal; color:#000000;"> := &lt;varname&gt;, chr(13)+chr(10)</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">#xcommand &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TO</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;varname&gt; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ADDITIVE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;=&gt; &#160;#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">text</text><text style="font-weight:normal; font-style:normal; color:#000000;"> += &lt;varname&gt;, chr(13)+chr(10)</text></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> cResult </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">TEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TO</text><text style="font-weight:normal; font-style:normal; color:#000000;"> cResult</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">line 1</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">line 2</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">line 3</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">line 4</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">TEXT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? cResult</text></para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text styleclass="" style="font-family:Arial; font-size:10pt; color:#000000;">This code is converted to </text></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> cResult </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">var</text><text style="font-weight:normal; font-style:normal; color:#000000;"> tempLocal := System.Text.StringBuilder{}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">tempLocal:Append(&quot;Line 1&quot;+chr(13)+chr(10) )</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">tempLocal:Append(&quot;Line 2&quot;+chr(13)+chr(10) )</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">tempLocal:Append(&quot;Line 3&quot;+chr(13)+chr(10) )</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">cResult := tempLocal:ToString()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? cResult</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">Please note that the compiler declares different TEXT commands for different dialects. The TEXT command above works in all dialects. </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">The TEXT command below is for the Non-Core dialects (with the exception of FoxPro):</text></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">#xcommand &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INTO</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;varname&gt; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">WRAP</text><text style="font-weight:normal; font-style:normal; color:#000000;"> [&lt;lnbreak&gt;] </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TRIMMED</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;=&gt; &#160;#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">text</text><text style="font-weight:normal; font-style:normal; color:#000000;"> := &lt;varname&gt;, </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">iif</text><text style="font-weight:normal; font-style:normal; color:#000000;">(&lt;.lnbreak.&gt;,&lt;!lnbreak!&gt;, CRLF) , LTrim</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">This command allows a user defined end of line character and calls the LTrim() function on each string before assigning it to the variable</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">FoxPro declares a special TEXT command that looks like this:</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">#xcommand &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TO</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;varname&gt; [&lt;tm:</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TEXTMERGE</text><text style="font-weight:normal; font-style:normal; color:#000000;">&gt;] [&lt;noshow:</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">NOSHOW</text><text style="font-weight:normal; font-style:normal; color:#000000;">&gt;] [</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">FLAGS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;flags&gt;] [</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PRETEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;expression&gt; ] &#160; &#160; &#160;;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;=&gt; &#160;__TextInit(&lt;.tm.&gt;, &lt;.noshow.&gt;, </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">iif</text><text style="font-weight:normal; font-style:normal; color:#000000;">(&lt;.flags.&gt;, &lt;!flags!&gt;, 0), &lt;!expression!&gt; &#160;) ;;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">text</text><text style="font-weight:normal; font-style:normal; color:#000000;"> := &lt;varname&gt;, &#160;,__TextWriteLine , __TextEnd </text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">As you can see the command gets translated into a function call to __TextInit() with the values of the various TEXT command options. Each line is send to the __TextWriteLine function and the #endtext directive is replaced with a call to __TextEnd(). There are NO delimiters added for each line. This is handled inside __TextWriteLine. This function is also responsible for expanding expressions inside the text when the TEXTMERGE option is chosen, or when the global SET TEXTMERGE is enabled.</text></para>
    <para styleclass="Heading1">Example 2</para>
    <para styleclass="Body Text">Please note that the 2 UDCs below are already defined in XSharpDefs.xh</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">#xcommand </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDTEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> =&gt; #</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">endtext</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">#xcommand &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TO</text><text style="font-weight:normal; font-style:normal; color:#000000;"> FILE &lt;(file)&gt; ;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;=&gt; &#160;_TextSave( &lt;(file)&gt; ) ;;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160;#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">text</text><text style="font-weight:normal; font-style:normal; color:#000000;"> QOut, _TextRestore</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">TEXT</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TO</text><text style="font-weight:normal; font-style:normal; color:#000000;"> FILE EXAMPLE.TXT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">line 1</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">line 2</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">line 3</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">line 4</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDTEXT</text></para>
    <para styleclass="Body Text">The TEXT TO FILE command is translated into a call to the function _TextSave(), followed by the #text directive, that specifies that each line must be sent to the QOut() function and that also declares that the #endtext line must be replaced by a call to the _TextRestore() function. The QOut() and _TextRestore function names are specified without parameters. Each line in the block will be sent to the QOut() function as parameter.</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">So this code is converted to </para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">_TextSave(&quot;EXAMPLE.TXT&quot;);</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">QOut(&quot;line 1&quot;)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">QOut(&quot;line 2&quot;)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">QOut(&quot;line 3&quot;)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">QOut(&quot;line 4&quot;)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">_TextRestore()</text></para>
    <para styleclass="Heading1">See also</para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_TEXT">TEXT command</link></para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="TEXT-Command-(Core)">Core TEXT Command</link></para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="TEXT-Command-(Non-Core)">Non-Core TEXT Command</link></para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="TEXT-Command-(FoxPro)">FoxPro TEXT Command</link></para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="pp-Endtext">#endtext Directive</link></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
