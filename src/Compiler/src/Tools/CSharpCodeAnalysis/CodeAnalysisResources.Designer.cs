//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.CodeAnalysis {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CodeAnalysisResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CodeAnalysisResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.CodeAnalysis.CSharp.CodeAnalysisResources", typeof(CodeAnalysisResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A language name cannot be specified for this option..
        /// </summary>
        public static string A_language_name_cannot_be_specified_for_this_option {
            get {
                return ResourceManager.GetString("A_language_name_cannot_be_specified_for_this_option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A language name must be specified for this option..
        /// </summary>
        public static string A_language_name_must_be_specified_for_this_option {
            get {
                return ResourceManager.GetString("A_language_name_must_be_specified_for_this_option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Absolute path expected..
        /// </summary>
        public static string AbsolutePathExpected {
            get {
                return ResourceManager.GetString("AbsolutePathExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzer Driver Failure.
        /// </summary>
        public static string AnalyzerDriverFailure {
            get {
                return ResourceManager.GetString("AnalyzerDriverFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzer driver threw an exception of type &apos;{0}&apos; with message &apos;{1}&apos;.
        ///{2}.
        /// </summary>
        public static string AnalyzerDriverThrows {
            get {
                return ResourceManager.GetString("AnalyzerDriverThrows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time (s).
        /// </summary>
        public static string AnalyzerExecutionTimeColumnHeader {
            get {
                return ResourceManager.GetString("AnalyzerExecutionTimeColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzer.
        /// </summary>
        public static string AnalyzerNameColumnHeader {
            get {
                return ResourceManager.GetString("AnalyzerNameColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total analyzer execution time: {0} seconds..
        /// </summary>
        public static string AnalyzerTotalExecutionTime {
            get {
                return ResourceManager.GetString("AnalyzerTotalExecutionTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must either be &apos;default&apos; or have the same length as {1}..
        /// </summary>
        public static string AnonymousTypeArgumentCountMismatch2 {
            get {
                return ResourceManager.GetString("AnonymousTypeArgumentCountMismatch2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} and {1} must have the same length..
        /// </summary>
        public static string AnonymousTypeMemberAndNamesCountMismatch2 {
            get {
                return ResourceManager.GetString("AnonymousTypeMemberAndNamesCountMismatch2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be empty..
        /// </summary>
        public static string ArgumentCannotBeEmpty {
            get {
                return ResourceManager.GetString("ArgumentCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot have a null element..
        /// </summary>
        public static string ArgumentElementCannotBeNull {
            get {
                return ResourceManager.GetString("ArgumentElementCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arrays with more than one dimension cannot be serialized..
        /// </summary>
        public static string Arrays_with_more_than_one_dimension_cannot_be_serialized {
            get {
                return ResourceManager.GetString("Arrays_with_more_than_one_dimension_cannot_be_serialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to assembly.
        /// </summary>
        public static string Assembly {
            get {
                return ResourceManager.GetString("Assembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly file not found.
        /// </summary>
        public static string AssemblyFileNotFound {
            get {
                return ResourceManager.GetString("AssemblyFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly must have at least one module..
        /// </summary>
        public static string AssemblyMustHaveAtLeastOneModule {
            get {
                return ResourceManager.GetString("AssemblyMustHaveAtLeastOneModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly containing type &apos;{0}&apos; references .NET Framework, which is not supported..
        /// </summary>
        public static string AssemblyReferencesNetFramework {
            get {
                return ResourceManager.GetString("AssemblyReferencesNetFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly signing not supported..
        /// </summary>
        public static string AssemblySigningNotSupported {
            get {
                return ResourceManager.GetString("AssemblySigningNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal built-in operator name &apos;{0}&apos;.
        /// </summary>
        public static string BadBuiltInOps1 {
            get {
                return ResourceManager.GetString("BadBuiltInOps1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported built-in operator: {0}.
        /// </summary>
        public static string BadBuiltInOps2 {
            get {
                return ResourceManager.GetString("BadBuiltInOps2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; was not a valid built-in operator name.
        /// </summary>
        public static string BadBuiltInOps3 {
            get {
                return ResourceManager.GetString("BadBuiltInOps3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot deserialize type &apos;{0}&apos;..
        /// </summary>
        public static string Cannot_deserialize_type_0 {
            get {
                return ResourceManager.GetString("Cannot_deserialize_type_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot serialize type &apos;{0}&apos;..
        /// </summary>
        public static string Cannot_serialize_type_0 {
            get {
                return ResourceManager.GetString("Cannot_serialize_type_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t alias a module..
        /// </summary>
        public static string CannotAliasModule {
            get {
                return ResourceManager.GetString("CannotAliasModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create a reference to a module..
        /// </summary>
        public static string CannotCreateReferenceToModule {
            get {
                return ResourceManager.GetString("CannotCreateReferenceToModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create a reference to a submission..
        /// </summary>
        public static string CannotCreateReferenceToSubmission {
            get {
                return ResourceManager.GetString("CannotCreateReferenceToSubmission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t embed interop types from module..
        /// </summary>
        public static string CannotEmbedInteropTypesFromModule {
            get {
                return ResourceManager.GetString("CannotEmbedInteropTypesFromModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot target net module when emitting ref assembly..
        /// </summary>
        public static string CannotTargetNetModuleWhenEmittingRefAssembly {
            get {
                return ResourceManager.GetString("CannotTargetNetModuleWhenEmittingRefAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create a module reference to an assembly..
        /// </summary>
        public static string CantCreateModuleReferenceToAssembly {
            get {
                return ResourceManager.GetString("CantCreateModuleReferenceToAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create a metadata reference to an assembly without location..
        /// </summary>
        public static string CantCreateReferenceToAssemblyWithoutLocation {
            get {
                return ResourceManager.GetString("CantCreateReferenceToAssemblyWithoutLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create a metadata reference to a dynamic assembly..
        /// </summary>
        public static string CantCreateReferenceToDynamicAssembly {
            get {
                return ResourceManager.GetString("CantCreateReferenceToDynamicAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes must be within bounds of SourceText.
        /// </summary>
        public static string ChangesMustBeWithinBoundsOfSourceText {
            get {
                return ResourceManager.GetString("ChangesMustBeWithinBoundsOfSourceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The changes must not overlap..
        /// </summary>
        public static string ChangesMustNotOverlap {
            get {
                return ResourceManager.GetString("ChangesMustNotOverlap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing the version of an assembly reference is not allowed during debugging: &apos;{0}&apos; changed version to &apos;{1}&apos;..
        /// </summary>
        public static string ChangingVersionOfAssemblyReferenceIsNotAllowedDuringDebugging {
            get {
                return ResourceManager.GetString("ChangingVersionOfAssemblyReferenceIsNotAllowedDuringDebugging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class.
        /// </summary>
        public static string Class1 {
            get {
                return ResourceManager.GetString("Class1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32 resources, assumed to be in COFF object format, have one or more invalid relocation header values..
        /// </summary>
        public static string CoffResourceInvalidRelocation {
            get {
                return ResourceManager.GetString("CoffResourceInvalidRelocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32 resources, assumed to be in COFF object format, have an invalid section size..
        /// </summary>
        public static string CoffResourceInvalidSectionSize {
            get {
                return ResourceManager.GetString("CoffResourceInvalidSectionSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32 resources, assumed to be in COFF object format, have one or more invalid symbol values..
        /// </summary>
        public static string CoffResourceInvalidSymbol {
            get {
                return ResourceManager.GetString("CoffResourceInvalidSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32 resources, assumed to be in COFF object format, are missing one or both of sections &apos;.rsrc$01&apos; and &apos;.rsrc$02&apos;.
        /// </summary>
        public static string CoffResourceMissingSection {
            get {
                return ResourceManager.GetString("CoffResourceMissingSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compilation options must not have errors..
        /// </summary>
        public static string CompilationOptionsMustNotHaveErrors {
            get {
                return ResourceManager.GetString("CompilationOptionsMustNotHaveErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The compilation references multiple assemblies whose versions only differ in auto-generated build and/or revision numbers..
        /// </summary>
        public static string CompilationReferencesAssembliesWithDifferentAutoGeneratedVersion {
            get {
                return ResourceManager.GetString("CompilationReferencesAssembliesWithDifferentAutoGeneratedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzer Failure.
        /// </summary>
        public static string CompilerAnalyzerFailure {
            get {
                return ResourceManager.GetString("CompilerAnalyzerFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzer &apos;{0}&apos; threw an exception of type &apos;{1}&apos; with message &apos;{2}&apos;.
        ///{3}.
        /// </summary>
        public static string CompilerAnalyzerThrows {
            get {
                return ResourceManager.GetString("CompilerAnalyzerThrows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to constructor.
        /// </summary>
        public static string Constructor {
            get {
                return ResourceManager.GetString("Constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delegate.
        /// </summary>
        public static string Delegate1 {
            get {
                return ResourceManager.GetString("Delegate1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deserialization reader for &apos;{0}&apos; read incorrect number of values..
        /// </summary>
        public static string Deserialization_reader_for_0_read_incorrect_number_of_values {
            get {
                return ResourceManager.GetString("Deserialization_reader_for_0_read_incorrect_number_of_values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DiagnosticDescriptor must have an Id that is neither null nor an empty string nor a string that only contains white space..
        /// </summary>
        public static string DiagnosticIdCantBeNullOrWhitespace {
            get {
                return ResourceManager.GetString("DiagnosticIdCantBeNullOrWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suppress the following diagnostics to disable this analyzer: {0}.
        /// </summary>
        public static string DisableAnalyzerDiagnosticsMessage {
            get {
                return ResourceManager.GetString("DisableAnalyzerDiagnosticsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument contains duplicate analyzer instances..
        /// </summary>
        public static string DuplicateAnalyzerInstances {
            get {
                return ResourceManager.GetString("DuplicateAnalyzerInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to element is expected.
        /// </summary>
        public static string ElementIsExpected {
            get {
                return ResourceManager.GetString("ElementIsExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedded texts are only supported when emitting a PDB..
        /// </summary>
        public static string EmbeddedTextsRequirePdb {
            get {
                return ResourceManager.GetString("EmbeddedTextsRequirePdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedding PDB is not allowed when emitting metadata..
        /// </summary>
        public static string EmbeddingPdbUnexpectedWhenEmittingMetadata {
            get {
                return ResourceManager.GetString("EmbeddingPdbUnexpectedWhenEmittingMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A key in the pathMap is empty..
        /// </summary>
        public static string EmptyKeyInPathMap {
            get {
                return ResourceManager.GetString("EmptyKeyInPathMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty or invalid file name.
        /// </summary>
        public static string EmptyOrInvalidFileName {
            get {
                return ResourceManager.GetString("EmptyOrInvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty or invalid resource name.
        /// </summary>
        public static string EmptyOrInvalidResourceName {
            get {
                return ResourceManager.GetString("EmptyOrInvalidResourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit and Continue can&apos;t resume suspended asynchronous method since the corresponding await expression has been deleted.
        /// </summary>
        public static string EncCannotResumeSuspendedAsyncMethod {
            get {
                return ResourceManager.GetString("EncCannotResumeSuspendedAsyncMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit and Continue can&apos;t resume suspended iterator since the corresponding yield return statement has been deleted.
        /// </summary>
        public static string EncCannotResumeSuspendedIteratorMethod {
            get {
                return ResourceManager.GetString("EncCannotResumeSuspendedIteratorMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to invoke a deleted lambda or local function implementation. This can happen when lambda or local function is deleted while the application is running..
        /// </summary>
        public static string EncDeletedLambdaInvoked {
            get {
                return ResourceManager.GetString("EncDeletedLambdaInvoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to invoke a deleted method implementation. This can happen when a method is deleted or its name or signature is changed while the application is running..
        /// </summary>
        public static string EncDeletedMethodInvoked {
            get {
                return ResourceManager.GetString("EncDeletedMethodInvoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to invoke lambda or local function with an unsupported change made while the application is running: {0}.
        /// </summary>
        public static string EncLambdaRudeEdit {
            get {
                return ResourceManager.GetString("EncLambdaRudeEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to invoke lambda or local function that has an unsupported change to captured variables made while the application is running.
        /// </summary>
        public static string EncLambdaRudeEdit_CapturedVariables {
            get {
                return ResourceManager.GetString("EncLambdaRudeEdit_CapturedVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;end&apos; must not be less than &apos;start&apos;. start=&apos;{0}&apos; end=&apos;{1}&apos;..
        /// </summary>
        public static string EndMustNotBeLessThanStart {
            get {
                return ResourceManager.GetString("EndMustNotBeLessThanStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enum.
        /// </summary>
        public static string Enum1 {
            get {
                return ResourceManager.GetString("Enum1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to event.
        /// </summary>
        public static string Event1 {
            get {
                return ResourceManager.GetString("Event1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception occurred with following context:
        ///{0}.
        /// </summary>
        public static string ExceptionContext {
            get {
                return ResourceManager.GetString("ExceptionContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: Could not enable multicore JIT due to exception: {0}..
        /// </summary>
        public static string ExceptionEnablingMulticoreJit {
            get {
                return ResourceManager.GetString("ExceptionEnablingMulticoreJit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected non-empty public key.
        /// </summary>
        public static string ExpectedNonEmptyPublicKey {
            get {
                return ResourceManager.GetString("ExpectedNonEmptyPublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not locate the rule set file &apos;{0}&apos;..
        /// </summary>
        public static string FailedToResolveRuleSetName {
            get {
                return ResourceManager.GetString("FailedToResolveRuleSetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to field.
        /// </summary>
        public static string Field {
            get {
                return ResourceManager.GetString("Field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found..
        /// </summary>
        public static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File size exceeds maximum allowed size of a valid metadata file..
        /// </summary>
        public static string FileSizeExceedsMaximumAllowed {
            get {
                return ResourceManager.GetString("FileSizeExceedsMaximumAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generator.
        /// </summary>
        public static string GeneratorNameColumnHeader {
            get {
                return ResourceManager.GetString("GeneratorNameColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total generator execution time: {0} seconds..
        /// </summary>
        public static string GeneratorTotalExecutionTime {
            get {
                return ResourceManager.GetString("GeneratorTotalExecutionTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.GetMetadata() must return an instance of {1}..
        /// </summary>
        public static string GetMetadataMustReturnInstance {
            get {
                return ResourceManager.GetString("GetMetadataMustReturnInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hintName &apos;{0}&apos; contains an invalid character &apos;{1}&apos; at position {2}..
        /// </summary>
        public static string HintNameInvalidChar {
            get {
                return ResourceManager.GetString("HintNameInvalidChar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hintName &apos;{0}&apos; contains an invalid segment &apos;{1}&apos; at position {2}..
        /// </summary>
        public static string HintNameInvalidSegment {
            get {
                return ResourceManager.GetString("HintNameInvalidSegment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hintName &apos;{0}&apos; of the added source file must be unique within a generator..
        /// </summary>
        public static string HintNameUniquePerGenerator {
            get {
                return ResourceManager.GetString("HintNameUniquePerGenerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon stream is not in the expected format..
        /// </summary>
        public static string IconStreamUnexpectedFormat {
            get {
                return ResourceManager.GetString("IconStreamUnexpectedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Including private members should not be used when emitting to the secondary assembly output..
        /// </summary>
        public static string IncludingPrivateMembersUnexpectedWhenEmittingToMetadataPeStream {
            get {
                return ResourceManager.GetString("IncludingPrivateMembersUnexpectedWhenEmittingToMetadataPeStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent language versions.
        /// </summary>
        public static string InconsistentLanguageVersions {
            get {
                return ResourceManager.GetString("InconsistentLanguageVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent syntax tree features.
        /// </summary>
        public static string InconsistentSyntaxTreeFeature {
            get {
                return ResourceManager.GetString("InconsistentSyntaxTreeFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;in-memory assembly&gt;.
        /// </summary>
        public static string InMemoryAssembly {
            get {
                return ResourceManager.GetString("InMemoryAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;in-memory module&gt;.
        /// </summary>
        public static string InMemoryModule {
            get {
                return ResourceManager.GetString("InMemoryModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to interface.
        /// </summary>
        public static string Interface1 {
            get {
                return ResourceManager.GetString("Interface1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current assembly: &apos;{0}&apos;.
        /// </summary>
        public static string InternalsVisibleToCurrentAssembly {
            get {
                return ResourceManager.GetString("InternalsVisibleToCurrentAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Printing &apos;InternalsVisibleToAttribute&apos; information for the current compilation and all referenced assemblies..
        /// </summary>
        public static string InternalsVisibleToHeaderSummary {
            get {
                return ResourceManager.GetString("InternalsVisibleToHeaderSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly reference: &apos;{0}&apos;
        ///  Grants IVT to current assembly: {1}
        ///  Grants IVTs to:.
        /// </summary>
        public static string InternalsVisibleToReferencedAssembly {
            get {
                return ResourceManager.GetString("InternalsVisibleToReferencedAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Assembly name: &apos;{0}&apos;
        ///    Public Keys:.
        /// </summary>
        public static string InternalsVisibleToReferencedAssemblyDetails {
            get {
                return ResourceManager.GetString("InternalsVisibleToReferencedAssemblyDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional file doesn&apos;t belong to the underlying &apos;CompilationWithAnalyzers&apos;..
        /// </summary>
        public static string InvalidAdditionalFile {
            get {
                return ResourceManager.GetString("InvalidAdditionalFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid alias..
        /// </summary>
        public static string InvalidAlias {
            get {
                return ResourceManager.GetString("InvalidAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid assembly name: &apos;{0}&apos;.
        /// </summary>
        public static string InvalidAssemblyName {
            get {
                return ResourceManager.GetString("InvalidAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid characters in assembly culture name.
        /// </summary>
        public static string InvalidCharactersInAssemblyCultureName {
            get {
                return ResourceManager.GetString("InvalidCharactersInAssemblyCultureName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid characters in assembly name.
        /// </summary>
        public static string InvalidCharactersInAssemblyName {
            get {
                return ResourceManager.GetString("InvalidCharactersInAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid compilation options -- submission can&apos;t be signed..
        /// </summary>
        public static string InvalidCompilationOptions {
            get {
                return ResourceManager.GetString("InvalidCompilationOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid content type.
        /// </summary>
        public static string InvalidContentType {
            get {
                return ResourceManager.GetString("InvalidContentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid culture name: &apos;{0}&apos;.
        /// </summary>
        public static string InvalidCultureName {
            get {
                return ResourceManager.GetString("InvalidCultureName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid data at offset {0}: {1}{2}*{3}{4}.
        /// </summary>
        public static string InvalidDataAtOffset {
            get {
                return ResourceManager.GetString("InvalidDataAtOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reported diagnostic has an ID &apos;{0}&apos;, which is not a valid identifier..
        /// </summary>
        public static string InvalidDiagnosticIdReported {
            get {
                return ResourceManager.GetString("InvalidDiagnosticIdReported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reported diagnostic &apos;{0}&apos; has a source location in file &apos;{1}&apos;, which is not part of the compilation being analyzed..
        /// </summary>
        public static string InvalidDiagnosticLocationReported {
            get {
                return ResourceManager.GetString("InvalidDiagnosticLocationReported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reported diagnostic &apos;{0}&apos; has a source location &apos;{1}&apos; in file &apos;{2}&apos;, which is outside of the given file..
        /// </summary>
        public static string InvalidDiagnosticSpanReported {
            get {
                return ResourceManager.GetString("InvalidDiagnosticSpanReported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suppressed diagnostic ID &apos;{0}&apos; does not match suppressable ID &apos;{1}&apos; for the given suppression descriptor..
        /// </summary>
        public static string InvalidDiagnosticSuppressionReported {
            get {
                return ResourceManager.GetString("InvalidDiagnosticSuppressionReported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hash..
        /// </summary>
        public static string InvalidHash {
            get {
                return ResourceManager.GetString("InvalidHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid instrumentation kind: {0}.
        /// </summary>
        public static string InvalidInstrumentationKind {
            get {
                return ResourceManager.GetString("InvalidInstrumentationKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid module name specified in metadata module &apos;{0}&apos;: &apos;{1}&apos;.
        /// </summary>
        public static string InvalidModuleName {
            get {
                return ResourceManager.GetString("InvalidModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node to track is not a descendant of the root..
        /// </summary>
        public static string InvalidNodeToTrack {
            get {
                return ResourceManager.GetString("InvalidNodeToTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given operation block does not belong to the current analysis context..
        /// </summary>
        public static string InvalidOperationBlockForAnalysisContext {
            get {
                return ResourceManager.GetString("InvalidOperationBlockForAnalysisContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid output kind for submission. DynamicallyLinkedLibrary expected..
        /// </summary>
        public static string InvalidOutputKindForSubmission {
            get {
                return ResourceManager.GetString("InvalidOutputKindForSubmission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid public key..
        /// </summary>
        public static string InvalidPublicKey {
            get {
                return ResourceManager.GetString("InvalidPublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid public key token..
        /// </summary>
        public static string InvalidPublicKeyToken {
            get {
                return ResourceManager.GetString("InvalidPublicKeyToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while loading the included rule set file {0} - {1}.
        /// </summary>
        public static string InvalidRuleSetInclude {
            get {
                return ResourceManager.GetString("InvalidRuleSetInclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid size of public key token..
        /// </summary>
        public static string InvalidSizeOfPublicKeyToken {
            get {
                return ResourceManager.GetString("InvalidSizeOfPublicKeyToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax tree doesn&apos;t belong to the underlying &apos;Compilation&apos;..
        /// </summary>
        public static string InvalidTree {
            get {
                return ResourceManager.GetString("InvalidTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; must be an &apos;INamedTypeSymbol&apos; or an &apos;IAssemblySymbol&apos;..
        /// </summary>
        public static string IsSymbolAccessibleBadWithin {
            get {
                return ResourceManager.GetString("IsSymbolAccessibleBadWithin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; must be a symbol from this compilation or some referenced assembly..
        /// </summary>
        public static string IsSymbolAccessibleWrongAssembly {
            get {
                return ResourceManager.GetString("IsSymbolAccessibleWrongAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument to &apos;/keepalive&apos; option is not a 32-bit integer..
        /// </summary>
        public static string KeepAliveIsNotAnInteger {
            get {
                return ResourceManager.GetString("KeepAliveIsNotAnInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments to &apos;/keepalive&apos; option below -1 are invalid..
        /// </summary>
        public static string KeepAliveIsTooSmall {
            get {
                return ResourceManager.GetString("KeepAliveIsTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;/keepalive&apos; option is only valid with &apos;/shared&apos; option..
        /// </summary>
        public static string KeepAliveWithoutShared {
            get {
                return ResourceManager.GetString("KeepAliveWithoutShared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested line number {0} must be less than the number of lines {1}..
        /// </summary>
        public static string LineCannotBeGreaterThanEnd {
            get {
                return ResourceManager.GetString("LineCannotBeGreaterThanEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata PE stream should not be given when emitting metadata only..
        /// </summary>
        public static string MetadataPeStreamUnexpectedWhenEmittingMetadataOnly {
            get {
                return ResourceManager.GetString("MetadataPeStreamUnexpectedWhenEmittingMetadataOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetadataReference &apos;{0}&apos; not found to remove..
        /// </summary>
        public static string MetadataRefNotFoundToRemove1 {
            get {
                return ResourceManager.GetString("MetadataRefNotFoundToRemove1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to method.
        /// </summary>
        public static string Method {
            get {
                return ResourceManager.GetString("Method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method symbol expected.
        /// </summary>
        public static string MethodSymbolExpected {
            get {
                return ResourceManager.GetString("MethodSymbolExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roslyn compiler server reports different protocol version than build task..
        /// </summary>
        public static string MismatchedVersion {
            get {
                return ResourceManager.GetString("MismatchedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing argument for &apos;/keepalive&apos; option..
        /// </summary>
        public static string MissingKeepAlive {
            get {
                return ResourceManager.GetString("MissingKeepAlive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item specified is not the element of a list..
        /// </summary>
        public static string MissingListItem {
            get {
                return ResourceManager.GetString("MissingListItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to module.
        /// </summary>
        public static string Module {
            get {
                return ResourceManager.GetString("Module", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module copy can&apos;t be used to create an assembly metadata..
        /// </summary>
        public static string ModuleCopyCannotBeUsedToCreateAssemblyMetadata {
            get {
                return ResourceManager.GetString("ModuleCopyCannotBeUsedToCreateAssemblyMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module has invalid attributes..
        /// </summary>
        public static string ModuleHasInvalidAttributes {
            get {
                return ResourceManager.GetString("ModuleHasInvalidAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NOTE: Elapsed time may be less than analyzer execution time because analyzers can run concurrently..
        /// </summary>
        public static string MultithreadedAnalyzerExecutionNote {
            get {
                return ResourceManager.GetString("MultithreadedAnalyzerExecutionNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must include private members unless emitting a ref assembly..
        /// </summary>
        public static string MustIncludePrivateMembersUnlessRefAssembly {
            get {
                return ResourceManager.GetString("MustIncludePrivateMembersUnlessRefAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot be empty..
        /// </summary>
        public static string NameCannotBeEmpty {
            get {
                return ResourceManager.GetString("NameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot be null..
        /// </summary>
        public static string NameCannotBeNull {
            get {
                return ResourceManager.GetString("NameCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot start with whitespace..
        /// </summary>
        public static string NameCannotStartWithWhitespace {
            get {
                return ResourceManager.GetString("NameCannotStartWithWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name contains invalid characters..
        /// </summary>
        public static string NameContainsInvalidCharacter {
            get {
                return ResourceManager.GetString("NameContainsInvalidCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No analyzers found.
        /// </summary>
        public static string NoAnalyzersFound {
            get {
                return ResourceManager.GetString("NoAnalyzersFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node or token is out of sequence..
        /// </summary>
        public static string NodeOrTokenOutOfSequence {
            get {
                return ResourceManager.GetString("NodeOrTokenOutOfSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-reported diagnostic with ID &apos;{0}&apos; cannot be suppressed..
        /// </summary>
        public static string NonReportedDiagnosticCannotBeSuppressed {
            get {
                return ResourceManager.GetString("NonReportedDiagnosticCannotBeSuppressed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given operation has a non-null parent..
        /// </summary>
        public static string NotARootOperation {
            get {
                return ResourceManager.GetString("NotARootOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing.
        /// </summary>
        public static string Nothing {
            get {
                return ResourceManager.GetString("Nothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value in the pathMap is null..
        /// </summary>
        public static string NullValueInPathMap {
            get {
                return ResourceManager.GetString("NullValueInPathMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given operation has a null semantic model..
        /// </summary>
        public static string OperationHasNullSemanticModel {
            get {
                return ResourceManager.GetString("OperationHasNullSemanticModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided operation must not be part of a Control Flow Graph..
        /// </summary>
        public static string OperationMustNotBeControlFlowGraphPart {
            get {
                return ResourceManager.GetString("OperationMustNotBeControlFlowGraphPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output kind not supported..
        /// </summary>
        public static string OutputKindNotSupported {
            get {
                return ResourceManager.GetString("OutputKindNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to parameter.
        /// </summary>
        public static string Parameter {
            get {
                return ResourceManager.GetString("Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path returned by {0}.ResolveMetadataFile must be absolute: &apos;{1}&apos;.
        /// </summary>
        public static string PathReturnedByResolveMetadataFileMustBeAbsolute {
            get {
                return ResourceManager.GetString("PathReturnedByResolveMetadataFileMustBeAbsolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path returned by {0}.ResolveStrongNameKeyFile must be absolute: &apos;{1}&apos;.
        /// </summary>
        public static string PathReturnedByResolveStrongNameKeyFileMustBeAbsolute {
            get {
                return ResourceManager.GetString("PathReturnedByResolveStrongNameKeyFileMustBeAbsolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PDB stream should not be given when embedding PDB into the PE stream..
        /// </summary>
        public static string PdbStreamUnexpectedWhenEmbedding {
            get {
                return ResourceManager.GetString("PdbStreamUnexpectedWhenEmbedding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PDB stream should not be given when emitting metadata only..
        /// </summary>
        public static string PdbStreamUnexpectedWhenEmittingMetadataOnly {
            get {
                return ResourceManager.GetString("PdbStreamUnexpectedWhenEmittingMetadataOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PE image doesn&apos;t contain managed metadata..
        /// </summary>
        public static string PEImageDoesntContainManagedMetadata {
            get {
                return ResourceManager.GetString("PEImageDoesntContainManagedMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PE image not available..
        /// </summary>
        public static string PEImageNotAvailable {
            get {
                return ResourceManager.GetString("PEImageNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Previous submission has errors..
        /// </summary>
        public static string PreviousSubmissionHasErrors {
            get {
                return ResourceManager.GetString("PreviousSubmissionHasErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to property, indexer.
        /// </summary>
        public static string Property {
            get {
                return ResourceManager.GetString("Property", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference of type &apos;{0}&apos; is not valid for this compilation..
        /// </summary>
        public static string ReferenceOfTypeIsInvalid1 {
            get {
                return ResourceManager.GetString("ReferenceOfTypeIsInvalid1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference resolver should return readable non-null stream..
        /// </summary>
        public static string ReferenceResolverShouldReturnReadableNonNullStream {
            get {
                return ResourceManager.GetString("ReferenceResolverShouldReturnReadableNonNullStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource data provider should return non-null stream.
        /// </summary>
        public static string ResourceDataProviderShouldReturnNonNullStream {
            get {
                return ResourceManager.GetString("ResourceDataProviderShouldReturnNonNullStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource stream ended at {0} bytes, expected {1} bytes..
        /// </summary>
        public static string ResourceStreamEndedUnexpectedly {
            get {
                return ResourceManager.GetString("ResourceStreamEndedUnexpectedly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource stream provider should return non-null stream..
        /// </summary>
        public static string ResourceStreamProviderShouldReturnNonNullStream {
            get {
                return ResourceManager.GetString("ResourceStreamProviderShouldReturnNonNullStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to return.
        /// </summary>
        public static string Return1 {
            get {
                return ResourceManager.GetString("Return1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return type can&apos;t be a value type, pointer, by-ref or open generic type.
        /// </summary>
        public static string ReturnTypeCannotBeValuePointerbyRefOrOpen {
            get {
                return ResourceManager.GetString("ReturnTypeCannotBeValuePointerbyRefOrOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return type can&apos;t be void, by-ref or open generic type.
        /// </summary>
        public static string ReturnTypeCannotBeVoidByRefOrOpen {
            get {
                return ResourceManager.GetString("ReturnTypeCannotBeVoidByRefOrOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute {0} has an invalid value of {1}..
        /// </summary>
        public static string RuleSetBadAttributeValue {
            get {
                return ResourceManager.GetString("RuleSetBadAttributeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The rule set file has duplicate rules for &apos;{0}&apos; with differing actions &apos;{1}&apos; and &apos;{2}&apos;..
        /// </summary>
        public static string RuleSetHasDuplicateRules {
            get {
                return ResourceManager.GetString("RuleSetHasDuplicateRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element {0} is missing an attribute named {1}..
        /// </summary>
        public static string RuleSetMissingAttribute {
            get {
                return ResourceManager.GetString("RuleSetMissingAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to separator is expected.
        /// </summary>
        public static string SeparatorIsExpected {
            get {
                return ResourceManager.GetString("SeparatorIsExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value for argument &apos;/shared:&apos; must not be empty.
        /// </summary>
        public static string SharedArgumentMissing {
            get {
                return ResourceManager.GetString("SharedArgumentMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The temporary path for legacy file signing is unavailable..
        /// </summary>
        public static string SigningTempPathUnavailable {
            get {
                return ResourceManager.GetString("SigningTempPathUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only a single {0} can be registered per generator..
        /// </summary>
        public static string Single_type_per_generator_0 {
            get {
                return ResourceManager.GetString("Single_type_per_generator_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size has to be positive..
        /// </summary>
        public static string SizeHasToBePositive {
            get {
                return ResourceManager.GetString("SizeHasToBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceText cannot be embedded. Provide encoding or canBeEmbedded=true at construction..
        /// </summary>
        public static string SourceTextCannotBeEmbedded {
            get {
                return ResourceManager.GetString("SourceTextCannotBeEmbedded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SourceText with hintName &apos;{0}&apos; must have an explicit encoding set..
        /// </summary>
        public static string SourceTextRequiresEncoding {
            get {
                return ResourceManager.GetString("SourceTextRequiresEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The span does not include the end of a line..
        /// </summary>
        public static string SpanDoesNotIncludeEndOfLine {
            get {
                return ResourceManager.GetString("SpanDoesNotIncludeEndOfLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The span does not include the start of a line..
        /// </summary>
        public static string SpanDoesNotIncludeStartOfLine {
            get {
                return ResourceManager.GetString("SpanDoesNotIncludeStartOfLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;start&apos; must not be negative.
        /// </summary>
        public static string StartMustNotBeNegative {
            get {
                return ResourceManager.GetString("StartMustNotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream contains invalid data.
        /// </summary>
        public static string Stream_contains_invalid_data {
            get {
                return ResourceManager.GetString("Stream_contains_invalid_data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream is too long..
        /// </summary>
        public static string StreamIsTooLong {
            get {
                return ResourceManager.GetString("StreamIsTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream must be readable..
        /// </summary>
        public static string StreamMustSupportRead {
            get {
                return ResourceManager.GetString("StreamMustSupportRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream must support read and seek operations..
        /// </summary>
        public static string StreamMustSupportReadAndSeek {
            get {
                return ResourceManager.GetString("StreamMustSupportReadAndSeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream must be writable..
        /// </summary>
        public static string StreamMustSupportWrite {
            get {
                return ResourceManager.GetString("StreamMustSupportWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to struct.
        /// </summary>
        public static string Struct1 {
            get {
                return ResourceManager.GetString("Struct1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzer &apos;{0}&apos; contains a null descriptor in its &apos;SupportedDiagnostics&apos;..
        /// </summary>
        public static string SupportedDiagnosticsHasNullDescriptor {
            get {
                return ResourceManager.GetString("SupportedDiagnosticsHasNullDescriptor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzer &apos;{0}&apos; contains a null descriptor in its &apos;SupportedSuppressions&apos;..
        /// </summary>
        public static string SupportedSuppressionsHasNullDescriptor {
            get {
                return ResourceManager.GetString("SupportedSuppressionsHasNullDescriptor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagnostic &apos;{0}: {1}&apos; was programmatically suppressed by a DiagnosticSuppressor with suppression ID &apos;{2}&apos; and justification &apos;{3}&apos;.
        /// </summary>
        public static string SuppressionDiagnosticDescriptorMessage {
            get {
                return ResourceManager.GetString("SuppressionDiagnosticDescriptorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Programmatic suppression of an analyzer diagnostic.
        /// </summary>
        public static string SuppressionDiagnosticDescriptorTitle {
            get {
                return ResourceManager.GetString("SuppressionDiagnosticDescriptorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SuppressionDescriptor must have an Id that is neither null nor an empty string nor a string that only contains white space..
        /// </summary>
        public static string SuppressionIdCantBeNullOrWhitespace {
            get {
                return ResourceManager.GetString("SuppressionIdCantBeNullOrWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows PDB writer doesn&apos;t support SourceLink feature: &apos;{0}&apos;.
        /// </summary>
        public static string SymWriterDoesNotSupportSourceLink {
            get {
                return ResourceManager.GetString("SymWriterDoesNotSupportSourceLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows PDB writer doesn&apos;t support deterministic compilation: &apos;{0}&apos;.
        /// </summary>
        public static string SymWriterNotDeterministic {
            get {
                return ResourceManager.GetString("SymWriterNotDeterministic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of Windows PDB writer is older than required: &apos;{0}&apos;.
        /// </summary>
        public static string SymWriterOlderVersionThanRequired {
            get {
                return ResourceManager.GetString("SymWriterOlderVersionThanRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is not understood by the serialization binder..
        /// </summary>
        public static string The_type_0_is_not_understood_by_the_serialization_binder {
            get {
                return ResourceManager.GetString("The_type_0_is_not_understood_by_the_serialization_binder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream cannot be read from..
        /// </summary>
        public static string TheStreamCannotBeReadFrom {
            get {
                return ResourceManager.GetString("TheStreamCannotBeReadFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream cannot be written to..
        /// </summary>
        public static string TheStreamCannotBeWrittenTo {
            get {
                return ResourceManager.GetString("TheStreamCannotBeWrittenTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If tuple element locations are specified, the number of locations must match the cardinality of the tuple..
        /// </summary>
        public static string TupleElementLocationCountMismatch {
            get {
                return ResourceManager.GetString("TupleElementLocationCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If tuple element names are specified, the number of element names must match the cardinality of the tuple..
        /// </summary>
        public static string TupleElementNameCountMismatch {
            get {
                return ResourceManager.GetString("TupleElementNameCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuple element name cannot be an empty string..
        /// </summary>
        public static string TupleElementNameEmpty {
            get {
                return ResourceManager.GetString("TupleElementNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If tuple element nullable annotations are specified, the number of annotations must match the cardinality of the tuple..
        /// </summary>
        public static string TupleElementNullableAnnotationCountMismatch {
            get {
                return ResourceManager.GetString("TupleElementNullableAnnotationCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuples must have at least two elements..
        /// </summary>
        public static string TuplesNeedAtLeastTwoElements {
            get {
                return ResourceManager.GetString("TuplesNeedAtLeastTwoElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying type for a tuple must be tuple-compatible..
        /// </summary>
        public static string TupleUnderlyingTypeMustBeTupleCompatible {
            get {
                return ResourceManager.GetString("TupleUnderlyingTypeMustBeTupleCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type must be a subclass of SyntaxAnnotation..
        /// </summary>
        public static string TypeMustBeASubclassOfSyntaxAnnotation {
            get {
                return ResourceManager.GetString("TypeMustBeASubclassOfSyntaxAnnotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type must be same as host object type of previous submission..
        /// </summary>
        public static string TypeMustBeSameAsHostObjectTypeOfPreviousSubmission {
            get {
                return ResourceManager.GetString("TypeMustBeSameAsHostObjectTypeOfPreviousSubmission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type parameter.
        /// </summary>
        public static string TypeParameter {
            get {
                return ResourceManager.GetString("TypeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine specific cause of the failure..
        /// </summary>
        public static string UnableToDetermineSpecificCauseOfFailure {
            get {
                return ResourceManager.GetString("UnableToDetermineSpecificCauseOfFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node in the list is not of the expected type..
        /// </summary>
        public static string UnexpectedTypeOfNodeInList {
            get {
                return ResourceManager.GetString("UnexpectedTypeOfNodeInList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized resource file format..
        /// </summary>
        public static string UnrecognizedResourceFileFormat {
            get {
                return ResourceManager.GetString("UnrecognizedResourceFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unresolved: .
        /// </summary>
        public static string Unresolved {
            get {
                return ResourceManager.GetString("Unresolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument contains an analyzer instance that does not belong to the &apos;Analyzers&apos; for this CompilationWithAnalyzers instance..
        /// </summary>
        public static string UnsupportedAnalyzerInstance {
            get {
                return ResourceManager.GetString("UnsupportedAnalyzerInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reported diagnostic with ID &apos;{0}&apos; is not supported by the analyzer..
        /// </summary>
        public static string UnsupportedDiagnosticReported {
            get {
                return ResourceManager.GetString("UnsupportedDiagnosticReported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported hash algorithm..
        /// </summary>
        public static string UnsupportedHashAlgorithm {
            get {
                return ResourceManager.GetString("UnsupportedHashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reported suppression with ID &apos;{0}&apos; is not supported by the suppressor..
        /// </summary>
        public static string UnsupportedSuppressionReported {
            get {
                return ResourceManager.GetString("UnsupportedSuppressionReported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value too large to be represented as a 30 bit unsigned integer..
        /// </summary>
        public static string Value_too_large_to_be_represented_as_a_30_bit_unsigned_integer {
            get {
                return ResourceManager.GetString("Value_too_large_to_be_represented_as_a_30_bit_unsigned_integer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WindowsRuntime identity can&apos;t be retargetable.
        /// </summary>
        public static string WinRTIdentityCantBeRetargetable {
            get {
                return ResourceManager.GetString("WinRTIdentityCantBeRetargetable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global analyzer config section name &apos;{0}&apos; is invalid as it is not an absolute path. Section will be ignored. Section was declared in file: &apos;{1}&apos;.
        /// </summary>
        public static string WRN_InvalidGlobalSectionName {
            get {
                return ResourceManager.GetString("WRN_InvalidGlobalSectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global analyzer config section name is invalid as it is not an absolute path. Section will be ignored..
        /// </summary>
        public static string WRN_InvalidGlobalSectionName_Title {
            get {
                return ResourceManager.GetString("WRN_InvalidGlobalSectionName_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The diagnostic &apos;{0}&apos; was given an invalid severity &apos;{1}&apos; in the analyzer config file at &apos;{2}&apos;..
        /// </summary>
        public static string WRN_InvalidSeverityInAnalyzerConfig {
            get {
                return ResourceManager.GetString("WRN_InvalidSeverityInAnalyzerConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid severity in analyzer config file..
        /// </summary>
        public static string WRN_InvalidSeverityInAnalyzerConfig_Title {
            get {
                return ResourceManager.GetString("WRN_InvalidSeverityInAnalyzerConfig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple global analyzer config files set the same key &apos;{0}&apos; in section &apos;{1}&apos;. It has been unset. Key was set by the following files: &apos;{2}&apos;.
        /// </summary>
        public static string WRN_MultipleGlobalAnalyzerKeys {
            get {
                return ResourceManager.GetString("WRN_MultipleGlobalAnalyzerKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple global analyzer config files set the same key. It has been unset..
        /// </summary>
        public static string WRN_MultipleGlobalAnalyzerKeys_Title {
            get {
                return ResourceManager.GetString("WRN_MultipleGlobalAnalyzerKeys_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to References to XML documents are not supported..
        /// </summary>
        public static string XmlReferencesNotSupported {
            get {
                return ResourceManager.GetString("XmlReferencesNotSupported", resourceCulture);
            }
        }
    }
}
