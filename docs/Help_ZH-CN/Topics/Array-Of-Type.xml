<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-25T20:52:53.520+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Array Of 类型</title>
  <keywords>
    <keyword>ARRAY OF</keyword>
    <keyword>XSharp.__ArrayBase</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Array Of 类型</para>
    </header>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">该类型用于类型化数组。它已在 X# 运行时中引入。内部类型名是 XSharp.__ArrayBase 。</para>
    <para styleclass="Normal"><br/>下面的代码展示了如何使用它。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">许多接受数组的现有 XBase 运行时函数现在也接受 ARRAY OF。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">期望使用数组代码块的运行时函数期望使用 ARRAY OF 的 Lambda 表达式。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">不同之处在于 Lambda 表达式的参数将是类型化的，因此无需后期绑定。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">代码块的参数始终是 usual 类型，因此要么需要后期绑定支持，要么需要在代码块内将其转换为正确的类型。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">我们还引入了一种特殊的多维语法。在下面的示例中，您还可以使用以下语法获取数组中第一个开发人员的名字：</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; cFirst := aDevelopers[1, &quot;FirstName&quot;]</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">当你使用现有的生成代码，而现有代码使用 DEFINE 来定义多维数组中的元素时，这可能会很有用。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">如果你有一个(生成的)定义，如</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">DEFINE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DEVELOPER_FirstName := 1</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">然后，您可以更改代码生成器，生成以下代码</text></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">DEFINE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DEVELOPER_FirstName := &quot;FirstName&quot;</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">使用 DEFINE 的代码可以保持不变</text></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; cFirst := aDevelopers[1, DEVELOPER_FirstName]</text></para>
    <para styleclass="Heading3">示例代码</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// 声明 Developer 对象为 Array Of 数组 &#160; &#160; </text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> aDevelopers </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ARRAY OF Developer &#160; &#160; &#160; &#160; &#160;</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// 使用 &quot;普通 &quot;数组语法初始化数组</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">aDevelopers &#160; := {}</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// AAdd 也支持 Array 类型</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AAdd(aDevelopers, Developer &#160;{ &quot;Chris&quot;,&quot;Pyrgas&quot;})</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AAdd(aDevelopers, Developer &#160;{ &quot;Nikos&quot;, &quot;Kokkalis&quot;})</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AAdd(aDevelopers, Developer &#160;{ &quot;Fabrice&quot;, &quot;Foray&quot;})</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AAdd(aDevelopers, Developer &#160;{ &quot;Robert&quot;, &quot;van der Hulst&quot;}) &#160; &#160;</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// AEval 知道每个元素都是一个 Developer</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AEval(aDevelopers, { d =&gt; Console.WriteLine(d)})</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// ASort 知道类型并将正确的类型传递给 lambda 表达式。</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// 编译器和运行时 &quot;知道 &quot;x 和 y 是 Developer 对象，并将生成早期绑定代码</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">ASort( aDevelopers, 1, ALen(aDevelopers), { x, y =&gt; x:LastName &lt; y:LastName}) &#160; </text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// Foreach 知道每个元素都是一个 Developer 对象</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FOREACH</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VAR</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oDeveloper IN aDevelopers &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? oDeveloper:LastName, oDeveloper:FirstName</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">NEXT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Developer</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROPERTY</text><text style="font-weight:normal; font-style:normal; color:#000000;"> FirstName </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; color:#000000;"> AUTO</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROPERTY</text><text style="font-weight:normal; font-style:normal; color:#000000;"> LastName </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; color:#000000;"> AUTO &#160;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;CONSTRUCTOR()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CONSTRUCTOR</text><text style="font-weight:normal; font-style:normal; color:#000000;"> (cFirst </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; color:#000000;">, cLast </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; color:#000000;">)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;FirstName := cFirst</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;LastName &#160;:= cLast</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ToString() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Firstname+&quot; &quot; + LastName</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text></para>
  </body>
</topic>
