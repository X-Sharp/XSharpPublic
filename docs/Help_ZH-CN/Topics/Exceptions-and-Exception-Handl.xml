<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-26T09:39:42.505+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>异常和异常处理</title>
  <body>
    <header>
      <para styleclass="Heading1">异常和异常处理</para>
    </header>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">在 X# 中，程序运行时出现的错误会通过异常机制在程序中传播。异常由遇到错误的代码抛出，并由可以纠正错误的代码捕获。异常可以由 .NET Framework 通用语言运行时（CLR）或程序中的代码抛出。异常一旦被抛出，就会在调用堆栈中向上传播，直到找到异常的捕获语句为止。未捕获的异常由系统提供的通用异常处理程序处理，该程序会显示一个对话框。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">异常由 Exception 派生的类表示。该类可识别异常类型，并包含有关异常详细信息的属性。抛出异常包括创建一个异常派生类的实例，可选择配置异常的属性，然后使用 throw 关键字抛出对象。例如</para>
    <para styleclass="Code Example"><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> CustomException </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INHERIT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Exception</text><br/><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CONSTRUCTOR</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">(message </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">)</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">SUPER</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">(message)</text><br/><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CLASS</text><br/><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> TestThrow </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VOID</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> ex </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> CustomException </text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">ex := CustomException{&quot;Custom exception in TestThrow()}</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">THROW</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> ex</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">RETURN</text></para>
    <para styleclass="Body Text">异常抛出后，运行时会检查当前语句是否在 try 代码块中。如果是，运行时将检查与 try 代码块相关的 catch 代码块，看它们是否能捕获异常。catch 块通常指定异常类型；如果 catch &#160;块的类型与异常类型相同，或者是异常的基类，则捕获块可以处理该方法。例如</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> TestCatch </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VOID</text><br/><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">TRY</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160;TestThrow()</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CATCH</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> ex </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> CustomException</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160;System.Console.WriteLine(ex.ToString())</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">TRY</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">RETURN</text></para>
    <para styleclass="Body Text">如果抛出异常的语句不在 try 代码块中，或者包围它的 try 代码块中没有匹配的 catch 代码块，运行时就会检查调用方法中的 try 语句和 catch 代码块。运行时会继续在调用栈中查找兼容的 catch 块。找到并执行捕获块后，控制权将传递给该捕获块后的下一条语句。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">一个 try 语句可以包含多个 catch 块。第一个能处理异常的 catch 语句会被执行；后面的任何 catch 语句，即使是兼容的，也会被忽略。因此，catch 块的排序应从最特殊(或派生层次最深)到最不特殊。</para>
    <para styleclass="Body Text"></para>
  </body>
</topic>
