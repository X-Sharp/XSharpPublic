<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>ASSIGN Statement</title>
  <keywords>
    <keyword>ASSIGN statement</keyword>
    <keyword>Assign() Methods</keyword>
    <keyword>Compile-time declaration</keyword>
    <keyword>Declaration statements</keyword>
    <keyword>Entity declaration</keyword>
    <keyword>Instance variables<keyword>assigning values</keyword></keyword>
    <keyword>Methods<keyword>assigning values to instance variables</keyword></keyword>
    <keyword>Statements</keyword>
    <keyword>Strong typing<keyword>defined</keyword></keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">ASSIGN Statement</para>
    </header>
    <para styleclass="Heading1">Purpose</para>
    <para styleclass="Normal">Declare a method to assign a value to a particular instance variable.</para>
    <para styleclass="Heading1">Syntax</para>
    <para styleclass="Normal"><tab />[Attributes] [Modifiers] <text style="font-weight:bold;">ASSIGN </text>&lt;<text styleclass="Italic">idVar</text>&gt;</para>
    <para styleclass="Normal"><tab />[([&lt;<text styleclass="Italic">idParam</text>&gt; [AS | REF &lt;<text styleclass="Italic">idType</text>&gt;] [, ...])] </para>
    <para styleclass="Normal"><tab />[AS &lt;<text styleclass="Italic">idType</text>&gt;] [&lt;<text styleclass="Italic">idConvention</text>&gt;]</para>
    <para styleclass="Normal"><tab />[CLASS &lt;<text styleclass="Italic">idClass</text>&gt;]</para>
    <para styleclass="Normal"><tab />[=&gt; &lt;expression&gt;]</para>
    <para styleclass="Normal"><tab /><text style="font-weight:bold;">CRLF</text></para>
    <para styleclass="Normal"><tab />[&lt;<text styleclass="Italic">Body</text>&gt;]</para>
    <para styleclass="Normal"><tab />[END ACCESS]</para>
    <para styleclass="Heading1">Arguments</para>
    <para styleclass="Normal"><snippet src="__IncludeMethodModifiers" inline="false"/></para>
    <para styleclass="List">&lt;idVar&gt;<tab />A valid identifier name for the instance variable whose assign method you are defining. &#160;Like other methods, assign methods are entities; however, the system uses a unique naming scheme for them to prevent collisions with other entity names. &#160;Assign method names must be unique within a class, but can share the same name as other entities in your application.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><snippet src="__IncludeMethodParameters" inline="false"/></para>
    <para styleclass="List"><snippet src="__IncludeBody" inline="false"/></para>
    <para styleclass="List">END ASSIGN<tab />Optional end clause to indicate the end of the ASSIGN entity</para>
    <para styleclass="Heading1">Description</para>
    <para styleclass="Normal">ASSIGN declares a special method, called an assign method, that is automatically executed each time you assign a value to the named instance variable (e.g., &lt;<text styleclass="Italic">idVar</text>&gt; := &lt;<text styleclass="Italic">uValue</text>&gt;). &#160;The value on the right-hand side of the assignment operator is passed to the ASSIGN method as an argument.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">You can define four types of instance variables in a CLASS declaration. &#160;All of these, except EXPORT, are called <text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">non-exported </text>instance variables because they are not directly accessible externally (i.e., outside of the class).</para>
    <para styleclass="Normal">For example, if you want to assign a value to a non-exported variable in a function, you must use a method. &#160;This means that the interface for assigning to instance variables is dependent on the implementation of the class. &#160;Assign methods give you a common syntax for assigning values to all instance variables. &#160;Used in conjunction with access methods (see the ACCESS statement in this guide), assign methods let you enforce encapsulation principles in your application while maintaining a stable class interface.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The following example illustrates using a traditional method for assigning a value to a non-exported instance variable. &#160;Note the difference in assigning values to the instance variables <text styleclass="Italic">x </text>and <text styleclass="Italic">y </text>in UseClass():</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">EXPORT</text><text style="font-weight:bold; font-style:normal; color:#000000;"> x</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">INSTANCE</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:bold; font-style:normal; color:#000000;"> PutValueY</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">nPut</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">y </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nPut</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:bold; font-style:normal; color:#000000;"> UseClass</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oTest </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{}</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">?</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">x </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">100</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">?</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">PutValueY</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(100)</text><tab /><text style="font-weight:bold; font-style:normal; color:#ff00ff;">// Using regular method</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">If you replace the method with an assign method, as follows, the syntax for assignment to both variables is the same:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">ASSIGN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">nPut</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">y </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nPut</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y</text></para>
    <para styleclass="Code Example"><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:bold; font-style:normal; color:#000000;"> UseClass</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oTest </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{}</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">?</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">x </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">100</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">?</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">y </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">100</text><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#ff00ff;">// Using ASSIGN method</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Note: &#160;</text>ASSIGN methods should generally return the actual assigned value to ensure that the hypothetical variable it represents actually behaves like a variable — technically, that assignment is associative. &#160;This will allow chained assignments the same way as for regular variables (e.g., <text styleclass="Italic">Var2 := oTest1:y := oTest1:x := Var1 := 10000</text>).</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Non-exported variables come in three categories, each with its own properties (see the CLASS statement entry in this guide for details):</para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none; font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><tab /><tab /><text styleclass="Normal">INSTANCE</text></li>
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><tab /><tab /><text styleclass="Normal">PROTECT</text></li>
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><tab /><tab /><text styleclass="Normal">HIDDEN</text></li>
    </list>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">INSTANCE variables are specifically designed to work with assign and access methods which is the main reason for their late binding. &#160;By defining an assign method with the same name as an INSTANCE variable, you effectively override the variable by causing all assignment references, both external and internal, to invoke the assign method. &#160;The exception is that within an assign (or access) method, instance variables of the same name refer to the variable — otherwise, you would never get anywhere.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">You can also use PROTECT and HIDDEN variables in conjunction with assign methods. &#160;By defining an assign method with the same name as a PROTECT or HIDDEN variable, you can make assignments to the variable externally using the same syntax as you would inside the class. &#160;Internal references, however, always refer directly to the variable because of early binding.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Of course, you do not have to give the assign method and the instance variable the same name. &#160;This is only for your convenience. &#160;It is the method itself that determines which instance variable name to use when you access &lt;<text styleclass="Italic">idVar</text>&gt; via an assignment. &#160;Thus, for PROTECT/HIDDEN variables, you can provide an assign method with a different name. &#160;For example:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Person</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROTECT</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Name_Protected</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ASSIGN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Name</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">cPutName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Person</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">Name_Protected </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cPutName</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Name_Protected</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">EXPORT variables are a lot faster and easier to use than non-exported variables and assign methods, but using them defies the encapsulation that you should strive for to further the integrity of your application. &#160;Using assign and access methods, you can use exported variables early in the prototyping stage of an application, and later protect the variables with methods without changing the class interface.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">ASSIGN is a special case of METHOD and, except for the way you invoke it (i.e., without arguments, like an instance variable), its behavior is the same as any other method. &#160;See the METHOD statement in this guide for more details.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Note: &#160;</text>Internal references to access methods that do not have a corresponding regular INSTANCE variable (e.g., virtual variables or public access to HIDDEN or PROTECT variables with different names) must use the SELF: &#160;prefix. &#160;Internal references means references from inside methods of the class or one of its subclasses. &#160;If the system does not find an instance variable, it assumes a memory variable (which can produce a compiler error depending on whether Allow Undeclared Variables has been chosen in the compiler settings), and it does not attempt to identify the reference as an access method, unless SELF: &#160;is used.</para>
    <para styleclass="Normal"><snippet src="__IncludeStrongTyping" inline="false"/></para>
    <para styleclass="Heading1">Examples</para>
    <para styleclass="Normal">The following example uses ASSIGN to establish a public protocol for making assignments to INSTANCE variables:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Rectangle</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">INSTANCE</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Length</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Height </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ASSIGN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Length</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">nX</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Rectangle</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">Length </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nX</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Length</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ASSIGN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Height</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">nY</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Rectangle</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">Height </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nY</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Height</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:bold; font-style:normal; color:#000000;"> UseClass</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oShape </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Rectangle</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oShape </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Rectangle</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{}</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oShape</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">Length </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">3</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oShape</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">Height </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">4a</text></para>
    <para styleclass="Heading1">See Also</para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_ACCESS">ACCESS</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_CLASS">CLASS</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_METHOD">METHOD</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_PROPERTY">PROPERTY</link></para>
  </body>
</topic>
