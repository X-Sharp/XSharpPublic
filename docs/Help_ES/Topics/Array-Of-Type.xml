<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Array Of Type</title>
  <keywords>
    <keyword>ARRAY OF</keyword>
    <keyword>XSharp.__ArrayBase</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Array Of Type</para>
    </header>
    <para styleclass="Normal">This type is used for typed arrays. It has been introduced in the X# Runtime. The internal typename is XSharp.__ArrayBase<br/>The code below shows how you can use it.</para>
    <para styleclass="Normal">Many of the existing XBase runtime functions that accept arrays now also accept an ARRAY OF. </para>
    <para styleclass="Normal">Runtime functions that expect a codeblock for Arrays expect a Lambda expression for ARRAY OF.</para>
    <para styleclass="Normal">The difference is that the parameters to the Lambda expression will be typed, so there is no late binding necessary.</para>
    <para styleclass="Normal">Parameters to a Codeblock are always of type usual and therefore either require Late Binding support or need to be casted to the right type inside the codeblock.</para>
    <para styleclass="Normal">We have also introduced a special multi dimensional syntax. Given the example below you can also get the first name of the first developer in the array by using the following syntax:</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; cFirst := aDevelopers[1, &quot;FirstName&quot;]</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">This may be useful when you work with existing generated code and the existing code was using a define for the elements in the multi dimensional array.</para>
    <para styleclass="Normal">If you had a (generated) define like</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">DEFINE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DEVELOPER_FirstName := 1</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">then you can change the code generator and generate this in stead</text></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">DEFINE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DEVELOPER_FirstName := &quot;FirstName&quot;</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">The code that uses the define can remain unchanged</text></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; cFirst := aDevelopers[1, DEVELOPER_FirstName]</text></para>
    <para styleclass="Heading3">Example code</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// declare typed array of developer objects &#160; </text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> aDevelopers </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ARRAY OF Developer &#160; &#160; &#160; &#160; &#160;</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// Initialize the array with the &quot;normal&quot; array syntax</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">aDevelopers &#160; := {}</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// AAdd also supports typed arrays</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AAdd(aDevelopers, Developer &#160;{ &quot;Chris&quot;,&quot;Pyrgas&quot;})</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AAdd(aDevelopers, Developer &#160;{ &quot;Nikos&quot;, &quot;Kokkalis&quot;})</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AAdd(aDevelopers, Developer &#160;{ &quot;Fabrice&quot;, &quot;Foray&quot;})</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AAdd(aDevelopers, Developer &#160;{ &quot;Robert&quot;, &quot;van der Hulst&quot;}) &#160; &#160;</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// AEval knows that each element is a developer</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">AEval(aDevelopers, { d =&gt; Console.WriteLine(d)})</text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// ASort knows the type and passes the correct types to the lambda expression. </text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// The compiler and runtime &quot;know&quot; that x and y are Developer objects and will produce early bound code</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">ASort( aDevelopers, 1, ALen(aDevelopers), { x, y =&gt; x:LastName &lt; y:LastName}) &#160; </text><br/><text style="font-weight:bold; font-style:italic; color:#339966;">// Foreach knows that each element is a Developer object</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FOREACH</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VAR</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oDeveloper IN aDevelopers &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? oDeveloper:LastName, oDeveloper:FirstName</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">NEXT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Developer</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROPERTY</text><text style="font-weight:normal; font-style:normal; color:#000000;"> FirstName </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; color:#000000;"> AUTO</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROPERTY</text><text style="font-weight:normal; font-style:normal; color:#000000;"> LastName </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; color:#000000;"> AUTO &#160;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;CONSTRUCTOR()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CONSTRUCTOR</text><text style="font-weight:normal; font-style:normal; color:#000000;"> (cFirst </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; color:#000000;">, cLast </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; color:#000000;">)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;FirstName := cFirst</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;LastName &#160;:= cLast</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ToString() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Firstname+&quot; &quot; + LastName</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text></para>
  </body>
</topic>
