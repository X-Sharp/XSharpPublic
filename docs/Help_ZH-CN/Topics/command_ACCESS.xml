<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-06-27T19:54:31.219+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>ACCESS 语句</title>
  <keywords>
    <keyword>ACCESS statement</keyword>
    <keyword>Access() Methods</keyword>
    <keyword>Compile-time declaration</keyword>
    <keyword>Declaration statements</keyword>
    <keyword>Entity declaration</keyword>
    <keyword>Instance variables</keyword>
    <keyword>Instance variables</keyword>
    <keyword>Instance variables<keyword>accessing</keyword><keyword>non-exported</keyword><keyword>virtual variables</keyword></keyword>
    <keyword>Methods<keyword>accessing instance variables</keyword></keyword>
    <keyword>Statements</keyword>
    <keyword>Strong typing<keyword>defined</keyword></keyword>
    <keyword>Virtual variables</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">ACCESS 语句</para>
    </header>
    <para styleclass="Heading1">用途</para>
    <para styleclass="Normal">声明访问非导出(non-<text styleclass="p_normal" style="font-family:&apos;Times New Roman&apos;; font-size:12pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">exported</text>)或虚(拟)实例变量的方法。</para>
    <para styleclass="Heading1">语法</para>
    <para styleclass="Normal"><tab />[Attributes] &#160;[Modifiers] &#160;<text style="font-weight:bold;">ACCESS </text>&lt;<text styleclass="Italic">idName</text>&gt;</para>
    <para styleclass="Normal"><tab />[([&lt;<text styleclass="Italic">idParam</text>&gt; [AS | REF &lt;<text styleclass="Italic">idType</text>&gt;] [, ...])] </para>
    <para styleclass="Normal"><tab />[AS &lt;<text styleclass="Italic">idType</text>&gt;] [&lt;<text styleclass="Italic">idConvention</text>&gt;]</para>
    <para styleclass="Normal"><tab />[CLASS &lt;<text styleclass="Italic">idClass</text>&gt;]</para>
    <para styleclass="Normal"><tab />[=&gt; &lt;expression&gt;]</para>
    <para styleclass="Normal"><tab /><text style="font-weight:bold;">CRLF</text></para>
    <para styleclass="Normal"><tab />[&lt;<text styleclass="Italic">Body</text>&gt;]</para>
    <para styleclass="Normal"><tab />[END ACCESS]</para>
    <para styleclass="Heading1">参数</para>
    <para styleclass="Normal"><snippet src="__IncludeMethodModifiers" inline="false"/></para>
    <para styleclass="List"><text styleclass="Normal">&lt;</text><text styleclass="Italic">idName</text><text styleclass="Normal">&gt;</text><tab /><text styleclass="Normal">定义 ACCESS 方法的实例变量的有效标识符名称。 与其他方法一样，ACCESS 方法也是实体；不过，系统为它们使用了独特的命名方案，以防止与其他实体名称相冲突。 ACCESS 方法名在类中必须是唯一的，但可以与应用程序中的其他实体名称相同。</text></para>
    <para styleclass="List"></para>
    <para styleclass="Normal"><snippet src="__IncludeMethodParameters" inline="false"/></para>
    <para styleclass="List"><snippet src="__IncludeBody" inline="false"/></para>
    <para styleclass="List"></para>
    <para styleclass="List">END ACCESS<tab />可选的结束子句，用于指示 ACCESS 实体的结束</para>
    <para styleclass="Heading1">描述</para>
    <para styleclass="Normal">ACCESS 声明了一种特殊方法，称为 ACCESS 方法，每次访问命名的实例变量时都会自动执行。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">在 CLASS 声明中可以定义四种类型的实例变量。 除了 EXPORT 之外，所有这些都被称为非导出(non-exported)实例变量，因为它们不能直接从外部(即类之外)访问。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">例如，如果要从函数中访问对象的非导出(non-exported)实例变量，就必须使用方法。 事实上，这正是不导出(not exporting)变量的目的：通过方法控制对变量的所有引用，从而实现封装。 然而，引用方法的语法显然不同于引用变量的语法。 这违反了封装性，而且非常麻烦，因为类的用户必须知道类的某个属性是如何实现的，才能知道是使用函数式引用还是变量式引用。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">例如，请注意当类使用常规方法导出变量时，在函数 UseClass() 中访问实例变量 x 和 y 的区别：</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">EXPORT</text><text style="font-weight:bold; font-style:normal; color:#000000;"> x </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">100</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">INSTANCE</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">10000</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:bold; font-style:normal; color:#000000;"> GetValueY</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:bold; font-style:normal; color:#000000;"> UseClass</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oTest </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{}</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">?</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">x</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">?</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">GetValueY</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#ff00ff;">// 使用方法访问 y</text></para>
    <para styleclass="Normal">如果将普通方法替换为 ACCESS 方法，则访问两个变量的语法是相同的，即使其中一个变量被方法所隔离：</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">ACCESS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:bold; font-style:normal; color:#000000;"> UseClass</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oTest </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Test</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{}</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">?</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">x</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">?</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oTest</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">y</text><tab /><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#ff00ff;">// 使用 ACCESS 方法</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">非导出(non-exported)变量分为三类，每一类都有自己的属性(详见本指南中的 <link displaytype="text" defaultstyle="true" type="topiclink" href="command_CLASS">CLASS 语句</link>)：</para>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none; font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><tab /><text styleclass="Normal">INSTANCE</text></li>
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><tab /><text styleclass="Normal">PROTECT</text></li>
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><tab /><text styleclass="Normal">HIDDEN</text></li>
    </list>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">INSTANCE 变量专为 ACCESS 和 ASSIGN 方法而设计，这也是其后期绑定的主要原因。 通过定义与 INSTANCE 变量同名的 ACCESS 方法，可以有效地覆盖变量，使所有非赋值引用(包括外部和内部引用)都调用 ACCESS 方法。 </para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">例外情况是，在 ACCESS(或 ASSIGN)方法中，同名的实例变量会引用变量--否则，你将一事无成。</para>
    <para styleclass="Normal">例如</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INSTANCE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Name, SSN</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ACCESS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Name </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Name &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 指变量名称</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ShowName() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? Name &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 指 ACCESS 方法</text></para>
    <para styleclass="Normal">您还可以将 PROTECT 和 HIDDEN 变量与 ACCESS 方法结合使用。 通过定义与 PROTECT 或 HIDDEN 变量同名的访问方法，可以使用与类内部相同的语法从外部访问该变量。 然而，由于提前绑定的原因，内部引用总是直接引用变量。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">当然，ACCESS 方法和实例变量不必同名。 这样做只是为了方便。 ACCESS &lt;idVar&gt; 使用的是方法的返回值。 因此，对于 PROTECT/HIDDEN 变量，可以使用不同名称的 ACCESS 方法。 例如</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; PROTECT Name_Protected</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ACCESS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Name </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Name_Protected</text></para>
    <para styleclass="Normal">虚(拟)变量不是作为类的一部分定义的，而是由其他实例变量组成的。 换句话说，它是根据其他实例变量的值计算出来的变量。 与非导出(non-exported)实例变量一样，你可以使用常规方法来计算虚拟变量，但这意味着要使用不同的语法来访问它们。 ACCESS 方法将用于访问实例变量的语法扩展到了虚(拟)变量。</para>
    <para styleclass="Normal">例如</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INSTANCE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Name, SSN</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ACCESS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Name </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Name</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Init(cName, cSSN) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Name := cName</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; SSN := cSSN</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ACCESS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> FullID </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Name + SSN</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> UseClass()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oFriend </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Person</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; oFriend := Person{&quot;Bill Brown&quot;, &quot;213-88-9546&quot;}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? oFriend:Name &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Bill Brown</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? oFriend:FullID &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Bill Brown213-88-9546</text></para>
    <para styleclass="Normal">与非导出(non-exported)变量和 ACCESS 方法相比，EXPORT 变量使用起来更快、更方便，但使用 EXPORT 变量却有悖于封装性，而封装性正是为提高应用程序的完整性而应努力实现的。 使用 ACCESS 方法和 ASSIGN 方法，你可以在应用程序原型设计的早期阶段使用 EXPORT 变量，之后在不改变类接口的情况下使用方法保护变量。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">ACCESS 是 METHOD 的一种特例，除了调用方式(即不带参数，就像实例变量一样)外，其行为与其他方法相同。 更多详情，请参阅本指南中的 <link displaytype="text" defaultstyle="true" type="topiclink" href="command_METHOD">METHOD 语句</link> 。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">注意：ACCESS 方法的内部引用如果没有相应的常规 INSTANCE 变量(例如，虚(拟)变量或对不同名称的 HIDDEN 或 PROTECT 变量的公共访问)，则必须使用 SELF: 前缀。 内部引用是指来自类或其子类方法内部的引用。 如果系统没有找到实例变量，则会假定是内存变量(这可能会导致编译器出错，具体取决于编译器设置中是否选择了 &quot;允许未声明变量&quot;)，除非使用了 SELF:，否则系统不会尝试将引用识别为 ACCESS 方法。</para>
    <para styleclass="Normal"><snippet src="__IncludeStrongTyping" inline="false"/></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">示例</para>
    <para styleclass="Normal">下面的示例使用 ACCESS 根据其他实例变量的值进行计算：</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Rectangle</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INSTANCE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Length, Height </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Init(nX, nY) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Rectangle</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Length := nX</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Height := nY</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ACCESS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Area </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Rectangle</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Length * Height</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> FindArea()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oShape </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Rectangle</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; oShape := Rectangle{3, 4}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? oShape:Area &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 显示： &#160;12</text></para>
    <para styleclass="Heading1">参见</para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_ASSIGN">ASSIGN</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_CLASS">CLASS</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_METHOD">METHOD</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_PROPERTY">PROPERTY</link></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
