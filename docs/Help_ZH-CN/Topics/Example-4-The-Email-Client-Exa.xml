<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-25T20:33:22.215+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>示例 5: OCX - 电子邮件客户端示例 </title>
  <body>
    <header>
      <para styleclass="Heading1">示例 5: OCX - 电子邮件客户端示例 </para>
    </header>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">本示例展示了如何迁移使用 ActiveX/OCX 控件的应用程序。</para>
    <para styleclass="Body Text">我们使用的是 Visual Objects 的电子邮件示例，您可以在 Examples 文件夹的子文件夹 Email 中找到该示例。</para>
    <para styleclass="Body Text">我们在这里遇到的问题是 X# Runtime（以及 Vulcan rumtime）不支持 ActiveX 控件。</para>
    <para styleclass="Body Text">因此，让我们尝试解决这个问题。</para>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">首先运行 VOXporter 并从 AEF 创建一个 Visual Studio 解决方案</li>
      <li styleclass="Body Text">在 Visual Studio 中编译并运行。</li>
      <li styleclass="Body Text">我们将收到两条信息：</li>
    </list>
    <para styleclass="Body Text"></para>
    <para styleclass="Normal"><image src="Email1.png" scale="-99.90%" styleclass="Image Caption" figurelistinclude="0"></image></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">第一条信息显示了本例中最大的问题。第二条信息是 Xporter 插入的，用来警告我们原始代码向 VO Gui 类中的一个类添加了一个方法。</para>
    <para styleclass="Body Text">让我们快速解决这些问题，以便编译应用程序。稍后我们将添加 OCX：</para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">点击警告。您将看到 XPorter 添加了一个从 Toolbar 继承而来的 CLASS ToolBar_external_class。原始代码试图将 ShowButtonmenu 方法添加到现有的工具栏类中。</li>
      <li styleclass="Body Text">我们可以通过添加扩展方法或子类化工具栏类来解决这个问题，我们在 VOPAD 示例中也看到了这个问题。</li>
      <li styleclass="Body Text">就像在 VOPAD 示例中一样，我更喜欢扩展方法。</li>
      <li styleclass="Body Text">更改类名和方法声明。我们将创建 2 个重载，因为 symTb 参数是可选的：</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ToolBarExtensions</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ShowButtonMenu(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> tbSelf </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Toolbar, nButtonID </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> LONG, oButtonMenu </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Menu) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;tbSelf:ShowButtonMenu(nButtonID, oButtonMenu, #MAINTOOLBAR)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ShowButtonMenu(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> tbSelf </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Toolbar, nButtonID </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> LONG, oButtonMenu </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Menu,symTb </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Symbol) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text></para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text"><text styleclass="Code Example">删除 Default() 一行，并用 tbSelf 替换原始 ShowButtonMenu 主体中的 SELF</text></li>
      <li styleclass="Body Text">我们还需要对调用该方法的代码进行一些修改。这是因为代码在访问窗口类的工具栏时调用了 ShowButtonMenu。该工具栏访问是无类型的，因此返回 USUAL。<br/>因此，请找到包含 SELF:ToolBar:ShowButtonMenu 的两行，并将其更改为 ((Toolbar) SELF:ToolBar):ShowButtonMenu。您不能使用 Window 类的 oToolbar 字段，因为 DataWindow 类将从其框架窗口返回工具栏，而不是自己的工具栏。<br/>在改进后的 VO SDK 中，我们将通过强类型属性（如 Window:Toolbar）来解决这个问题。<br/>也许您会想把扩展方法添加到 USUAL 类型中，这样您就不必在调用 ShowButtonMenu 的代码中添加转换了。<br/>这样可以编译，但不幸的是，在运行时会出现问题。X# 编译器（就像 Vulcan 和 VO 编译器一样）知道 USUAL 类型是特殊的，因此不会尝试发出方法调用，而会产生调用 Send() 的代码来调用其方法。Vulcan 运行时不会处理 Send() 函数内部的扩展方法。</li>
      <li styleclass="Body Text">稍后，当我们按下工具栏上的 “回复 ”按钮时，就可以确认这是否有效。这将弹出菜单，其中包括 “回复发件人 ”和 “回复所有人”。 现在是修复 ActiveX/OCX 问题的时候了</li>
      <li styleclass="Body Text">单击有关 OleControl 的错误。</li>
      <li styleclass="Body Text">为了快速解决这个问题，我们可以修改代码，让 webbrowser 继承 MultiLineEdit。这样，我们就有了一个可以正常工作的控件。我们稍后将实现 OCX。 为此，请访问 Webbrowser.PRG 类并更改 INHERIT 子句。现在写的是 INHERIT OleControl。将其改为 INHERIT MultiLineEdit。</li>
      <li styleclass="Body Text">再次编译后会出现其他错误。其中 2 个提到了 cOleMethod 类型。双击该错误，转到该代码。</li>
      <li styleclass="Body Text">您将看到 Webbrowser 类的 Quit 方法。这段代码使用了 VO OLE 类中的一个内部类和内部方法。暂时注释掉该方法的内容。</li>
      <li styleclass="Body Text">再次编译后，你会发现只剩下一些错误。其中一些错误与 VOPAD 示例中的错误相同，需要我们将字体属性更改为 ControlFont。纠正这个错误。</li>
      <li styleclass="Body Text"><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">一个错误是 “+”运算符不正确：在这一行中 </text></li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">cTemp += &#160;+&quot;; &quot;+ cEntry</text></para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">这是原始 VO 代码中的一个明显错误，VO 编译器从未发现。删除双引号前的 +</li>
      <li styleclass="Body Text">最后一个错误来自 Webbrowser 类的构造函数。它调用了 OleControl 中的 CreateEmbedding 方法。这个方法在 MultiLineEdit 类中并不存在，因此我们暂时将其注释掉。我们稍后再处理 Webbrowser。</li>
      <li styleclass="Body Text">注释掉对 SELF:CreateEmbedding() 的调用后，其余代码的编译应该没有问题。</li>
      <li styleclass="Body Text">现在应该可以运行应用程序了。</li>
      <li styleclass="Body Text">如果您尝试打开地址簿，会出现运行时错误，因为它使用了依赖于 Cato3Cnt.dll 的数据库浏览器控件。将 Cavo28\Redist 文件夹中的 cato3*.dll 和 msvcrt.dll 复制到输出文件夹即可解决这个问题。</li>
      <li styleclass="Body Text">重新编译并运行示例。现在，在 Webbrowser 类的 Display 方法（如果您使用的是 VO 2.8 SP4 中的电子邮件示例，则为 DisplayHtml）中将出现错误。<br/>该方法获取电子邮件内容，将其写入磁盘并调用 Webbrowser 控件的 Navigate 方法（后期绑定，使用 VO 的 Send() 函数）。这样做是行不通的。<br/>由于我们已经更改了 Web 浏览器控件，使其成为一个多行编辑器，因此我们可以改变这种行为。我们可以简单地将电子邮件文本赋值给多行编辑器的 TextValue 属性，而不是将其写入磁盘。因此，请注释掉 Display 方法的主体（不要扔掉代码，我们稍后会用到它），并替换为</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:TextValue := cText</text></para>
    <list id="2" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">之后，示例运行就不会有问题了。您还可以显示电子邮件。当然，它不会正确显示 HTML，但这是下一步的工作。</li>
    </list>
    <para styleclass="Heading2">如何在代码中添加 ActiveX</para>
    <para styleclass="Body Text">Vulcan 中与 VO 兼容的图形用户界面类不支持 ActiveX 控件。不过，Windows 窗体对 ActiveX 控件有很好的支持。</para>
    <para styleclass="Body Text">我们将使用 Windows 窗体的 ActiveX 支持，在示例中添加 ActiveX 控件。</para>
    <para styleclass="Body Text">这里有两种可能性：</para>
    <list id="3" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Arial; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">用 Windows 窗体窗口替换整个电子邮件显示窗口</li>
      <li styleclass="Body Text">使用一个技巧，使用 Windows 窗体显示 ActiveX 控件，并将该控件合并到我们的 VO GUI 应用程序中</li>
    </list>
    <para styleclass="Body Text">第一种解决方案是目前最容易理解的，但我们必须创建一个全新的窗口，还必须更改调用代码。</para>
    <para styleclass="Body Text">您可以根据自己的应用程序做出选择。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">在本例中，我们将选择第二种方法。</para>
    <para styleclass="Heading2">创建一个 Windows 窗体窗口来显示电子邮件</para>
    <para styleclass="Body Text">在此方法中，我们使用 Windows.Forms.Form 窗口作为 ActiveX 控件的 “主机”。</para>
    <para styleclass="Body Text">我们将实例化该窗口，并获取该控件的窗口句柄，然后将该窗口句柄与我们的 VO GUI 窗口链接起来。</para>
    <para styleclass="Body Text">为此，您必须采取以下步骤：</para>
    <list id="4" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">右键单击解决方案资源管理器中的项目图标，选择 “添加新项目”。</li>
      <li styleclass="Body Text">这时会出现一个可能的新项目列表。选择 Windows 窗体表单图标，给它起一个有意义的名字，如 “EmailDisplayForm.prg”，然后单击 “添加”。</li>
      <li styleclass="Body Text">这将打开 “表单设计器 ”窗口。</li>
      <li styleclass="Body Text">打开工具箱。网络浏览器控件将不在其中。</li>
      <li styleclass="Body Text">右键单击工具箱中的空白区域，然后选择 “选择项目...”。这将弹出一个对话框，您可以在其中控制工具箱的内容。</li>
      <li styleclass="Body Text">选择 “COM 组件 ”选项卡并向下滚动，直到看到 Microsoft Web 浏览器控件：<br/><br/><image src="Email3.png" scale="100.00%" styleclass="Image Caption" figurelistinclude="0"></image></li>
      <li styleclass="Normal"><text styleclass="Image Caption" style="font-style:normal;">勾选控件前面的复选框，然后按 “确定”。这将把 ActiveX 添加到工具箱中：</text><br/></li>
    </list>
    <para styleclass="Normal"><image src="Email4.png" scale="100.00%" styleclass="Image Caption" figurelistinclude="0"></image></para>
    <list id="5" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">如果对控件的位置不满意，可以将其拖到工具箱中的其他位置。</li>
      <li styleclass="Body Text">现在将控件从工具箱拖到表单上。无需调整控件大小或移动控件。</li>
      <li styleclass="Body Text">Visual Studio 将为我们的项目添加两个引用。它们是</li>
      <list id="5" level="1" type="ul" listtype="bullet" formatstring="&#111;" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:&apos;Courier New&apos;; font-size:11pt; color:#000000;">
        <li styleclass="Body Text"><text style="font-weight:bold;">AxSHDocVw</text>, 包含实际 ActiveX 控件代码的类型库</li>
        <li styleclass="Body Text"><text style="font-weight:bold;">SHDocVw</text>, 类型库，包含支持自动化服务器接口和类的代码</li>
      </list>
    </list>
    <list id="5" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">表单编辑器将为表单添加一个名为 axWebBrowser1 的字段。</li>
      <li styleclass="Body Text">转到属性窗口，更改 Modifiers 字段，将其从 “Private”改为 “Public”（Export）。<br/>这将使该字段可以在 webBrowserHost 类之外访问</li>
    </list>
    <list id="6" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">保存代码并关闭表单</li>
      <li styleclass="Body Text">现在进入 Webbrowser 类</li>
      <li styleclass="Body Text">在文件顶部添加以下 using 子句：</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">using</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Email</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">using</text><text style="font-weight:normal; font-style:normal; color:#000000;"> AxShDocVw</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">using</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ShDocVw</text></para>
    <para styleclass="Body Text">第一个命名空间是生成 webBrowserHost 窗口的命名空间。第二个命名空间是生成 ActiveX 的命名空间，第三个命名空间是我们需要的其他类型（如枚举和事件）的命名空间。</para>
    <list id="6" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">添加以下 2 个字段（我想没必要详细说明）：</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">EXPORT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oHost </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> webBrowserHost</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">EXPORT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oWebBrowser </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> AxWebBrowser</text></para>
    <list id="7" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">转到 Webbrowser 类的构造函数，添加以下代码行（代替之前注释掉的 CreateEmbedding()</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oHost := webBrowserHost{} &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 创建主机窗口，不显示 .NET 窗口！</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser := </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oHost:axWebBrowser1 &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 获取表单上的 ActiveX</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">SetParent(oWebBrowser:Handle, </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">self</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Handle()) &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 使用 Windows API “窃取 ”其句柄并链接到 MLE</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Visible := TRUE &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 使浏览器可见</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Okay := TRUE</text></para>
    <list id="8" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">然后添加以下方法，以确保 ActiveX 与其所有者 MultiLineEdit 具有相同的高度，并确保其被正确销毁、</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Resize(oEvent) </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oDim </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Dimension</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SUPER</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Resize(oEvent)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> oDim := </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Size</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">IF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oDim:Width &gt; 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:SuspendLayout()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Location := System.Drawing.Point{0,0}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Size := System.Drawing.Size{oDim:Width,oDim:Height}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:ResumeLayout()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDIF</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NIL</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Destroy()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SUPER</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Destroy()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Dispose()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oHost:Dispose()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NIL</text></para>
    <list id="9" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">我们需要 “恢复 ”以前的行为，在浏览器窗口中显示 HTML，而我们之前已经注释掉了。 <br/>因此，进入 WebBrowser:Display() 方法（VO 2.8 SP4 的 DisplayHtml），恢复旧代码并更改 </li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">Send(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">, #Navigate, cFileName)</text></para>
    <para styleclass="Body Text" style="margin-left:13px;">into</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Navigate(cFileName)</text></para>
    <para styleclass="Body Text">因此，您可以将其改为早期绑定方法调用 </para>
    <list id="10" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">要完成这项工作，请浏览 Webbrowser 类的源代码，找到调用 Navigate 的行，例如 </li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">Send( </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">, #Navigate, &quot;#top&quot; )</text></para>
    <para styleclass="Body Text">并将其改为早期绑定方法调用：</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Navigate(&quot;#top&quot; )</text></para>
    <para styleclass="Body Text" style="margin-left:13px;">并查找类似的行：</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">Send( </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">, #ExecWB, OLECMDID_PRINT, OLECMDEXECOPT_DODEFAULT, NIL, NIL )</text></para>
    <para styleclass="Body Text" style="margin-left:13px;">并将其更改为使用类型库中的枚举进行早期绑定方法调用。同时删除 NIL 值：</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:ExecWB(OLECMDID.OLECMDID_PRINT, OLECMDEXECOPT.OLECMDEXECOPT_DODEFAULT )</text></para>
    <list id="11" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">这样就结束了。现在一切正常，包括打印预览和打印功能。</li>
      <li styleclass="Body Text">当然，您现在也可以使用 ActiveX 事件并对其做出响应。<br/>你必须用 .Net 的方法来做。类似这样</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:NavigateComplete2 += NavigateComplete2</text></para>
    <para styleclass="Body Text" style="margin-left:13px;">然后执行</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NavigateComplete2(sender </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> OBJECT, e </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DWebBrowserEvents2_NavigateComplete2Event) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Owner:StatusBar:SetText(&quot;Showing file:&quot; +e:uRL:ToString())</text></para>
    <para styleclass="Body Text"><text style="font-weight:bold;">您可以在 XSharp 示例文件夹中找到 “Code before ”和 “Code after”。</text></para>
  </body>
</topic>
