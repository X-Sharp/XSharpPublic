<?xml version="1.0" encoding="utf-8"?>
<topic id="d4f37016-e7fd-4847-885b-9b67bcd31bc9" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>TODO: Move introduction text here</para>
    </introduction>




     
     <para><legacyBold>Navigation:</legacyBold>&#160;
     
     <!-- TODO: Unknown topic link: xsharp.html -->X# Documentation &gt; <!-- TODO: Unknown topic link: chapter-2.html -->X# Language Reference &gt; <!-- TODO: Unknown topic link: commands-by-category.html -->Commands and Statements &gt; <!-- TODO: Unknown topic link: cmd_cat_database.html -->Database&#160;&gt;</para>

     
     <!-- TODO: Add named anchor: prev --><mediaLink><image xlink:href="btn_prev_n" /></mediaLink><!-- TODO: Add named anchor: main --><mediaLink><image xlink:href="btn_home_n" /></mediaLink><!-- TODO: Add named anchor: next --><mediaLink><image xlink:href="btn_next_n" /></mediaLink>
    
    <h1 class="p_Heading1" style="page-break-after: avoid;">COPY TO Command (FoxPro)</h1>

  
  <!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
  
  



     <!--ZOOMRESTART-->
     <table><row><entry>Note</entry><entry>This command is defined in a header file and will be preprocessed by the X# preprocessor to a function call. If you disable the standard header (<!-- TODO: Unknown topic link: opt-nostddefs.html -->-nostddefs) files then this command will not be available. If you tell the compiler to use a different standard header file (<!-- TODO: Unknown topic link: opt-stddefs.html -->-stddef&#160;) then this command may also be not available</entry></row></table><h1 class="p_Heading1" style="page-break-after: avoid;">Purpose</h1>
<para>Export records to a new database or text file.</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Syntax</h1>
<para>COPY TO &lt;xcTargetFile&gt; [DATABASE &lt;DbName&gt; [NAME &lt;LongName&gt;]<para/>
 &#160; [FIELDS FieldList | FIELDS LIKE &lt;Skeleton&gt; | FIELDS EXCEPT &lt;Skeleton&gt;]<para/>
 &#160; [&lt;Scope&gt;] [FOR &lt;lCondition&gt;] [WHILE &lt;lCondition&gt; ] <para/>
 &#160; [ [WITH] CDX ] | [ [WITH] PRODUCTION ] [NOOPTIMIZE] <para/>
 &#160; [ [TYPE] [ FOXPLUS | FOX2X | DIF | MOD | SDF | SYLK | WK1 | WKS | WR1<para/>
 &#160; | WRK | CSV | XLS | XL5 | DELIMITED [ WITH &lt;Delim&gt; | WITH BLANK <para/>
 &#160; | WITH TAB | WITH CHARACTER &lt;cDelim&gt; ] ] ] [AS &lt;nCodePage&gt;]</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Arguments</h1>
<table><row><entry>TO &lt;xcTargetFile&gt;</entry><entry>The name of the target file, including an optional drive, directory, and extension. &#160;See SetDefault() and SetPath() for file searching and creation rules. &#160;The default extension for database files is determined by the RDD. &#160;For text files, it is .TXT.</entry></row></table><table><row><entry>&#160;</entry></row></table><table><row><entry></entry><entry>If &lt;xcTargetFile&gt; does not exist, it is created. &#160;If it exists, this command attempts to open the file in exclusive mode and, if successful, the file is overwritten without warning or error. &#160;If access is denied because, for example, another process is using the file, NetErr() is set to TRUE. </entry></row></table><table><row><entry>DATABASE &lt;DbName&gt;</entry><entry>Specifies a database to which the new table is added. NOT SUPPORTED AT THIS MOMENT</entry></row></table><table><row><entry>NAME &lt;LongName&gt;</entry><entry>Specifies a long name for the new table. Long names can contain up to 128 characters and can be used instead of short file names in the database NOT SUPPORTED AT THIS MOMENT</entry></row></table><para>&#160;</para>
<table><row><entry>FIELDS &lt;idFieldList&gt;</entry><entry>The list of fields to process. The default is all fields with the exception of memo fields, unless the command supports the MEMO clause.</entry></row></table><table><row><entry></entry><entry>Only fields with the same names and types in both files are appended. &#160;If fields with the same name do not match in data type, a runtime error is raised.</entry></row></table><table><row><entry>FIELDS LIKE &lt;Skeleton&gt;</entry><entry>You can specify field names with a wild card, such as FIELDS LIKE *name</entry></row></table><para>FIELDS EXCEPT &lt;Skeleton&gt;You can exclude fields, such as for example the primary keys: FIELDS EXCEPT Id<para/>
&lt;Skeleton&gt; supports wildcards (* and ?). For example, to replace all fields that begin with the letters A and P, use: <para/>
FIELDS LIKE A*,P*</para>
<para>&#160;</para>
<para>Please note that you can combine FIELDS LIKE and FIELDS EXCEPT but you cannot combine a fields list with the LIKE and EXCEPT clauses.</para>
<para>&#160;</para>
<table><row><entry>WHILE &lt;lCondition&gt;</entry><entry>A condition that each visible record within the scope must meet, starting with the current record. &#160;As soon as the while condition fails, the process terminates. &#160;If no &lt;Scope&gt; is specified, having a while condition changes the default scope to the rest of the visible records in the file.</entry></row></table><para>&#160;</para>
<table><row><entry>&lt;Scope&gt;</entry><entry>The portion of the current database file to process. &#160;The default is all visible records. Scope is one or more clauses of:<para/>
[NEXT &lt;NEXT&gt;] &#160; &#160; &#160; &#160;Optionally specifies the number of records to process starting <para/>
 &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;with the first record of the source file. <para/>
[RECORD &lt;rec&gt;] &#160; &#160; &#160; &#160;An optional record ID If specified, the processing begins <para/>
 &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;with this data record in the source file. <para/>
[&lt;rest:REST&gt;] &#160; &#160; &#160; &#160;The option REST specifies whether records are sequentially <para/>
 &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;searched only from the current up to the last record. <para/>
 &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;If a condition is specified, the option ALL is the default value.<para/>
[ALL] &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;The option ALL specifies that all records from the source file are imported. <para/>
 &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;This is the default setting. </entry></row></table><para>&#160;</para>
<table><row><entry>FOR &lt;lCondition&gt;</entry><entry>A condition that each visible record within the scope must meet in order to be processed. &#160;If a record does not meet the specified condition, it is ignored and the next visible record is processed. &#160;If no &lt;Scope&gt; or WHILE clause is specified, having a for condition changes the default scope to all visible records.</entry></row></table><para>&#160;</para>
<table><row><entry>DELIMITED WITH &lt;Delim&gt;</entry><entry>Indicates that character fields are separated by a character other than the quotation mark. &#160; &#160; &#160; &#160; </entry></row></table><table><row><entry>DELIMITED WITH BLANK </entry><entry>Specifies files that contain fields separated by spaces instead of commas.</entry></row></table><table><row><entry>DELIMITED WITH TAB </entry><entry>Specifies files that contain fields separated by tabs rather than commas.</entry></row></table><table><row><entry>WITH CHARACTER &lt;cDelim&gt;</entry><entry>Specifies files that contain fields all enclosed by the character specified with Delimiter. If Delimiter is a semicolon (the character used in Visual FoxPro to indicate command line continuation), enclose the semicolon in quotation marks. You can also specify the BLANK and TAB keywords for Delimiter.<para/>
The WITH Delimiter clause can be combined with the WITH CHARACTER clause. </entry></row></table><para>&#160;</para>
<table><row><entry>TYPE</entry><entry>Specifies the file type if the file you create is not a XBase table. Although you must specify a file type, you do not need to include the TYPE keyword.</entry></row></table><table><row><entry></entry><entry>From the various types that FoxPro allows only the following ones are supported in X# at this moment:</entry></row></table><table><row><entry></entry><entry>SDF &#160; &#160; &#160; &#160;An SDF file is an ASCII text file in which records have a fixed length and end with a carriage return and line feed. Fields are not delimited. <para/>
 &#160; &#160; &#160; &#160;The file name extension is assumed to be .txt for SDF files.</entry></row></table><para>&#160;<para/>
CSV &#160; &#160; &#160; &#160;A comma separated value file. A CSV file has field names as the first line in the file; the field names are ignored when the file is imported.<para/>
&#160;The file name extension is assumed to be .csv for CSV files.<para/>
FOXPLUS &#160; &#160; &#160; &#160;Visual FoxPro memo files have a different structure than FoxBASE memo files. <para/>
&#160; &#160; &#160; &#160; &#160;If your source table contains a memo field, include the FOXPLUS clause to create a table that can be used in FoxBASE+. <para/>
&#160; &#160; &#160; &#160; &#160;The Visual FoxPro memo field cannot contain binary data because FoxBASE+ does not support binary data in memo fields.</para>
<table><row><entry></entry><entry>FOX2X &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;Creates a new table that can be opened in earlier versions of FoxPro (versions 2.0, 2.5, and 2.6).</entry></row></table><table><row><entry></entry><entry>OTHER &#160; &#160; &#160; &#160;NOT SUPPORTED AT THIS MOMENT</entry></row></table><table><row><entry>AS &lt;nCodePage&gt;</entry><entry>Specifies the codepage to use for the target file. NOT SUPPORTED AT THIS MOMENT</entry></row></table><table><row><entry></entry><entry> &#160; &#160; &#160; &#160;</entry></row></table><h1 class="p_Heading1" style="page-break-after: avoid;">Notes</h1>
<para>Deleted records:  If <!-- TODO: Unknown topic link: ms-its:XSharpRef.chm::\html\Overload_XSharp_Core_Functions_SetDeleted.htm -->SetDeleted()  is FALSE, deleted records in the source file are copied to &lt;xcTargetFile&gt; where they retain their deleted status.</para>
<para>&#160;</para>
<para>Visibility:  If SetDeleted() is TRUE, however, deleted records are not visible and are, therefore, not processed. &#160;Similarly, filtered records (with <!-- TODO: Unknown topic link: ms-its:XSharpRef.chm::\html\M_XSharp_RT_Functions_DbSetFilter.htm -->DbSetFilter() or a conditional controlling order) are not processed.</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Examples</h1>
<para>This example demonstrates copying to another database file:</para>
<para>&#160;</para>
<para>USE sales NEW<para/>
COPY TO temp</para>
<para>&#160;</para>
<para>This example demonstrates the layout of an SDF file with four fields, one for each data type:</para>
<para>&#160;</para>
<para>USE testdata NEW<para/>
COPY NEXT 1 TO temp SDF<para/>
TYPE temp.txt<para/>
// Result: &#160;Character &#160; 12.0019890801T</para>
<para>&#160;</para>
<para>The next example demonstrates the layout of a DELIMITED file:</para>
<para>&#160;</para>
<para>COPY NEXT 1 TO temp DELIMITED<para/>
TYPE temp.txt<para/>
// Result: &#160;&quot;Character&quot;,12.00,19890801,T</para>
<para>&#160;</para>
<para>Finally, this example demonstrates the layout of a DELIMITED file WITH a different delimiter:</para>
<para>&#160;</para>
<para>COPY NEXT 1 TO temp DELIMITED WITH &#39;<para/>
TYPE temp.txt<para/>
// Result: &#160;&#39;Character&#39;,12.00,19890801,T</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Assembly</h1>
<para>XSharp.RT.DLL</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">See Also</h1>
<para><link xlink:href="ac449d30-9cb1-4c13-b775-b6eba943f6b1">APPEND FROM</link>, <link xlink:href="3d60f7ab-7488-4042-81e5-6364490c5c29">COPY FILE</link>, <link xlink:href="d95a3454-a077-4c2f-94dc-b90965fe99fe">COPY STRUCTURE</link>, <!-- TODO: Unknown topic link: ms-its:XSharpRef.chm::\html\M_XSharp_RT_Functions_DbCopy.htm -->DbCopy(), <!-- TODO: Unknown topic link: ms-its:XSharpRef.chm::\html\M_XSharp_RT_Functions_DbCopyDelim.htm -->DbCopyDelim(), <!-- TODO: Unknown topic link: ms-its:XSharpRef.chm::\html\M_XSharp_RT_Functions_DbCopySDF.htm -->DbCopySDF(), <!-- TODO: Unknown topic link: ms-its:XSharpRef.chm::\html\Overload_XSharp_RT_Functions_RddSetDefault.htm -->RDDSetDefault(), <!-- TODO: Unknown topic link: ms-its:XSharpRef.chm::\html\Overload_XSharp_Core_Functions_SetDefault.htm -->SetDefault(), <!-- TODO: Unknown topic link: ms-its:XSharpRef.chm::\html\Overload_XSharp_Core_Functions_SetPath.htm -->SetPath(), <!-- TODO: Unknown topic link: ms-its:XSharpRef.chm::\html\Overload_XSharp_Core_Functions_SetDeleted.htm -->SetDeleted() </para>
<para>&#160;</para>

     <!--ZOOMSTOP-->

<!-- TODO: Review markup -->
<markup>
<script>
           var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
           if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
	   $(document).ready(function(){
		   $(window).bind('resize', function() {
				var y = $('#header').height();
				$('#content').css('margin-top', y);
				$('.hmanchor').css('margin-top', -y-20);
				$('.hmanchor').css('padding-top', y+20);
			});
		   $(window).triggerHandler('resize');	
		   $(window).triggerHandler('resize');	
                   
		});
</script>
</markup>

    <relatedTopics>
    </relatedTopics>

  </developerConceptualDocument>
</topic>
