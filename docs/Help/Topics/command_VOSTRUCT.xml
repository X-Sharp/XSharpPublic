<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2023-05-19T12:48:12.345+02:00" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>VOSTRUCT Statement</title>
  <keywords>
    <keyword>ALIGN</keyword>
    <keyword>Aligning<keyword>structure members</keyword></keyword>
    <keyword>Alignment of structures</keyword>
    <keyword>Compiletime declaration</keyword>
    <keyword>Data structures<keyword>alignment</keyword><keyword>declaring</keyword><keyword>specifying members</keyword></keyword>
    <keyword>Declaration statements</keyword>
    <keyword>END VOSTRUCT</keyword>
    <keyword>Entity declaration</keyword>
    <keyword>MEMBER clause</keyword>
    <keyword>Statements</keyword>
    <keyword>STATIC VOSTRUCT statement</keyword>
    <keyword>Structure<keyword>Alignment</keyword></keyword>
    <keyword>VOSTRUCT</keyword>
    <keyword>VOSTRUCT statement</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">VOSTRUCT Statement</para>
    </header>
    <para styleclass="Heading1"><snippet src="__VoVulcanOnly" inline="false"/></para>
    <para styleclass="Heading1">Purpose</para>
    <para styleclass="Body Text">Declare a data structure and its member names.</para>
    <para styleclass="Heading1">Syntax</para>
    <para styleclass="Normal">[Modifiers] VOSTRUCT &lt;<text styleclass="Italic">idStructure</text>&gt; [ALIGN 1|2|4|8]</para>
    <para styleclass="Normal"><tab />MEMBER &lt;<text styleclass="Italic">idVarList</text>&gt; AS | IS &lt;<text styleclass="Italic">idType</text>&gt; [, ...] </para>
    <para styleclass="Normal"><tab />MEMBER DIM &lt;<text styleclass="Italic">ArraySpec</text>&gt; [, ...] AS | IS &lt;<text styleclass="Italic">idType</text>&gt; [, ...] </para>
    <para styleclass="Normal">[END VOSTRUCT]</para>
    <para styleclass="Normal"></para>
    <para styleclass="Body Text"><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Note: &#160;</text>The MEMBER statement is shown using two syntax diagrams for convenience. &#160;You can declare variables and dimensioned arrays using a single MEMBER statement if each definition is separated by a comma.</para>
    <para styleclass="Heading1">Arguments</para>
    <para styleclass="List"><snippet src="__IncludeFuncProcModifiers" inline="false"/></para>
    <para styleclass="List"></para>
    <para styleclass="List">&lt;idStructure&gt;<tab />A valid identifier name for the structure. &#160;A structure is an entity and shares the same name space as other entities. &#160;This means that it is not possible to have a structure and a constant, for example, with the same name.</para>
    <para styleclass="List"></para>
    <para styleclass="List">MEMBER<tab />Declares one or more structure member variables or dimensioned arrays. &#160;You can specify multiple MEMBER declarations on separate lines.</para>
    <para styleclass="List"></para>
    <para styleclass="List">&lt;idVarList&gt;<tab />A comma-separated list of identifier names for the structure member variables.</para>
    <para styleclass="List"></para>
    <para styleclass="List">DIM &lt;ArraySpec&gt;<tab />The specification for a dimensioned array to use as a structure member. &#160;&lt;ArraySpec&gt; is one of the following:</para>
    <para styleclass="List"><tab />&lt;idArray&gt;[&lt;nElements&gt;, &lt;nElements&gt;, &lt;nElements&gt;]</para>
    <para styleclass="List"><tab />&lt;idArray&gt;[&lt;nElements&gt;][&lt;nElements&gt;][&lt;nElements&gt;]</para>
    <para styleclass="List"><tab />All dimensions except the first are optional.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab />&lt;idArray&gt; is a valid identifier name for the array to declare.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab />&lt;nElements&gt; defines the number of elements in a particular dimension of an array. &#160;The number of dimensions is determined by how many &lt;nElements&gt; arguments you specify.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab />&lt;nElements&gt; can be a literal numeric representation or a simple numeric expression involving only operators, literals, and DEFINE constants; however, more complicated expressions (such as function calls) are not allowed.</para>
    <para styleclass="List"></para>
    <para styleclass="List">AS &lt;idType&gt;<tab />Specifies the data type of the variable you are declaring (called <link displaytype="text" defaultstyle="true" type="topiclink" href="Strong-Typing" styleclass="Normal">strong typing</link>). &#160;For DIM arrays, declares the data type for all array elements. &#160;The AS &lt;idType&gt; is required for all structure members.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab />Refer to the CLASS entry for a list of valid values for &lt;idType&gt;. &#160;Note that the following data types are not supported in structures because they are dynamic types that require garbage collection:</para>
    <para styleclass="List"><tab />ARRAY</para>
    <para styleclass="List"><tab />FLOAT<tab /></para>
    <para styleclass="List"><tab />OBJECT</para>
    <para styleclass="List"><tab />&lt;idClass&gt;</para>
    <para styleclass="List"><tab />STRING</para>
    <para styleclass="List"><tab />USUAL</para>
    <para styleclass="List"></para>
    <para styleclass="List">IS &lt;idType&gt;<tab />Specifies a structure data type in which the memory needed to hold the structure is allocated on the stack (i.e., &lt;idStructure&gt; is the only &lt;idType&gt; allowed with the IS keyword).</para>
    <para styleclass="List"></para>
    <para styleclass="List">ALIGN 1|2|4|8<tab />Specifies the memory alignment of the structure. The default alignment is based on the size of the structure members. See the paragraph about alignment below.</para>
    <para styleclass="List"><tab />You may want to change this when you need to match a C/C++ structure that has been defined with a different alignment (the #pragma pack in a C/C++ header file). </para>
    <para styleclass="List"><tab />.</para>
    <para styleclass="Heading1">Notes</para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">AS vs. IS: &#160;</text>Once you have defined a structure, you can use its name to declare variables (see GLOBAL and LOCAL statements in this guide) designed to hold instances of a specific structure. &#160;When you declare a <text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">structure variable</text>, you have the choice of using AS or IS typing. &#160;The difference between these two declaration methods is as follows:</para>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none; font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><tab /><text styleclass="Normal">IS automatically allocates the memory needed to hold the structure on the stack and deallocates the memory when the declaring entity returns.</text></li>
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><tab /><text styleclass="Normal">AS requires that you allocate memory using MemAlloc() when you initialize structure variables. &#160;You must also deallocate the memory used by the structure variable using MemFree() before the declaring entity returns.</text></li>
    </list>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Important! &#160;</text><text styleclass="Italic">IS typing is much simpler than AS typing, and in most cases should satisfy your requirements for using structures. &#160;AS typing is recommended for experienced systems programmers who can, for various reasons, object to using the stack in this manner.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Allocating substructures: &#160;</text>An interesting property of a structure is that it can contain other structures as members but, if you type these substructures using AS, you must allocate and deallocate memory for them. &#160;This is true regardless of whether the containing structure is typed with AS or IS:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> iAlpha </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> pszName </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PSZ</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysTwo</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> iBeta </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> strucOne </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> UseStruct()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> strucVar </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysTwo</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; strucVar := MemAlloc(_SizeOf(SysTwo))</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; strucVar.strucOne := MemAlloc(_SizeOf(SysOne))</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ...</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; MemFree(strucVar.strucOne)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; MemFree(strucVar)</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">To simplify your programming, it makes sense to use IS for declaring substructures. &#160;Then, the memory for the substructure will be allocated and deallocated with the memory for its containing structure:</para>
    <para styleclass="Code Example"><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysTwo</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> iBeta &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> strucOne &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">IS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> UseStruct()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> strucVar </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysTwo</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; strucVar := MemAlloc(_SizeOf(SysTwo))</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ...</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; MemFree(strucVar)</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Accessing structure members: &#160;</text>Structure variables are complex, the components being members that you declare within the structure. &#160;To access a structure member, use the dot operator (.) as follows:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#000000;">&lt;</text><text style="font-weight:normal; font-style:normal; color:#000000;">idStructVar&gt;.&lt;idMember&gt;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Where &lt;<text styleclass="Italic">idStructVar</text>&gt; is a variable name or dimensioned array element that you have previously declared using a structure name, and &lt;<text styleclass="Italic">idMember</text>&gt; is a variable name or dimensioned array element declared within the VOSTRUCT definition as a MEMBER.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">Examples</para>
    <para styleclass="Normal">This example illustrates IS structure typing. No allocation is necessary but you must pass the structure by reference to calls.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Define SysOne data structure</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> iAlpha </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> pszName </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PSZ</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Tester(strucSysOne </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> strucSysOne.iAlpha</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> UseStruct()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> strucVar </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">IS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; strucVar.iAlpha := 100</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? Tester(@strucVar) &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ...</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">This example illustrates AS structure typing. This requires memory allocation and deallocation:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Define SysOne data structure</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> iAlpha </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> pszName </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PSZ</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Tester(strucSysOne </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> strucSysOne.iAlpha</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> UseStruct()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> strucVar </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; strucVar := MemAlloc(_SizeOf(SysOne))</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; strucVar.iAlpha := 100</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? Tester(strucVar) &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ...</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; MemFree(strucVar)</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">With MEMBER, you can list several groups of variable and array names separated by commas and followed by an AS | IS &lt;<text styleclass="Italic">idType</text>&gt; clause to indicate that all names listed are to be typed as indicated. &#160;In this example, the variable <text styleclass="Italic">x </text>and the dimensioned array <text styleclass="Italic">z </text>are typed as INT, while the variables <text styleclass="Italic">ptrX </text>and <text styleclass="Italic">ptrY </text>are typed as PTR.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> SysOne &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Define SysOne data structure</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x, </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">DIM</text><text style="font-weight:normal; font-style:normal; color:#000000;"> z[100] </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; color:#000000;">, ptrX, ptrY </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PTR</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">Default VoStruct Alignment</para>
    <para styleclass="Normal">You can choose to specify an alignment clause in the structure definition or let &lt;%app%&gt; determine the best alignment for you.</para>
    <para styleclass="Normal">The default alignment uses the following mechanism:</para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Normal">Each member of a size &lt;= 8 gets a memory address inside the structure that is a multiple of its size. So WORD and SHORT members get aligned on EVEN boundaries, DWORD, LONG, PTR, PSZ members get aligned to 4-byte boundaries and REAL8 members get aligned to 8- byte boundaries. Byte members are not aligned, they can appear everywhere in the structure.</li>
      <li styleclass="Normal">The total size of the structure is aligned to the size of the largest member. This is done to make sure that a dim array of structures (multiple structures adjacent in memory) also align properly</li>
      <li styleclass="Normal">When a structure contains an sub-structure (an IS declaration) &#160;the alignment of the outer structure uses the information from the inner structure.</li>
    </list>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">With manual (explicit) alignment each element of the structure is aligned to a memory address that is a multiple of the alignment specified.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Bold" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Some examples of automatic alignment</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> test1 &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Offset </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> W &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> WORD &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> dw </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">DWORD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 4</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> b &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> BYTE &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 8</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Total size of structure = 12 bytes (largest element = 4, so padded to 12)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Memory layout of structure</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0123|4567|8901</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// WW..|DWDW|B...</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// WW &#160; = Word</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// DWDW = Dword</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// B &#160; &#160;= Byte</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// . &#160; &#160;= Padding</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> test1 &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Offset</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> W &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> WORD &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> r8 </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">REAL8</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 8</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> b &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> BYTE &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 16</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Total size of structure = 24 bytes (largest element = 8, so padded to 24)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Memory layout of structure</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 01234567|89012345|67890123</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// WW......|R8R8R8R8|B.......</text></para>
    <para styleclass="Bold" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"></para>
    <para styleclass="Heading1">Explicit (manual ) Structure Alignment</para>
    <para styleclass="Normal">In some situations you need to match a structure declaration from a C/C++ header file that has explicit alignment. Then you need to add the ALIGN clause to your structure declaration.</para>
    <para styleclass="Normal">This forces the compiler to align the structure elements to a multiple of the specified size.</para>
    <para styleclass="Normal">An alignment of 1 tells the compiler NOT to use padding but to align all elements of a structure next to eachother. This is the most compact, but may be slower.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Bold" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Some examples of explicit alignment</text></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> test1 ALIGN 1 &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Offset</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> W &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> WORD &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> r8 </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">DWORD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 2</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> b &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> BYTE &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 6</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Total size of structure = 7 bytes (multiple of 1)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Memory layout of structure</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 01|2345|6</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// WW|DWDW|B</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">//</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// WW &#160; = Word</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// DWDW = Dword</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// B &#160; &#160;= Byte</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// . &#160; &#160;= Padding</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> test1 ALIGN 2 &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Offset </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> W &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> WORD &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> dw </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">DWORD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 2</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> b &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> BYTE &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 6</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Total size of structure = 8 bytes ( multiple of 2)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Memory layout of structure</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 01|23|45|67</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// WW|DW|DW|B.</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> test1 ALIGN 4 &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Offset </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> W &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> WORD &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> r8 </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">DWORD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 4</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> b &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> BYTE &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 8</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Total size of structure = 12 bytes (multiple of 4)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Memory layout of structure</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0123|4567|8901</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// WW..|DWDW|B...</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOSTRUCT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> test1 ALIGN 8 &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Offset</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> W &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> WORD &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> r8 </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">DWORD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 8</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">MEMBER</text><text style="font-weight:normal; font-style:normal; color:#000000;"> b &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> BYTE &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 16</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Total size of structure = 24 bytes (multiple of 8)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Memory layout of structure</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 01234567|89012345|67890123</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// WW......|DWDW....|B.......</text></para>
    <para styleclass="Heading1">See Also</para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_GLOBAL">GLOBAL</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_LOCAL">LOCAL</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="html\M_XSharp_RT_Functions_MemAlloc.htm" domain="XSharpRef.chm">MemAlloc()</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="html\M_XSharp_RT_Functions_MemFree.htm" domain="XSharpRef.chm">MemFree()</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">,, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_UNION">UNION</link></para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:144px left ;"></para>
  </body>
</topic>
