<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-26T12:07:29.825+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>-win32manifest</title>
  <keywords>
    <keyword>-win32manifest</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">-win32manifest</para>
    </header>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">使用 -win32manifest 选项可指定一个用户定义的 Win32 应用程序清单文件，该文件将嵌入到项目的可移植可执行文件(PE)中。</para>
    <para styleclass="Heading2">语法</para>
    <para styleclass="Code with box">-win32manifest: filename  </para>
    <para styleclass="Heading2">参数</para>
    <para styleclass="List"><text styleclass="Code Example">filename</text><tab/>自定义清单文件的名称和位置。</para>
    <para styleclass="Heading2">备注</para>
    <para styleclass="Normal">默认情况下，X# 编译器会嵌入一个应用程序清单，指定请求的执行级别为 &quot;asInvoker&quot;。它会在生成可执行文件的同一文件夹中创建清单，使用 Visual Studio 时通常是 bin\Debug 或 bin\Release 文件夹。如果要提供自定义清单，例如指定请求的执行级别为 &quot;highestAvailable &quot;或 &quot;requireAdministrator&quot;，可使用此选项指定文件名。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2">注意</para>
    <para styleclass="Normal">这个选项和 <link displaytype="text" defaultstyle="true" type="topiclink" href="opt-win32res">-win32res</link> 选项是互斥的。如果尝试在同一命令行中同时使用这两个选项，将导致生成错误。</para>
    <para styleclass="Normal">在 Windows Vista 的用户帐户控制功能下，没有指定请求的执行级别的应用程序将受到文件/注册表虚拟化的影响。</para>
    <para styleclass="Normal">如果满足以下条件之一，您的应用程序将受到虚拟化的影响：</para>
    <para styleclass="Normal"></para>
    <list id="0" type="ul" listtype="bullet" formatstring="·" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:13px; font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:13px;">如果使用了-<link displaytype="text" defaultstyle="true" type="topiclink" href="opt-nowin32manifest">nowin32manifest</link> 选项，并且没有在以后的生成步骤中提供清单，或通过使用 -win32res 选项作为 Windows 资源 (.res) 文件的一部分提供清单，则可以使用 -nowin32manifest 选项。</li>
      <li styleclass="Normal" style="margin-left:13px;">您提供的自定义清单未指定所请求的执行级别。</li>
    </list>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Visual Studio 会创建一个默认的 .manifest 文件，并将其与可执行文件一起存储在调试和发布目录中。你可以在任何文本编辑器中创建自定义清单，然后将文件添加到项目中。或者，在解决方案资源管理器中右键单击项目图标，单击添加新项，然后单击应用程序清单文件。添加新的或现有的清单文件后，它将出现在清单下拉列表中。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">您可以使用 <link displaytype="text" defaultstyle="true" type="topiclink" href="opt-nowin32manifest">-nowin32manifest</link> 选项，将应用程序清单作为自定义生成后步骤或 Win32 资源文件的一部分提供。如果希望在 Windows Vista 上对应用程序进行文件或注册表虚拟化，也可以使用相同的选项。这将防止编译器在可移植可执行文件 (PE) 中创建和嵌入默认清单。</para>
    <para styleclass="Heading2">示例</para>
    <para styleclass="Normal">下面的示例显示了 X# 编译器插入 PE 的默认清单。</para>
    <para styleclass="Heading2">注意</para>
    <para styleclass="Normal">编译器会在 xml 中插入一个标准应用程序名称 &quot;MyApplication.app&quot;。这是一种变通方法，可使应用程序在 Windows Server 2003 Service Pack 3 上运行。</para>
    <para styleclass="Code with box">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;  <br/>&lt;assembly xmlns=&quot;urn:schemas-microsoft-com:asm.v1&quot; manifestVersion=&quot;1.0&quot;&gt;  <br/>  &lt;assemblyIdentity version=&quot;1.0.0.0&quot; name=&quot;MyApplication.app&quot;/&gt;  <br/>  &lt;trustInfo xmlns=&quot;urn:schemas-microsoft-com:asm.v2&quot;&gt;  <br/>    &lt;security&gt;  <br/>      &lt;requestedPrivileges xmlns=&quot;urn:schemas-microsoft-com:asm.v3&quot;&gt;  <br/>        &lt;requestedExecutionLevel level=&quot;asInvoker&quot;/&gt;  <br/>      &lt;/requestedPrivileges&gt;  <br/>    &lt;/security&gt;  <br/>  &lt;/trustInfo&gt;  <br/>&lt;/assembly&gt;  </para>
    <para styleclass="Normal"></para>
  </body>
</topic>
