<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>PRIVATE statement</title>
  <keywords>
    <keyword>Arrays<keyword>creating</keyword></keyword>
    <keyword>Creating<keyword>variables</keyword></keyword>
    <keyword>Declaration statements</keyword>
    <keyword>Memory variable</keyword>
    <keyword>PRIVATE statement</keyword>
    <keyword>Runtime declaration</keyword>
    <keyword>Statements</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">PRIVATE Statement</para>
    </header>
    <para styleclass="NotesBox"><snippet src="__NotInCoreVulcan" inline="false"/><text styleclass="Heading1">Purpose</text></para>
    <para styleclass="Normal">Create variables and arrays visible within current and invoked routines.</para>
    <para styleclass="Heading1">Syntax</para>
    <para styleclass="Code with box">PRIVATE &lt;idVar&gt; [:= &lt;uValue&gt;] | &lt;ArraySpec&gt; [, ...]<br/>PRIVATE &lt;idVar&gt; [:= &lt;uValue&gt;] [AS &lt;Type&gt; [OF &lt;ClassLibrary&gt;] ] &#160;// FoxPro dialect</para>
    <para styleclass="Heading1">Arguments</para>
    <para styleclass="List">&lt;idVar&gt;<tab />A valid identifier name for the private variable to create.</para>
    <para styleclass="List"></para>
    <para styleclass="List">&lt;uValue&gt;<tab />The initial value to assign to the variable. &#160;If not specified, the variable is initialized to NIL.</para>
    <para styleclass="List"></para>
    <para styleclass="List">&lt;ArraySpec&gt;<tab />The specification for a dynamic array to create. &#160;&lt;ArraySpec&gt; is one of the following:</para>
    <para styleclass="List"><tab />&lt;idArray&gt;[&lt;nElements&gt;, &lt;nElements&gt;, &lt;nElements&gt;]</para>
    <para styleclass="List"><tab />&lt;idArray&gt;[&lt;nElements&gt;][&lt;nElements&gt;][&lt;nElements&gt;]</para>
    <para styleclass="List"><tab />All dimensions except the first are optional.</para>
    <para styleclass="List"><tab />&lt;idArray&gt; is a valid identifier name for the array to create. &#160;Array elements are initialized to NIL.</para>
    <para styleclass="List"><tab />&lt;nElements&gt; defines the number of elements in a particular dimension of an array. &#160;The number of dimensions is determined by how many &lt;nElements&gt; arguments you specify.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><snippet src="__TypeAndCLass" inline="false"/></para>
    <para styleclass="Heading1">Description</para>
    <para styleclass="Normal">PRIVATE is an executable statement which means you must specify it after any variable declaration statements (such as FIELD, LOCAL, and MEMVAR) in the routine that you are defining.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Warning! &#160;</text><text styleclass="Italic">Any reference to a variable created with this statement will produce a compiler error unless the Undeclared Variables compiler option is checked.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">When you create a private variable or array, existing and visible private and public variables of the same name are hidden until the current routine terminates or the private variable is explicitly released.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Attempting to specify a private variable that conflicts with a visible declared variable (for example, LOCAL, GLOBAL, or DEFINE) of the same name is not recognized by the compiler as an error because PRIVATE is not a compiler declaration statement. &#160; &#160;Instead, the declared variable will hide the public variable at runtime. &#160;This means that you will not be able to access the public variable at all until the declared variable is released.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">In class methods, instance variables (with the exception of access/assign variables) are always more visible than private variables of the same name. &#160;Use the _MEMVAR-&gt; alias to access a private variable within a method if there is a name conflict. &#160;For access/assign variables, use the SELF: &#160;prefix to override a name conflict with a private variable.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">In addition to the PRIVATE statement, you can create private variables by:</para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none; font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text styleclass="Normal">Assigning to a variable that does not exist or is not visible will create a private variable</text></li>
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text styleclass="Normal">Receiving parameters using the PARAMETERS statement</text></li>
    </list>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Private variables are dynamically scoped. &#160;They exist until the creating routine returns to its caller or until explicitly released with CLEAR ALL, or CLEAR MEMORY. &#160;</para>
    <para styleclass="Heading1">Notes</para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Compatibility: &#160;</text>The ALL, LIKE, and EXCEPT clauses of the PRIVATE statement supported by other Xbase dialects are not supported.</para>
    <para styleclass="Heading1">Examples</para>
    <para styleclass="Normal">The following example creates two PRIVATE arrays and three other PRIVATE variables:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">PRIVATE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> aArray1[10], aArray2[20], var1, var2, var3</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The next example creates a multi-dimensional private array using each element addressing convention:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">PRIVATE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> aArray[10][10][10], aArray2[10, 10, 10]</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">This example uses PRIVATE statements to create and initialize arrays and variables:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">PRIVATE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> aArray := { 1, 2, 3, 4 }, ;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;aArray2 := ArrayNew(12, 24)</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">PRIVATE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> cChar := Space(10), cColor := SetColor()</text></para>
    <para styleclass="Heading1">See Also</para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_LOCAL">LOCAL</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_MEMVAR">MEMVAR</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_PARAMETERS">PARAMETERS</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_PUBLIC">PUBLIC</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_DECLARE">DIMENSION</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_DECLARE">DECLARE</link></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
