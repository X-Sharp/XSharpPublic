<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Assignment operators</title>
  <keywords>
    <keyword>%=</keyword>
    <keyword>&amp;=</keyword>
    <keyword>*=</keyword>
    <keyword>/=</keyword>
    <keyword>:=</keyword>
    <keyword>^=</keyword>
    <keyword>|=</keyword>
    <keyword>~=</keyword>
    <keyword>+=</keyword>
    <keyword>&lt;&lt;=</keyword>
    <keyword>=</keyword>
    <keyword>-=</keyword>
    <keyword>&gt;&gt;=</keyword>
    <keyword>assignment operator</keyword>
    <keyword>operator</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Assignment operators</para>
    </header>
    <para styleclass="Normal">X# uses the following Assignment operators:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><table styleclass="Default" rowcount="15" colcount="3" style="width:auto;">
      <tr style="vertical-align:top">
        <td style="width:15%;">
          <para styleclass="Normal"><text style="font-weight:bold;">Operator</text></para>
        </td>
        <td style="width:15%;">
          <para styleclass="Normal"><text style="font-weight:bold;">Example</text></para>
        </td>
        <td>
          <para styleclass="Normal"><text style="font-weight:bold;">Meaning</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">:=</para>
        </td>
        <td>
          <para styleclass="Body Text">x := y</para>
        </td>
        <td>
          <para styleclass="Body Text">Store the value of the second operand in the object specified by the first operand (simple assignment).</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">=</para>
        </td>
        <td>
          <para styleclass="Body Text">x = y</para>
        </td>
        <td>
          <para styleclass="Body Text">Store the value of the second operand in the object specified by the first operand (simple assignment). <br/><text style="font-weight:bold;">This is allowed in the VFP dialect only ! In all other dialects assigning a value with a &apos;=&apos; operator will generate a warning.</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">+=</para>
        </td>
        <td>
          <para styleclass="Body Text">x += y</para>
        </td>
        <td>
          <para styleclass="Body Text">Add the value of the second operand to the value of the first operand; store the result in the object specified by the first operand</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">-=</para>
        </td>
        <td>
          <para styleclass="Body Text">x -= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Subtract the value of the second operand from the value of the first operand; store the result in the object specified by the first operand.</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">/=</para>
        </td>
        <td>
          <para styleclass="Body Text">x /= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Divide the value of the first operand by the value of the second operand; store the result in the object specified by the first operand</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">%=</para>
        </td>
        <td>
          <para styleclass="Body Text">x %= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Take modulus of the first operand specified by the value of the second operand; store the result in the object specified by the first operand.</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">*=</para>
        </td>
        <td>
          <para styleclass="Body Text">x *= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Multiply the value of the first operand by the value of the second operand; store the result in the object specified by the first operand.</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">^= or **=</para>
        </td>
        <td>
          <para styleclass="Body Text">x ^= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Calculate the exponent of the first operand and the second operand ; store the result in the object specified by the first operand.<br/><text style="font-weight:bold;">Please note that in languages such as C# the ^= operator performs a Bitwise XOR</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">|=<br/></para>
        </td>
        <td>
          <para styleclass="Body Text">x |= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Obtain the bitwise inclusive OR of the first and second operands; store the result in the object specified by the first operand.</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">&amp;= </para>
        </td>
        <td>
          <para styleclass="Body Text">x &amp;= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Obtain the bitwise AND of the first and second operands; store the result in the object specified by the first operand.</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">~=</para>
        </td>
        <td>
          <para styleclass="Body Text">x ~= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Obtain the bitwise exclusive OR of the first and second operands; store the result in the object specified by the first operand.</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">&lt;&lt;=</para>
        </td>
        <td>
          <para styleclass="Body Text">x &lt;&lt;= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Shift the value of the first operand left the number of bits specified by the value of the second operand; store the result in the object specified by the first operand.</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">&gt;&gt;=</para>
        </td>
        <td>
          <para styleclass="Body Text">x &gt;&gt;= y</para>
        </td>
        <td>
          <para styleclass="Body Text">Shift the value of the first operand right the number of bits specified by the value of the second operand; store the result in the object specified by the first operand.</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Body Text">?=</para>
        </td>
        <td>
          <para styleclass="Body Text">a ?= &quot;somevalue&quot;</para>
        </td>
        <td>
          <para styleclass="Body Text">When a is NULL then it will be assigned &quot;somevalue&quot;. Otherwise a is not changed</para>
        </td>
      </tr>
    </table></para>
    <para styleclass="Heading2">Assignment operators and XBase types </para>
    <para styleclass="Normal">See the topic about <link displaytype="text" defaultstyle="true" type="topiclink" href="Binary_Operators">Binary operators</link> to see which complex assignment operators are supported.</para>
  </body>
</topic>
