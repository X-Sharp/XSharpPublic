<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>-vo17</title>
  <keywords>
    <keyword>-vo17</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">-vo17</para>
    </header>
    <para styleclass="Body Text">Generate code to fully implement the VO compatible BEGIN SEQUENCE .. END SEQUENCE. </para>
    <para styleclass="Body Text">The compiler generates calls to the runtime functions _SequenceError and _SequenceRecover that you may override in your own code.</para>
    <para styleclass="Code with box">-vo17[+|-]</para>
    <para styleclass="Heading2">Arguments</para>
    <para styleclass="List">+ | - <tab />Specifying +, or just -vo17, tells the compiler to automatically generate constructors with the same signature as the constructors of the parent class</para>
    <para styleclass="Heading3">To set this compiler option in the Visual Studio development environment:</para>
    <para styleclass="Normal"></para>
    <list id="4" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:13px; font-family:Arial; font-size:11pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:13px;">Open the project&apos;s Properties page.</li>
      <li styleclass="Normal" style="margin-left:13px;">Click the Dialect tab. </li>
      <li styleclass="Normal" style="margin-left:13px;">Change the value.</li>
      <li styleclass="Normal" style="margin-left:13px;"><link displaytype="text" defaultstyle="true" type="topiclink" href="PropPage-Dialect">Click here to see the property page</link></li>
    </list>
    <para styleclass="Normal" style="margin-left:13px;"></para>
    <para styleclass="Normal" style="margin-left:13px;"></para>
    <para styleclass="Normal" style="margin-left:13px;">The generated code by the compiler will call 2 runtime functions to allow you to adjust the behavior of the BEGIN SEQUENCE .. END SEQUENCE handling.</para>
    <para styleclass="Normal" style="margin-left:13px;"></para>
    <para styleclass="Normal" style="margin-left:13px;">The default implementation of these functions is in the XSharp Runtime:</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;summary&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// This function is automatically inserted by the compiler in a RECOVER USING block and gets called when the</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// RECOVER USING block is reached because of an exception.</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;/summary&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;param name=&quot;e&quot;&gt;The exception that triggered the jump into the RECOVER USING block&lt;/param&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;remarks&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// The default implementation of this function (in the XSharp.RT assembly) called the installed error handler</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// that is installed with ErrorBlock()</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// The function should then have the following prototype</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;code language=&quot;X#&quot;&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// FUNCTION _SequenceError(e as Exception) AS VOID</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;/code&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;/remarks&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;returns&gt;The result of the call to the error handler installed in the ErrorBlock&lt;/returns&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;seelso cref=&apos;O:XSharp.RT.Functions._Break&apos;&gt;Break Function&lt;/seealso&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;seelso cref=&apos;O:XSharp.RT.Functions.ErrorBlock&apos;&gt;Break Function&lt;/seealso&gt;</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> _SequenceError(e </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Exception) </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">USUAL</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> error </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> XSharp.Error</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">IF</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> e </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">IS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> XSharp.Error </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VAR</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> err</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160;error := err</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">ELSE</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160;error := Error{e}</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">ENDIF</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Eval(ErrorBlock(), error)</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;summary&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// This function is automatically inserted by the compiler in a compiler generated</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// RECOVER USING block when you have a BEGIN SEQUENCE .. END SEQUENCE in your code</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// without RECOVER USING clause</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;/summary&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;param name=&quot;u&quot;&gt;The parameter that was passed in the BREAK statement or the call to the _Break function&lt;/param&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;remarks&gt;If a REAL exception occurs then this function is NOT called. The function is only called when</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// the (generated) RECOVER USING block is called with a value from a BREAK statement. &lt;br /&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// The default implementation of this function (in the XSharp.RT assembly) does nothing.</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// You can override this function in your own code if you want.</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// The function should then have the following prototype</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;code language=&quot;X#&quot;&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// FUNCTION _SequenceRecover(u as USUAL) AS VOID</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;/code&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;/remarks&gt;</text><br/><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">/// &lt;seelso cref=&apos;O:XSharp.RT.Functions._Break&apos;&gt;Break Function&lt;/seealso&gt;</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> _SequenceRecover(u </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">USUAL</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">) </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">RETURN</text></para>
    <para styleclass="Code Example"></para>
  </body>
</topic>
