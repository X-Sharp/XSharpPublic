<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project>

  <Import Project="..\eng\imports\OptProf.targets" />
  <Import Project="..\Directory.Build.targets" />
  <Import Project="..\eng\imports\VisualStudio.XamlRules.targets" />

  <!--
    Copies the contents of PublicAPI.Unshipped.txt into PublicAPI.Shipped.txt on build.
    It assumes that the project contains these files (PublicApiAnalyzers also makes this assumption).
    The script updates all the public API files in a project, so we only want it to run in the outer build.
  -->
  <Target Name="FlushUnshippedAPI" AfterTargets="Build" Condition="'$(CIBuild)' != 'true' and '$(IsInnerBuild)' != 'true'">
    <Exec ContinueOnError="false" Command="$(PowerShellFile) &quot;$(RepoRoot)eng\scripts\FlushUnshippedAPIFiles.ps1&quot; -projectDirectory &quot;$(MSBuildProjectDirectory)&quot;" />
  </Target>

  <!-- Adds the appropriate assemblies for signing. -->
  <Target Name="AddAssembliesForSigning" BeforeTargets="SignFiles" Condition="'$(CIBuild)' == 'true'">
    <ItemGroup>
      <FilesToSign Include="$(ArtifactsBinDir)$(OutDirName)\$(TargetFramework)\$(AssemblyName).dll;$(ArtifactsBinDir)$(OutDirName)\$(TargetFramework)\**\$(AssemblyName).resources.dll">
        <Authenticode>MicrosoftSHA2</Authenticode>
        <StrongName Condition="'$(IsManagedProjectSystemProject)' != 'false'">MsSharedLib72</StrongName>
        <StrongName Condition="'$(IsManagedProjectSystemProject)' == 'false'">67</StrongName>
      </FilesToSign>
    </ItemGroup>
  </Target>

  <!--
    When creating the Vsix, the assembles in the obj folder are used. These assemblies are not signed and are not optimized (OptProf).
    This target copies the updated assemblies from the Dlls back into the obj folder so the correct files are put into the Vsix.
  -->
  <Target Name="ReplaceObjAssembliesForVsix" AfterTargets="SignFiles" Condition="'$(CIBuild)' == 'true'">
    <!-- https://stackoverflow.com/a/8331202/294804 -->
    <!-- https://stackoverflow.com/a/10818869/294804 -->
    <ItemGroup>
      <ResourceDllsToCopy Include="$(OutputPath)**\$(AssemblyName).resources.dll" />
      <ResourceDllsToCopy2 Include="@(ResourceDllsToCopy)">
        <LanguageDir>$([System.IO.Path]::GetDirectoryName(%(ResourceDllsToCopy.RecursiveDir)))</LanguageDir>
      </ResourceDllsToCopy2>
    </ItemGroup>

    <Copy SourceFiles="$(OutputPath)$(AssemblyName).dll" DestinationFolder="$(ArtifactsObjDir)\$(AssemblyName)\$(TargetFramework)" />
    <Copy SourceFiles="@(ResourceDllsToCopy2)" DestinationFolder="$(ArtifactsObjDir)\$(AssemblyName)\$(TargetFramework)\%(LanguageDir)" />
  </Target>

</Project>
