<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-11-16T11:39:08.804+01:00" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>String Literals</title>
  <keywords>
    <keyword>Extended</keyword>
    <keyword>interpolated</keyword>
    <keyword>Literals</keyword>
    <keyword>STRING</keyword>
    <keyword>String Literals</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">String Literals</para>
    </header>
    <para styleclass="Normal">There are a couple of different string types inside X#. For normal strings, the notation can be different for different dialects:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><table styleclass="Default" rowcount="7" colcount="3">
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text style="font-weight:bold;">Literal</text></para>
        </td>
        <td>
          <para styleclass="Normal"><text style="font-weight:bold;">VO, FoxPro &amp; Harbour</text></para>
        </td>
        <td>
          <para styleclass="Normal"><text style="font-weight:bold;">Vulcan &amp; Core</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal">&apos;&lt;char&gt;&apos;</para>
        </td>
        <td>
          <para styleclass="Normal">String literal</para>
        </td>
        <td>
          <para styleclass="Normal"><text style="font-weight:bold;">Char literal*</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal">&apos;&lt;char&gt;...&lt;char&gt;&apos;</para>
        </td>
        <td>
          <para styleclass="Normal">String literal</para>
        </td>
        <td>
          <para styleclass="Normal"><text style="font-weight:bold;">Not Supported</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal">&quot;&lt;char&gt;...&lt;char&gt;&quot;</para>
        </td>
        <td>
          <para styleclass="Normal">String literal</para>
        </td>
        <td>
          <para styleclass="Normal">String literal</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text style="font-weight:bold;">e</text>&quot;&lt;char&gt;...&lt;char&gt;&quot;</para>
        </td>
        <td>
          <para styleclass="Normal">Extended string literal<text style="font-weight:bold;">*</text></para>
        </td>
        <td>
          <para styleclass="Normal">Extended string literal<text style="font-weight:bold;">*</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text style="font-weight:bold;">i</text>&quot;&lt;char&gt;.. &lt;char&gt;{expression}&quot;</para>
        </td>
        <td>
          <para styleclass="Normal">Interpolated string literal</para>
        </td>
        <td>
          <para styleclass="Normal">Interpolated string literal</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text style="font-weight:bold;">ei</text>&quot;&lt;char&gt;.. &lt;char&gt;{expression}&quot; or</para>
          <para styleclass="Normal"><text style="font-weight:bold;">ie</text>&quot;&lt;char&gt;.. &lt;char&gt;{expression}&quot; </para>
        </td>
        <td>
          <para styleclass="Normal">Extended interpolated string literal<text style="font-weight:bold;">*</text></para>
        </td>
        <td>
          <para styleclass="Normal">Extended interpolated string literal<text style="font-weight:bold;">*</text></para>
        </td>
      </tr>
    </table></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><snippet src="Escape-codes" inline="false"/></para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"></para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text styleclass="" style="font-family:Arial; font-size:10pt; color:#000000;">Interpolated strings inside X# can contain expressions in &#160;the form of</text></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#3366ff;">{&lt;interpolationExpression&gt;[,&lt;alignment&gt;][::&lt;formatString&gt;]}</text></para>
    <para styleclass="Body Text">In C# the formatString is prefixed with a single colon. Please note that because in X# the colon (<text styleclass="Code Example" style="font-size:12pt;">:</text>) operator is the default member access operator for instance fields, properties and methods, it is not always possible to use that operator to separate expressions and format string. We have therefore changed that operator to the double colon (<text styleclass="Code Example" style="font-size:12pt;">::</text>). I &#160;you compile with /allowdot+ then you can also use the single colon for the format separator.</para>
    <para styleclass="Body Text">To represent a literal &apos;{&apos; or &apos;}&apos; character you will have to duplicate them inside the string. The expressions inside the string are in italics in this example.</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">An example of this could be</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Start() </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">local</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> X := 2 </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">local</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Y := 3 </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">var</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> pointMessage := i</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#3366ff;">&quot;The point {{{</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#3366ff;">X</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#3366ff;">}, {</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#3366ff;">Y</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#3366ff;">}}} is {</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#3366ff;">Math.Sqrt(X * X + Y * Y)</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#3366ff;">::F3} from the origin&quot;</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">Console</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">.WriteLine(pointMessage)</text><br/><tab /><text style="font-style:italic; text-decoration:none; color:#339966;">// Output is:</text><br/><tab /><text style="font-style:italic; text-decoration:none; color:#339966;">// The point {2, 3} is 3.606 from the origin</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"></para>
  </body>
</topic>
