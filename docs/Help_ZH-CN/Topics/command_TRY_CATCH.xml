<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-06-29T22:59:57.140+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>TRY CATCH 语句</title>
  <keywords>
    <keyword>Branching</keyword>
    <keyword>CATCH statement</keyword>
    <keyword>END TRY statement</keyword>
    <keyword>FINALLY statement</keyword>
    <keyword>Program control</keyword>
    <keyword>Statements</keyword>
    <keyword>THROW statement</keyword>
    <keyword>TRY CATCH  statement</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">TRY CATCH 语句</para>
    </header>
    <para styleclass="Heading1">用途</para>
    <para styleclass="Body Text"><text style="font-weight:bold;">TRY、CATCH </text>和<text style="font-weight:bold;"> FINALLY </text>用于声明异常处理块。</para>
    <para styleclass="Heading1">语法</para>
    <para styleclass="Code with box">TRY<br/><tab /><text style="font-style:italic;">guardedStatements</text><br/>[CATCH [[<text style="font-style:italic;">variableName]</text> AS <text style="font-style:italic;">exceptionType</text>] [WHEN <text style="font-style:italic;">whenexpression</text>]<br/><tab /><text style="font-style:italic;">exceptionHandlingStatements</text><br/>] &#160; <br/>[FINALLY<br/><tab /><text style="font-style:italic;">cleanupStatements</text><br/>]<br/>END TRY<text styleclass="Body Text">&#32;</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Heading1">参数</para>
    <para styleclass="Body Text"></para>
    <para styleclass="List" style="text-indent:-241px; margin-left:241px; tabstops:240px left ;"><text style="font-style:italic;">variableName</text><tab />接收异常的变量名。变量名是可选项。如果只指定类型，异常仍会被捕获，但不会存储在本地变量中。</para>
    <para styleclass="List" style="text-indent:-241px; margin-left:241px; tabstops:240px left ;"></para>
    <para styleclass="List" style="text-indent:-241px; margin-left:241px; tabstops:240px left ;"><text style="font-style:italic;">exceptionType</text><tab />CATCH 代码块将捕获的异常类型。</para>
    <para styleclass="List" style="text-indent:-241px; margin-left:241px; tabstops:240px left ;"></para>
    <para styleclass="List" style="text-indent:-241px; margin-left:241px; tabstops:240px left ;"><text style="font-style:italic;">whenexpression</text><tab />逻辑表达式，用于确定特定 CATCH 块是否应处于活动状态</para>
    <para styleclass="List" style="text-indent:-241px; margin-left:241px; tabstops:240px left ;"></para>
    <para styleclass="List" style="text-indent:-241px; margin-left:241px; tabstops:240px left ;"><text style="font-style:italic;">exceptionHandlingStatements</text><tab />处理异常情况的零个或多个语句。</para>
    <para styleclass="List" style="text-indent:-241px; margin-left:241px; tabstops:240px left ;"></para>
    <para styleclass="List" style="text-indent:-241px; margin-left:241px; tabstops:240px left ;"><text style="font-style:italic;">cleanupStatements</text><tab />零个或多个语句，在退出 TRY 块之前执行必要的清理。</para>
    <para styleclass="Heading1">备注</para>
    <para styleclass="Body Text"><text style="font-weight:bold;">TRY-CATCH-FINALLY</text> 块用于捕获和处理代码块中可能抛出的异常。异常可能由 CLR、Vulcan.NET 运行时库、第三方库或使用 <text style="font-weight:bold;">THROW </text>语句的应用程序代码产生。</para>
    <para styleclass="Heading3">TRY 块</para>
    <para styleclass="Body Text">TRY 代码块中的语句有时被称为 &quot;保护 &quot;语句。这些语句可能会导致异常，而您希望处理这些异常。</para>
    <para styleclass="Heading3">CATCH 块</para>
    <para styleclass="Body Text">一个异常处理块可以包含任意数量的 CATCH 块(包括零)。每个声明了变量名和类型的 CATCH 块都将接收该类型的异常。接收异常的 CATCH 块会隐式声明一个包含捕获异常的局部变量。这个隐式声明的局部变量只在 CATCH 代码块的范围内有效。该变量的名称不得与任何显式声明的 LOCAL 或参数相同，否则会出现编译时错误。不过，在多个 CATCH 代码块中使用相同的变量名是合法的。由于每个 CATCH 代码块的变量只在其外层代码块中可见，因此不会发生冲突。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">CATCH 代码块也可以不声明变量名，但声明异常类型。在这种情况下，异常仍会被捕获，但不会存储在局部变量中。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">CATCH 代码块也可以不声明任何变量名和异常类型。这种类型的 CATCH 代码块将捕获任何异常，相当于声明了一个异常类型为 System.Exception 的 CATCH 代码块。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">如果声明了多个 CATCH 代码块，它们出现的顺序很重要。CLR 将按顺序检查 CATCH 子句，并调用与抛出的异常相匹配的第一个子句。这不仅包括指定的特定异常类，还包括任何派生类。因此，应先捕获较特殊的异常类型，再捕获不那么特殊的异常类型。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">CATCH 块中声明的异常类型必须始终是 System.Exception 或由其派生的类。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">如果没有为已抛出的异常声明合适的 CATCH 块，控制权将被传递到下一个最高级别的异常处理块。如果没有更高级的异常处理块，或者没有可以处理该异常的异常处理块，应用程序将终止。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">可以使用 THROW 关键字明确地将异常传递给下一个最高级别的异常处理块。</para>
    <para styleclass="Heading3">Finally 块</para>
    <para styleclass="Body Text">如果声明了 FINALLY 代码块，无论 TRY 代码块如何退出，其中的任何语句都会被执行。这就为执行任何清理（如释放资源）提供了一种机制。即使没有合适的 CATCH 代码块来处理异常，finally 代码块中的代码也会被执行。</para>
    <para styleclass="Heading3">兼容性说明：</para>
    <para styleclass="Body Text">TRY-CATCH-FINALLY 块与 BEGIN SEQUENCE-RECOVER 块类似，但比 BEGIN SEQUENCE-RECOVER 块更灵活。不过，为了向后兼容，仍支持 BEGIN SEQUENCE 和 RECOVER。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">请注意，使用 BREAK 抛出的异常不会被 TRY-CATCH-FINALLY 块捕获，因为 BREAK 抛出的数据封装在 USUAL 中，而 USUAL 并不继承于 System.Exception。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">然而，使用 THROW 抛出的异常将被下一个最高的 BEGIN SEQUENCE 代码块（如果有）捕获，如果已声明 RECOVER USING 变量，异常将被封装在 USUAL 中。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">还要注意的是，CanBreak() 运行时函数不会检测当前执行是否在 TRY 代码块中。提供 CanBreak() 函数只是为了与现有的 Visual Objects 代码和 BEGIN SEQUENCE 块兼容，而不应依赖它来确定执行是否在异常处理块中。由于 CLR 中不存在该功能，因此无法确定执行是否在异常处理块中，而且执行可能是在以 Vulcan.NET 以外的语言编译的代码中进行的。</para>
    <para styleclass="Heading1">示例</para>
    <para styleclass="Body Text">下面的示例测试除数为零的除法，并捕获 CLR 在除数为零时抛出的异常。任何其他异常都会传播到下一个最高的异常处理块（如果有的话）。如果没有异常处理块，应用程序将以未处理的除以零异常结束。</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DivisionTest( x </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; color:#000000;">, y </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TRY</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x / y</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CATCH</text><text style="font-weight:normal; font-style:normal; color:#000000;"> e </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> System.DivideByZeroException</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;? &quot;除以零！&quot;, e</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TRY</text></para>
    <para styleclass="Body Text">下面的示例演示了多个 CATCH 块和一个 FINALLY 块：</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">USING</text><text style="font-weight:normal; font-style:normal; color:#000000;"> System.IO</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ReadFile( filename </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> s </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TRY</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;s := File.ReadAllText( filename ) </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CATCH</text><text style="font-weight:normal; font-style:normal; color:#000000;"> e </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DirectoryNotFoundException</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;? &quot;未找到目录&quot;, e</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CATCH</text><text style="font-weight:normal; font-style:normal; color:#000000;"> e </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> IOException</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;? &quot;发生 IO 异常&quot;, e</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CATCH</text><text style="font-weight:normal; font-style:normal; color:#000000;"> e </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> UnauthorizedAccessException</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;? &quot;拒绝访问&quot;, e</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CATCH</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;? &quot;其他例外情况&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">FINALLY</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;? &quot;全部完成！&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TRY</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> s &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text styleclass="Body Text"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text></para>
    <para styleclass="Heading2">参见</para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:7px; margin-right:0px; margin-bottom:7px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_BEGIN_SEQUENCE" styleclass="" style="font-family:&apos;Times New Roman&apos;; font-size:12pt; text-decoration:underline; color:#0000ff;">BEGIN SEQUENCE</link><br/><link displaytype="text" defaultstyle="true" type="topiclink" href="command_THROW" styleclass="" style="font-family:&apos;Times New Roman&apos;; font-size:12pt; text-decoration:underline; color:#0000ff;">THROW</link></para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"></para>
  </body>
</topic>
