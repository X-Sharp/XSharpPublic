<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-04T22:48:56.788+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>-vo5</title>
  <keywords>
    <keyword>-vo5</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">-vo5<tab /><tab />隐式 CLIPPER 调用约定 </para>
    </header>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">对于声明为零参数且没有显式调用约定的函数，-vo5 选项指示编译器隐式使用 CLIPPER 调用约定。</para>
    <para styleclass="Heading2">语法</para>
    <para styleclass="Code with box">-vo5[+|-]</para>
    <para styleclass="Heading2">参数</para>
    <para styleclass="List">+ | - <tab />指定 + 或只指定 -vo5，可指示编译器隐式使用 CLIPPER 调用约定，用于声明参数为零且没有显式调用约定的函数、方法和构造函数。</para>
    <para styleclass="Heading2">备注</para>
    <para styleclass="Normal">为了与 Clipper 兼容，Visual Objects 对所有声明为零参数且没有显式调用约定的函数和方法使用 CLIPPER 调用约定。可以使用 STRICT 关键字来覆盖默认设置，并使函数使用 STRICT 调用约定。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">然而，在绝大多数情况下，从不向声明为零参数的函数和方法传递参数，因此默认使用 CLIPPER 调用约定不仅在函数本身产生不必要的开销，而且在每个调用点都会有开销。此外，CLIPPER 调用约定允许传递任意数量和类型的参数，从而阻止了编译时的错误检查。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">在 X# 中，默认情况下，声明为零参数的函数和方法将使用 STRICT 调用约定进行编译，除非显式指定了 CLIPPER 关键字。这种行为与 Visual Objects 完全相反，但会产生更高效的代码以及编译时的错误检查。向声明为接受零参数的函数传递任何参数将引发编译时错误。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">然而，这可能会导致在最初使用 Visual Objects 编写的代码中出现兼容性问题。-vo5 编译器选项会反转 X# 关于零参数函数默认行为，使其与 Visual Objects 相同。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">无论启用与否，始终可以使用 CLIPPER 和 STRICT 关键字来明确指定所需的调用约定。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Heading3">要在 Visual Studio 开发环境中设置该编译器选项，请执行以下操作</text></para>
    <para styleclass="Normal"></para>
    <list id="0" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:13px; font-family:Arial; font-size:11pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:13px;">打开项目的 &quot;属性&quot;页面</li>
      <li styleclass="Normal" style="margin-left:13px;">点击 Dialect 选项卡 </li>
      <li styleclass="Normal" style="margin-left:13px;">更改值</li>
      <li styleclass="Normal" style="margin-left:13px;"><link displaytype="text" defaultstyle="true" type="topiclink" href="PropPage-Dialect">查看属性页</link></li>
    </list>
    <para styleclass="Heading2">示例</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> foo() </text><text style="font-weight:bold; font-style:italic; color:#339966;">// CLIPPER</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? pcount(), _getFParam( 1 )</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">foo( 1 )</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text></para>
    <para styleclass="Normal">如果使用了 -vo5，或者在 FUNCTION foo() 声明的末尾添加了 CLIPPER 关键字，上述示例就能正确编译和运行。否则，在调用 foo() 以及调用 pcount() 和 _getFParam()（这在 STRICT 调用约定函数中是非法的）时将产生编译器错误。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
