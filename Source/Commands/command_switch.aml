<?xml version="1.0" encoding="utf-8"?>
<topic id="3f1770e9-c4df-435e-86a3-2c990e77d598" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>TODO: Move introduction text here</para>
    </introduction>




     
     <para><legacyBold>Navigation:</legacyBold>&#160;
     
     <!-- TODO: Unknown topic link: xsharp.html -->X# Documentation &gt; <!-- TODO: Unknown topic link: chapter-2.html -->X# Language Reference &gt; <!-- TODO: Unknown topic link: commands-by-category.html -->Commands and Statements &gt; <!-- TODO: Unknown topic link: cmd_cat_control.html -->Program Control&#160;&gt;</para>

     
     <!-- TODO: Add named anchor: prev --><mediaLink><image xlink:href="btn_prev_n" /></mediaLink><!-- TODO: Add named anchor: main --><mediaLink><image xlink:href="btn_home_n" /></mediaLink><!-- TODO: Add named anchor: next --><mediaLink><image xlink:href="btn_next_n" /></mediaLink>
    
    <h1 class="p_Heading1" style="page-break-after: avoid;">SWITCH Statement</h1>

  
  <!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
  
  



     <!--ZOOMRESTART-->
     <h2 class="p_Heading2" style="page-break-after: avoid;">Purpose</h2>
<para>Conditionally execute a block of statements.</para>
<h2 class="p_Heading2" style="page-break-after: avoid;">Syntax</h2>
<para>SWITCH &lt;expression&gt;<para/>
CASE &lt;constantvalue&gt; [WHEN &lt;whenexpression&gt;]<para/>
 &#160; &lt;Statements&gt;...<para/>
[CASE &lt;constantvalue&gt;]<para/>
[CASE &lt;constantvalue&gt;]<para/>
 &#160; &lt;Statements&gt;...<para/>
[CASE &lt;constantvalue&gt;]<para/>
 &#160; &lt;Statements&gt;...<para/>
[CASE &lt;variablename&gt; AS &lt;datatype&gt;] [WHEN &lt;whenexpression&gt;]<para/>
 &#160; &lt;Statements&gt;...<para/>
[OTHERWISE]<para/>
 &#160; &lt;Statements&gt;...<para/>
END [SWITCH]</para>
<h2 class="p_Heading2" style="page-break-after: avoid;">Arguments</h2>
<table><row><entry>&lt;constantvalue&gt;</entry><entry>A constant value that can be evaluated at compile time. You can also have 2 consecutive CASE lines without statements between them. In that case both CASE lines share the same statementblock. If you want a case block without statements, then insert a NOP statement as its statement.</entry></row></table><table><row><entry>&lt;whenexpression&gt;</entry><entry>A logical expression that determines if the particular CASE block should be active This is sometimes called an expression filter.</entry></row></table><table><row><entry>&lt;variablename&gt;</entry><entry>A variablename that gets declared by the pattern matching expression </entry></row></table><table><row><entry>&lt;datatype&gt;</entry><entry>The datatype of the variable in the pattern matching expression</entry></row></table><para>&#160;</para>
<table><row><entry>OTHERWISE</entry><entry>If none of the preceding CASE conditions match, the statements following the OTHERWISE up until the next END SWITCH are executed. Afterwards, control branches to the statement following the next END SWITCH statement.</entry></row></table><h2 class="p_Heading2" style="page-break-after: avoid;">Description</h2>
<para>SWITCH works by branching to the statement following the first CASE &lt;constantvalue&gt; that evaluates to TRUE. If all CASE conditions evaluate to FALSE, it branches to the statement following the OTHERWISE statement (if specified). </para>
<para>In general there are 2 types of SWITCH statements:</para>
<para>1.Switch statements with constant values (CASE &lt;constantvalue&gt;)</para><para>2.Switch statements with pattern matching expressions (CASE &lt;varName&gt; AS &lt;datatype&gt;)</para><para>Both types of SWITCH statements can be enhanced with WHEN filters.</para>
<para>If you do not have a WHEN filter then each CASE line must be &quot;unique&quot;, so no two CASEs can have the same constantvalue or same datatype. If you add a WHEN filter then this is allowed.</para>
<para>The compiler may (and will) rearrange the order of the CASE labels when generating code for example to combine two CASEs with the same constant value and a WHEN filter. These may be combined into one CASE label with an embedded IF statement.</para>
<para>&#160;</para>
<para>Execution proceeds until the next CASE, OTHERWISE, or ENDCASE is encountered, and control then branches to the first statement following the next ENDCASE statement.</para>
<para>Control structures can be nested to any depth. The only requirement is that each control structure be properly nested.</para>
<para>&#160;</para>
<h2 class="p_Heading2" style="page-break-after: avoid;">Examples</h2>
<para>This example uses SWITCH in a menu structure to branch control based on user selection:</para>
<para>FUNCTION ActonChoice(nChoice as LONG) AS VOID<para/>
SWITCH nChoice<para/>
CASE &#160;0<para/>
 &#160; RETURN<para/>
CASE 1<para/>
 &#160; ChoiceOne()<para/>
CASE 2<para/>
 &#160; ChoiceTwo()<para/>
END SWITCH</para>
<h2 class="p_Heading2" style="page-break-after: avoid;">See Also</h2>
<para><link xlink:href="8d75ad58-39e3-4eb7-86fc-c76fd96f2441" />, <link xlink:href="d5dffe8e-fc26-4e58-a5a7-31c26132758f">DO WHILE</link>, <link xlink:href="a6f0f406-78b2-4a8e-8819-6fadbb71474d">FOR</link>, <link xlink:href="1f854d56-6755-4db4-8078-83f5937dede8">FOREACH</link> <link xlink:href="c100f682-3607-4d37-af60-c7e05e9b7695">IF</link> <!-- TODO: Unknown topic link: switch-example.html -->DO CASE</para>
<para>&#160;</para>

     <!--ZOOMSTOP-->

<!-- TODO: Review markup -->
<markup>
<script>
           var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
           if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
	   $(document).ready(function(){
		   $(window).bind('resize', function() {
				var y = $('#header').height();
				$('#content').css('margin-top', y);
				$('.hmanchor').css('margin-top', -y-20);
				$('.hmanchor').css('padding-top', y+20);
			});
		   $(window).triggerHandler('resize');	
		   $(window).triggerHandler('resize');	
                   
		});
</script>
</markup>

    <relatedTopics>
    </relatedTopics>

  </developerConceptualDocument>
</topic>
