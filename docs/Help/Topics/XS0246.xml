<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="helpproject.xsd">
  <title>XS0246</title>
  <keywords>
    <keyword>XS0246</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Error XS0246</para>
    </header>
    <para styleclass="Normal">The type or namespace name &apos;type/namespace&apos; could not be found (are you missing a using directive or an assembly reference?)</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">A type or namespace that is used in the program was not found. You might have forgotten to reference (<link displaytype="text" defaultstyle="true" type="topiclink" href="opt-reference">/reference</link>) the assembly that contains the type, or you might not have added the required using directive. Or, there might be an issue with the assembly you are trying to reference.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The following situations cause compiler error XS0246.</para>
    <para styleclass="Normal"></para>
    <list id="0" type="ul" listtype="bullet" formatstring="·" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:13px; font-family:Symbol; font-size:8pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:13px;">Did you misspell the name of the type or namespace? Without the correct name, the compiler cannot find the definition for the type or namespace. This often occurs because the casing used in the name of the type is not correct. For example, Dataset ds; generates XS0246 because the s in Dataset must be capitalized.</li>
      <li styleclass="Normal" style="margin-left:13px;">If the error is for a namespace name, did you add a reference (<link displaytype="text" defaultstyle="true" type="topiclink" href="opt-reference">/reference</link>) to the assembly that contains the namespace? For example, your code might contain the directive using Accessibility. However, if your project does not reference the assembly Accessibility.dll, error XS0246 is reported. For more information, see Managing references in a project</li>
      <li styleclass="Normal" style="margin-left:13px;">If the error is for a type name, did you include the proper using directive, or, alternatively, fully qualify the name of the type? Consider the following declaration: DataSet ds. To use the DataSet type, you need two things. First, you need a reference to the assembly that contains the definition for the DataSet type. Second, you need a using directive for the namespace where DataSet is located. For example, because DataSet is located in the System.Data namespace, you need the following directive at the beginning of your code: using System.Data.</li>
      <li styleclass="Normal" style="margin-left:13px;">The using directive is not required. However, if you omit the directive, you must fully qualify the DataSet type when referring to it. Full qualification means that you specify both the namespace and the type each time you refer to the type in your code. If you omit the using directive in the previous example, you must write System.Data.DataSet ds to declare ds instead of DataSet ds.</li>
      <li styleclass="Normal" style="margin-left:13px;">Did you use a variable or some other language element where a type was expected? For example, in an is statement, if you use a Type object instead of an actual type, you get error XS0246.</li>
      <li styleclass="Normal" style="margin-left:13px;">Did you use a using alias directive without fully qualifying the type name? A using alias directive does not use the using directives in the source code file to resolve types. The following example generates XS0246 because the type List&lt;int&gt; is not fully qualified. The using directive for System.Collections.Generic does not prevent the error.</li>
    </list>
    <para styleclass="Normal" style="margin-left:13px;"></para>
    <para styleclass="Normal" style="margin-left:13px;"></para>
    <para styleclass="Code with box"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">If you get this error in code that was previously working, first look for missing or unresolved references in Solution Explorer. Do you need to re-install a NuGetpackage? For information about how the build system searches for references, see Resolving file references in team build. If all references seem to be correct, look in your source control history to see what has changed in your .xsproj file and/or your local source file.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">If you haven’t successfully accessed the reference yet, use the Object Browser to inspect the assembly that is supposed to contain this namespace and verify that the namespace is present. If you verify with Object Browser that the assembly contains the namespace, try removing the “using” directive for the namespace and see what else breaks. The root problem may be with some other type in another assembly.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The following example generates XS0246 because a necessary using directive is missing.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box">// XS0246.prg  <br/></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The following example causes XS0246 because an object of type Type was used where an actual type was expected.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box">// XS0246b.prg  <br/></para>
  </body>
</topic>
