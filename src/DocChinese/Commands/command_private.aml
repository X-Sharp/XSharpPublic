<?xml version="1.0" encoding="utf-8"?>
<topic id="167a7bca-5bea-4198-b685-3376fba16514" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>TODO: Move introduction text here</para>
    </introduction>




     
     <para><legacyBold>Navigation:</legacyBold>&#160;
     
     <!-- TODO: Unknown topic link: xsharp.html -->X# Documentation &gt; <!-- TODO: Unknown topic link: chapter-2.html -->X# Language Reference &gt; <!-- TODO: Unknown topic link: commands-by-category.html -->Commands and Statements &gt; <!-- TODO: Unknown topic link: cmd_cat_memvar.html -->Memory Variable&#160;&gt;</para>

     
     <!-- TODO: Add named anchor: prev --><mediaLink><image xlink:href="btn_prev_n" /></mediaLink><!-- TODO: Add named anchor: main --><mediaLink><image xlink:href="btn_home_n" /></mediaLink><!-- TODO: Add named anchor: next --><mediaLink><image xlink:href="btn_next_n" /></mediaLink>
    
    <h1 class="p_Heading1" style="page-break-after: avoid;">PRIVATE Statement</h1>

  
  <!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
  
  



     <!--ZOOMRESTART-->
     <h1 class="p_Heading1" style="page-break-after: avoid;">Purpose</h1>
<para>Create variables and arrays visible within current and invoked routines.</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Syntax</h1>
<para>PRIVATE &lt;idVar&gt; [:= &lt;uValue&gt;] | &lt;ArraySpec&gt; [, ...]</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Arguments</h1>
<table><row><entry>&lt;idVar&gt;</entry><entry>A valid identifier name for the private variable to create.</entry></row></table><para>&#160;</para>
<table><row><entry>&lt;uValue&gt;</entry><entry>The initial value to assign to the variable. &#160;If not specified, the variable is initialized to NIL.</entry></row></table><para>&#160;</para>
<table><row><entry>&lt;ArraySpec&gt;</entry><entry>The specification for a dynamic array to create. &#160;&lt;ArraySpec&gt; is one of the following:</entry></row></table><table><row><entry></entry><entry>&lt;idArray&gt;[&lt;nElements&gt;, &lt;nElements&gt;, &lt;nElements&gt;]</entry></row></table><table><row><entry></entry><entry>&lt;idArray&gt;[&lt;nElements&gt;][&lt;nElements&gt;][&lt;nElements&gt;]</entry></row></table><table><row><entry></entry><entry>All dimensions except the first are optional.</entry></row></table><table><row><entry></entry><entry>&lt;idArray&gt; is a valid identifier name for the array to create. &#160;Array elements are initialized to NIL.</entry></row></table><table><row><entry></entry><entry>&lt;nElements&gt; defines the number of elements in a particular dimension of an array. &#160;The number of dimensions is determined by how many &lt;nElements&gt; arguments you specify.</entry></row></table><h1 class="p_Heading1" style="page-break-after: avoid;">Description</h1>
<para>PRIVATE is an executable statement which means you must specify it after any variable declaration statements (such as FIELD, LOCAL, and MEMVAR) in the routine that you are defining.</para>
<para>&#160;</para>
<para>Warning!  Any reference to a variable created with this statement will produce a compiler error unless the Undeclared Variables compiler option is checked.</para>
<para>&#160;</para>
<para>When you create a private variable or array, existing and visible private and public variables of the same name are hidden until the current routine terminates or the private variable is explicitly released.</para>
<para>&#160;</para>
<para>Attempting to specify a private variable that conflicts with a visible declared variable (for example, LOCAL, GLOBAL, or DEFINE) of the same name is not recognized by the compiler as an error because PRIVATE is not a compiler declaration statement. &#160; &#160;Instead, the declared variable will hide the public variable at runtime. &#160;This means that you will not be able to access the public variable at all until the declared variable is released.</para>
<para>&#160;</para>
<para>In class methods, instance variables (with the exception of access/assign variables) are always more visible than private variables of the same name. &#160;Use the _MEMVAR-&gt; alias to access a private variable within a method if there is a name conflict. &#160;For access/assign variables, use the SELF: &#160;prefix to override a name conflict with a private variable.</para>
<para>&#160;</para>
<para>In addition to the PRIVATE statement, you can create private variables by:</para>
<para>&#183;Assigning to a variable that does not exist or is not visible will create a private variable</para><para>&#183;Receiving parameters using the PARAMETERS statement</para><para>&#160;</para>
<para>Private variables are dynamically scoped. &#160;They exist until the creating routine returns to its caller or until explicitly released with CLEAR ALL, or CLEAR MEMORY. &#160;</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Notes</h1>
<para>Compatibility:  The ALL, LIKE, and EXCEPT clauses of the PRIVATE statement supported by other Xbase dialects are not supported.</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Examples</h1>
<para>The following example creates two PRIVATE arrays and three other PRIVATE variables:</para>
<para>&#160;</para>
<para>PRIVATE aArray1[10], aArray2[20], var1, var2, var3</para>
<para>&#160;</para>
<para>The next example creates a multi-dimensional private array using each element addressing convention:</para>
<para>&#160;</para>
<para>PRIVATE aArray[10][10][10], aArray2[10, 10, 10]</para>
<para>&#160;</para>
<para>This example uses PRIVATE statements to create and initialize arrays and variables:</para>
<para>&#160;</para>
<para>PRIVATE aArray := { 1, 2, 3, 4 }, ;<para/>
 &#160; &#160; &#160;aArray2 := ArrayNew(12, 24)<para/>
PRIVATE cChar := Space(10), cColor := SetColor()</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">See Also</h1>
<para><link xlink:href="d8822cca-7c06-4150-b83c-2dd9b531186d">LOCAL</link>, <link xlink:href="70df5af5-ce42-4ba8-afec-5b3a4de8d996">MEMVAR</link>, <link xlink:href="f6fe8ee8-c61d-405e-8da1-35f1f0564f84">PARAMETERS</link>, <link xlink:href="8d194317-f7c6-462f-bcfb-ccb8b195d6bf">PUBLIC</link></para>
<para>&#160;</para>

     <!--ZOOMSTOP-->

<!-- TODO: Review markup -->
<markup>
<script>
           var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
           if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
	   $(document).ready(function(){
		   $(window).bind('resize', function() {
				var y = $('#header').height();
				$('#content').css('margin-top', y);
				$('.hmanchor').css('margin-top', -y-20);
				$('.hmanchor').css('padding-top', y+20);
			});
		   $(window).triggerHandler('resize');	
		   $(window).triggerHandler('resize');	
                   
		});
</script>
</markup>

    <relatedTopics>
    </relatedTopics>

  </developerConceptualDocument>
</topic>
