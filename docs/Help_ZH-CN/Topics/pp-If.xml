<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-06-30T11:23:15.594+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>#if</title>
  <body>
    <header>
      <para styleclass="Heading1">#if</para>
    </header>
    <para styleclass="Heading1">用途</para>
    <para styleclass="Body Text">在源代码中标记一个区域，该区域只有在逻辑条件求值为 TRUE 时才会被纳入编译。</para>
    <para styleclass="Heading1">语法</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">if</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;logical_expression&gt; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;SourceCode included </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">if</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;logical_expression&gt; evaluates </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">to</text><text style="font-weight:normal; font-style:normal; color:#000000;"> .T.&gt; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">[ #</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">else</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;SourceCode included </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">if</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;logical_expression&gt; othwerwise&gt; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">] </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">endif</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;logical_expression&gt;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: &lt;expression&gt;</text><br/><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&lt;expression&gt; &#160;: &lt;unary_operator&gt; &lt;expression&gt; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// 单词前缀表达式</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; | &lt;expression&gt; &lt;binary_operator&gt; &lt;expression&gt; &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// 二进制数值表达式</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; | &lt;expression&gt; &lt;shift_operator&gt; &lt;expression&gt; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// 二进制移位表达式</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; | &lt;expression&gt; &lt;comparison_operator&gt; &lt;expression&gt; &#160; </text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// 二进制逻辑表达式</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; | &lt;expression&gt; &lt;bitwise_operator&gt; &lt;expression&gt; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// 二进 bitwise 表达式</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; | &lt;expression&gt; &lt;logical_operator&gt; &lt;expression&gt; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// 二进制逻辑表达式</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; | &lt;negation_operator&gt; &lt;expression&gt; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// 否定表达式</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; | &lt;primary_expression&gt; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// primary 表达式</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;unary_operator&gt; &#160;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: + | - | ++ | -- </text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;binary_operator&gt; </text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: ^ | * | / | % | + | - </text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;shift_operator&gt;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: &lt;&lt; | &gt;&gt; </text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;comparison_operator&gt; : &lt; | &lt;= | &gt; | &gt;= | = | == | != | &lt;&gt; </text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;bitwise_operator&gt;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: </text><text style="font-style:normal; color:#000000;">&amp; | | </text><br/><br/><text style="font-style:normal; color:#000000;">&lt;logical_operator&gt;</text><tab /><text style="font-style:normal; color:#000000;">: </text><text style="font-weight:normal; font-style:normal; color:#000000;">.AND. | .OR. | .XOR.</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;negation_operator&gt;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: ! | .NOT. </text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;primary_expression&gt; : &lt;literal_value&gt; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 字面量表达式</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| ( &lt;expression&gt; ) &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 括号内的表达式</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;literal_value&gt; &#160; </text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: &lt;string_literal&gt;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| &lt;char_literal&gt;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| &lt;logical_literal&gt; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| &lt;integer&gt; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| &lt;double&gt; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| &lt;#define_constant&gt; </text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;string_literal&gt; &#160; </text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: &#160;&quot;double quoted&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| &apos;single_quoted&apos;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| [block_quoted]</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| e&quot;escaped&quot;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;char_literal&gt; &#160; &#160; &#160;c&apos;&lt;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">char</text><text style="font-weight:normal; font-style:normal; color:#000000;">&gt;&apos;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;logical_literal&gt; &#160; : &#160;.T. | TRUE | .F. | FALSE</text></para>
    <para styleclass="Heading1">描述</para>
    <para styleclass="Body Text">#if...#else...#endif指令构成了预处理器的控制结构。</para>
    <para styleclass="Body Text">当 &lt;logical_expression&gt; 求值为 true (.T.) 时，预处理器将翻译并输出位于 #if 和 #else 指令之间的源代码到中间文件，而忽略位于 #else 和 #endif 指令之间的源代码。</para>
    <para styleclass="Body Text">如果没有 #else 指令，预处理器将翻译并输出位于指令 #if 和 #endif 之间的源代码。</para>
    <para styleclass="Body Text">如果 &lt;logical_expression&gt; 的值为 false (.F.)，则只包含指令 #else 和 #endif 之间的源代码。</para>
    <para styleclass="Body Text">&lt;logical_expression&gt; 项可以使用操作数、比较运算符和逻辑运算符构成。比较运算总是需要两个操作数，并在逻辑运算之前进行评估。操作数必须是字符串字面量、数字字面量或逻辑字面量，或者是结果为上述字面量之一的有效 #define 常量。</para>
    <para styleclass="Body Text">当字符串被括入单引号或双引号时，将被识别。如果遇到未定义的常量，该术语的结果将是 false (.F.) 。</para>
    <para styleclass="Body Text">逻辑表达式由两个表达式和一个逻辑运算符组成，或者仅由一个字面量组成。</para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"></para>
    <para styleclass="Heading1">类型转换</para>
    <para styleclass="Normal">当表达式中混合了类型时，预处理器会自动按照以下顺序转换类型，以便进行比较和计算：</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">1.<tab />String</para>
    <para styleclass="Normal">2.<tab />Double</para>
    <para styleclass="Normal">3.<tab />Integer</para>
    <para styleclass="Normal">4.<tab />Logic</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">示例</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">if</text><text style="font-weight:normal; font-style:normal; color:#000000;"> 1 &gt; &quot;abc&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 在比较之前，先将 1 转换为 &quot;1&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? &quot;比较数字和字符串&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">endif</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">if</text><text style="font-weight:normal; font-style:normal; color:#000000;"> 1.2 &gt; FALSE</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 在比较之前，先将 FALSE 转换为 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? &quot;比较数字和字符串&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">#</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">endif</text></para>
    <para styleclass="Heading2">转换<br/><text styleclass="Body Text">对于比较和计算运算符，两个操作数的类型会进行比较。如果相等，则无需转换。如果它们的类型不相同，则应用以下规则。</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Body Text"><table styleclass="Default" rowcount="5" colcount="2" style="width:100%;">
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal" style="text-align:center;"><text style="font-weight:bold;">如果一个操作数的类型为 </text></para>
        </td>
        <td>
          <para styleclass="Normal" style="text-align:center;"><text style="font-weight:bold;">然后对另一个操作数进行如下转换</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal">String </para>
        </td>
        <td>
          <para styleclass="Normal">对值调用 .ToString()</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal">Double 或 Decimal</para>
        </td>
        <td>
          <para styleclass="Normal">Integer: ToDouble()<br/>Logical: TRUE = 1.0, FALSE = 0.0</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal">Integer</para>
        </td>
        <td>
          <para styleclass="Normal">Logic: TRUE = 1, FALSE = 0</para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal">Logical (在 #if 行的表达式)</para>
        </td>
        <td>
          <para styleclass="Normal">String: Null 或 Empty = FALSE, 所有其他 = TRUE<br/>Integer: 0 = FALSE, 所有其他 = TRUE<br/>Double: 0.0 = FALSE, 所有其他 = TRUE</para>
        </td>
      </tr>
    </table></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2">比较操作</para>
    <para styleclass="Normal">字符串比较是使用序数比较法进行大小写比较的。字符串比较不支持&quot;=&quot;操作符，因为预处理器不知道您想使用的 &quot;SetExact() &quot;设置是什么。所有比较均使用 String.Compare() 完成。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2">方言</para>
    <para styleclass="Normal">在 FoxPro 方言中，运算符 NOT、AND、OR 和 XOR 也可用 </para>
  </body>
</topic>
