<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>ARRAY (FoxPro)</title>
  <body>
    <header>
      <para styleclass="Heading1">ARRAY (FoxPro)</para>
    </header>
    <para styleclass="Normal">The FoxPro dialect in X# has its own Array type. This type is not declared with an AS keyword, but the array type is derived from the context.<br/>The following lines of code all generate a FoxPro compatible array:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ARRAY</text><text style="font-weight:normal; font-style:normal; color:#000000;"> aTest(1,2) &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// LOCAL ARRAY</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">PUBLIC</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ARRAY</text><text style="font-weight:normal; font-style:normal; color:#000000;"> aPublicArray[10] &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// PUBLIC ARRAY</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">DIMENSION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> AnotherArray(3,4) &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// DIMENSION with parentheses , but angled brackets are supported too</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">DECLARE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ThirdArray[10] &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// DIMENSION with angled brackets, but parentheses are supported too</text></para>
    <para styleclass="Normal">The elements of a Foxpro compatible array are all USUAL.<br/>FoxPro arrays cannot be dynamically sized with AAdd(). To resize them you need to add a DIMENSION statement with new dimensions.</para>
    <para styleclass="Normal">Internally FoxPro arrays are single dimensional arrays. But you can also (re)dimension them as two dimensional. <br/>So the 3rd array in this example can also be treated as a single dimensional array of 12 elements.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">We advise to use angled brackets to access elements of a FoxPro array. This is not ambiguous and the compiler can resolve that at compile time.</para>
    <para styleclass="Normal">If you want to use parentheses to access FoxPro array elements you need to enable the <link displaytype="text" defaultstyle="true" type="topiclink" href="opt-fox2">/fox </link>compiler option. This compiler option also enables the behavior that assigning a single value to a FoxPro array will result in assigning that value to all elements in the array.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Internally FoxPro arrays are implemented as a class that derives from the generic XBase array type.</para>
    <para styleclass="Normal">So all functions in the X# runtime that take an array as parameter will also accept a FoxPro array.<br/>When there is different behavior between the FoxPro implementation of a function or the Xbase implementation then this will be handled at runtime.</para>
    <para styleclass="Heading3">Implementation</para>
    <para styleclass="Normal">The ARRAY type is implemented in the class XSharp.__FoxArray. </para>
    <para styleclass="Normal">The Usualtype of ARRAY has the value 5</para>
  </body>
</topic>
