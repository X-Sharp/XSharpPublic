<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>METHOD Statement</title>
  <keywords>
    <keyword>Classes<keyword>declaring() Methods</keyword></keyword>
    <keyword>Compiledeclaration</keyword>
    <keyword>Declaration statements</keyword>
    <keyword>Entity declaration</keyword>
    <keyword>METHOD statement</keyword>
    <keyword>Statements</keyword>
    <keyword>Strong typing<keyword>defined</keyword></keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">METHOD Statement</para>
    </header>
    <para styleclass="Heading1">Purpose</para>
    <para styleclass="Normal">Declare a method name and an optional list of local variable names.</para>
    <para styleclass="Heading1">Syntax</para>
    <para styleclass="Normal"><tab />[Attributes] [Modifiers] &#160;<text style="font-weight:bold;">METHOD </text>&lt;<text styleclass="Italic">idMethod</text>&gt; </para>
    <para styleclass="Normal"><tab />[Typeparameters]</para>
    <para styleclass="Normal"><tab />[([&lt;<text styleclass="Italic">idParam</text>&gt; [AS | REF|OUT|IN &lt;<text styleclass="Italic">idType</text>&gt;] [, ...])] </para>
    <para styleclass="Normal"><tab />[AS &lt;<text styleclass="Italic">idType</text>&gt;]</para>
    <para styleclass="Normal"><tab />[TypeparameterConstraints]</para>
    <para styleclass="Normal"><tab />[&lt;<text styleclass="Italic">idConvention</text>&gt;]<br/><tab />[CLASS &lt;<text styleclass="Italic">idClass</text>&gt;]</para>
    <para styleclass="Normal"><tab />[=&gt; &lt;expression&gt;] <br/><tab /><text style="font-weight:bold;">CRLF</text></para>
    <para styleclass="Normal"><tab />[&lt;<text styleclass="Italic">Body</text>&gt;]</para>
    <para styleclass="Normal"><tab />[END METHOD]</para>
    <para styleclass="Heading1">Arguments</para>
    <para styleclass="Normal"><snippet src="__IncludeMethodModifiers" inline="false"/></para>
    <para styleclass="List">&lt;idMethod&gt;<tab />A valid identifier name for the method. &#160;Method names must be unique within a class, but can share the same name as other entities (including access and assign methods) in your application.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><snippet src="__IncludeMethodParameters" inline="false"/></para>
    <para styleclass="Heading1"><snippet src="__IncludeBody" inline="false"/></para>
    <para styleclass="List"><snippet src="__IncludeEndMethod" inline="false"/></para>
    <para styleclass="Heading1">Description</para>
    <para styleclass="Normal">A method is a subprogram comprised of a set of declarations and statements to be executed whenever you refer to the method using the message send operator, as in:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example">&lt;idObject&gt;:&lt;idMethod&gt;([&lt;uArgList&gt;])</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Or:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example">SELF:&lt;idMethod&gt;([&lt;uArgList&gt;])</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Classes, instance variables (see the CLASS statement in this guide), and methods are the basic object-oriented programming units. &#160;You will use methods in your applications to organize computational blocks of code for a specific class of objects.</para>
    <para styleclass="Heading1">Notes</para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">The Start() method: &#160;</text>All applications must either have one function or procedure named Start(). &#160;<br/>Start() serves as the startup routine when the application is executed. &#160;Start() must be declared without parameters or with an string array parameter and must either have an Int return value or of type Void</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">VO Compatibility:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">VO has 2 special method names for constructing and destructing class objects: Init() and Axit().<br/>In X# These methods should be named <link displaytype="text" defaultstyle="true" type="topiclink" href="command_CONSTRUCTOR">CONSTRUCTOR</link> and <link displaytype="text" defaultstyle="true" type="topiclink" href="command_DESTRUCTOR">DESTRUCTOR</link>.</para>
    <para styleclass="Normal">If you compile with compiler option <link displaytype="text" defaultstyle="true" type="topiclink" href="opt-vo1">/vo1</link> then you can still use the &apos;old&apos; names. The compiler will then automatically map the Init() method to constructor and the Axit() method to destructor. This is NOT recommended.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">The Init() method: &#160;</text>If you define a method named Init(), it is called automatically when you create an instance of the class to which the method belongs. &#160;Arguments listed within the instantiation operators ({}) are passed as parameters to the Init() method. &#160;Common uses for the Init() method are to initialize instance variables, allocate memory needed by the object, register the object, create subsidiary objects, and set up relationships between objects.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">The Axit() method: &#160;</text>You do not need to deallocate memory used by objects because the garbage collector takes care of this for you automatically. &#160;However, in some cases an object can manage other resources that do need proper disposition. &#160;For example, if an object opens a database only for its own use, it should close it when it is finished and make the work area available for other uses.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">If you register an object with the RegisterAxit() function, for example in the Init() method, and provide a method named Axit(), this Axit() method will automatically be called by the garbage collector just before the object is destroyed. &#160;Thus, in the Axit() method you can close databases, deallocate memory, or close communications links.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">NoIVarGet()/NoIVarPut() methods: &#160;</text>If you define methods named NoIVarGet() and NoIVarPut(), they will automatically be invoked if an instance variable that does not exist is referenced. &#160;They are called with the instance variable name as a parameter, in the form of a symbol and, in the case of NoIVarPut(), with the assigned value. &#160;This feature is useful in detecting and preventing a runtime error and for creating virtual variables dynamically at runtime. &#160;For example, the DBServer class uses this technique to make the database fields appear to be exported instance variables of a database object:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NoIVarGet(symFieldName) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DBServer</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">BEGIN</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SEQUENCE</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> FieldGetAlias(symAlias, symFieldName)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RECOVER</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Pass it up if it was not a field name</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SUPER</text><text style="font-weight:normal; font-style:normal; color:#000000;">:NoIVarGet(symFieldName)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SEQUENCE</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NoIVarPut(symFieldName, uValue) ;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DBServer</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">BEGIN</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SEQUENCE</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> FieldGetAlias(symAlias, ;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; symFieldName, uValue)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RECOVER</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Pass it up if it was not a field name</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SUPER</text><text style="font-weight:normal; font-style:normal; color:#000000;">:NoIVarPut(symFieldName, uValue)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SEQUENCE</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DatabaseTest()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oDBServer </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DBServer</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; oDBServer := DBServer{&quot;customer&quot;}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? oDBCustomer:CustName</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; oDBCustomer:ZipCode := &quot;12345&quot;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">The NoMethod() method: &#160;</text>If you define a method named NoMethod(), it will automatically be invoked if a method name that you invoke within the same class cannot be found. &#160;The arguments passed will be the same as the original method. &#160;This feature is useful in detecting and preventing a runtime error when a method cannot be found. &#160;Use the NoMethod() function to find out the name of the method that could not be found.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Exporting locals through code blocks: &#160;</text>When you create a code block, you can access local variables defined in the creating entity within the code block definition without having to pass them as parameters (i.e., local variables are visible to the code block). &#160;Using this fact along with the fact that you can pass a code block as a parameter, you can export local variables. &#160;For example:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:bold; font-style:normal; color:#000000;"> One</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> MyClass </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">EXPORT</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nVar </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">10</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cbAdd </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CODEBLOCK</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">cbAdd </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">|</text><text style="font-weight:bold; font-style:normal; color:#000000;">nValue</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">|</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nValue </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">+</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nVar</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">}</text><br/><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">?</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">Two</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">cbAdd</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#ff00ff;">// Result: &#160;210</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Two</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">cbAddEmUp</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> MyClass</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">EVAL</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">cbAddEmUp</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,200)</text></para>
    <para styleclass="Normal">When the code block is evaluated in Two(), <text styleclass="Italic">nVar</text>, which is local to method One(), becomes visible even though it is not passed directly as a parameter.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Invoking methods: &#160;</text>The syntax to invoke a method of an object is as follows:</para>
    <para styleclass="Code Example">&lt;idObject&gt;:&lt;idMethod&gt;([&lt;uArgList&gt;])</para>
    <para styleclass="Normal">where &lt;<text styleclass="Italic">uArgList</text>&gt; is an optional comma-separated list of arguments to pass to the named method. &#160;&lt;<text styleclass="Italic">idObject</text>&gt; identifies the object to whom the method invocation is to be sent; to refer to the same object within a method you use SELF: &#160;or SUPER: &#160;(see note below) instead of &lt;<text styleclass="Italic">idObject</text>&gt;:.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">You can invoke a method within an expression or as a program statement. &#160;If called as a program statement, the return value is ignored.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">You can also use a method invocation as an aliased expression by prefacing it with an alias and enclosing it in parentheses:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example">&lt;idAlias&gt;-&gt;(&lt;idObject&gt;:&lt;idMethod&gt;([&lt;uArgList&gt;]))</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">When you do this, the work area associated with &lt;<text styleclass="Italic">idAlias</text>&gt; is selected, the method is executed, and the original work area is reselected. &#160;You can specify an aliased expression as a program statement, as you would any other expression.</para>
    <para styleclass="Normal">A method can call itself recursively. &#160;This means you can refer to a method in its own &lt;<text styleclass="Italic">MethodBody</text>&gt;.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The visibility of typed methods can also be influenced by using the HIDDEN and PROTECT modifiers as in their use with instance variables. &#160;SUPER calls of HIDDEN methods in parent classes cannot be done by methods of the sub-classes.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Calling convention: &#160;</text>Methods use the CLIPPER calling convention, unless they are strongly typed. &#160;See the FUNCTION statement in this guide for more information.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">SELF and SUPER: &#160;</text>SELF is a special variable that contains a reference to the object that is the receiver of a message (a message is sent to an object each time you use the send operator to invoke a method or access an instance variable). &#160;Whenever a message is sent to an object, a reference to the object is placed in SELF before the corresponding method is invoked. &#160;Within methods of the class, you must use SELF with the message send operator (:) to send messages to the current object. &#160;Using SELF: &#160;to access instance variables is optional; see the ACCESS and ASSIGN entries in this guide for details on when it is required (it is always allowed).</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">SUPER is another special variable that contains a reference to the class that is the nearest ancestor of the method lookup. &#160;It passes a message up the inheritance tree to the appropriate superclass and is meaningful only if the current object&apos;s class inherits from another class. &#160;You can use SUPER with the message send operator (:) to refer directly to a method defined in a superclass. &#160;If you redefine a method in a subclass (by creating a method with the same name as one in a superclass), SUPER is the only way you can override the redefined method with the superclass version.</para>
    <para styleclass="Normal">SUPER: &#160;is useful when defining a subclass which adds some unique behavior, but nonetheless inherits standard behavior from its superclass. &#160;For example:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Person</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROTECT</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cName </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> symName </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SYMBOL</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Init</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">cFirstName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cLastName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Person</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">cName </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cFirstName </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">+</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&quot; &quot;</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">+</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cLastName</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">symName </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> String2Symbol</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">cName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Customer </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INHERIT</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Person</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROTECT</text><text style="font-weight:bold; font-style:normal; color:#000000;"> wCustNo </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">DWORD</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Init</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">cFirstName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cLastName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nCustNo</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">;</text><br/><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Customer</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">SUPER</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">Init</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">cFirstName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cLastName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">wCustNo </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nCustNo</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The SELF and SUPER variables are allowed only in method definitions. &#160;SELF is the default return value for all methods.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Parameters: &#160;</text>As an alternative to specifying method parameters in the METHOD declaration statement, you can use a PARAMETERS statement to specify them. &#160;This practice, however, is not recommended because it is less efficient and provides no compile-time integrity validation. &#160;See the PARAMETERS statement in this guide for more information.</para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left ;"><snippet src="__IncludeStrongTyping" inline="false"/></para>
    <para styleclass="Heading1">Examples</para>
    <para styleclass="Normal">This example creates a class of two-dimensional coordinates with methods to initialize the coordinates, draw a grid, and plot the point:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Start</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> oPointSet </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Point2D</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oPointSet </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Point2D</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">2,</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">3</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">}</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oPointSet</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">ShowGrid</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">oPointSet</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:</text><text style="font-weight:bold; font-style:normal; color:#000000;">Plot</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Point2D</text><tab /><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#ff00ff;">// Define Point2D class</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">INSTANCE</text><text style="font-weight:bold; font-style:normal; color:#000000;"> x</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Init</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">iRow</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> iCol</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Point2D</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">x </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> iRow</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">y </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> iCol</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Plot</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Point2D</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">@</text><text style="font-weight:bold; font-style:normal; color:#000000;"> x </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">+</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">11,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> y </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">+</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">36</text><text style="font-weight:bold; font-style:normal; color:#000000;"> SAY </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CHR</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(249)</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:bold; font-style:normal; color:#000000;"> ShowGrid</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Point2D</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> iCounter </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">CLS</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">FOR</text><text style="font-weight:bold; font-style:normal; color:#000000;"> iCounter </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">1</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TO</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">21</text><br/><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">IF</text><text style="font-weight:bold; font-style:normal; color:#000000;"> iCounter </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">11</text><br/><tab /><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">@</text><text style="font-weight:bold; font-style:normal; color:#000000;"> iCounter</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">1</text><text style="font-weight:bold; font-style:normal; color:#000000;"> SAY </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">REPLICATE</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CHR</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(196),</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">71)</text><br/><tab /><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">@</text><text style="font-weight:bold; font-style:normal; color:#000000;"> iCounter</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">36</text><text style="font-weight:bold; font-style:normal; color:#000000;"> SAY </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CHR</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(197)</text><br/><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSE</text><br/><tab /><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#0000ff;">@</text><text style="font-weight:bold; font-style:normal; color:#000000;"> iCounter</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">36</text><text style="font-weight:bold; font-style:normal; color:#000000;"> SAY </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CHR</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(179)</text><br/><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDIF</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">NEXT</text></para>
    <para styleclass="Heading1">See Also</para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_ACCESS">ACCESS</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_ASSIGN">ASSIGN</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_CLASS">CLASS</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_FUNCTION">FUNCTION</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_PROPERTY">PROPERTY</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_OPERATOR">OPERATOR</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_CONSTRUCTOR">CONSTRUCTOR</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_DESTRUCTOR">DESTRUCTOR</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_EVENT">EVENT</link></para>
  </body>
</topic>
