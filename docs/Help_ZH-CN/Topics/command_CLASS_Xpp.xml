<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-26T10:58:57.358+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>CLASS 语句(Xbase++ 方言))</title>
  <keywords>
    <keyword>Binding of instance variables</keyword>
    <keyword>CLASS</keyword>
    <keyword>Class names<keyword>declaring</keyword></keyword>
    <keyword>CLASS statement</keyword>
    <keyword>Classes</keyword>
    <keyword>Classes</keyword>
    <keyword>Classes<keyword>declaring Class names</keyword><keyword>inheritance</keyword><keyword>object instantiation</keyword></keyword>
    <keyword>Compile-time declaration</keyword>
    <keyword>Declaration statements</keyword>
    <keyword>ENDCLASS</keyword>
    <keyword>Entity declaration</keyword>
    <keyword>EXPORT clause</keyword>
    <keyword>EXPORT INSTANCE clause</keyword>
    <keyword>FROM</keyword>
    <keyword>HIDDEN clause</keyword>
    <keyword>HIDDEN INSTANCE clause</keyword>
    <keyword>IMPLEMENTS</keyword>
    <keyword>INHERIT clause</keyword>
    <keyword>INSTANCE clause</keyword>
    <keyword>Instance variables</keyword>
    <keyword>Instance variables</keyword>
    <keyword>Instance variables</keyword>
    <keyword>Instance variables<keyword>binding</keyword><keyword>declaring</keyword><keyword>exporting</keyword><keyword>hiding</keyword></keyword>
    <keyword>Object instantiation</keyword>
    <keyword>PROTECT clause</keyword>
    <keyword>PROTECT INSTANCE clause</keyword>
    <keyword>SHARING</keyword>
    <keyword>Statements</keyword>
    <keyword>STATIC CLASS clause</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">CLASS 语句(Xbase++ 方言)</para>
    </header>
    <para styleclass="Heading1">用途</para>
    <para styleclass="Normal">向编译器声明一个类名。</para>
    <para styleclass="Heading1">语法</para>
    <para styleclass="Normal"><tab />[Attributes] [Modifiers] <tab /><text style="font-weight:bold;">CLASS</text> &lt;<text styleclass="Italic">idClass</text>&gt; [<text style="font-weight:bold;">FROM</text> &lt;<text styleclass="Italic">idParentClass</text>&gt;] &#160;[<text style="font-weight:bold;">SHARING</text> &lt;<text styleclass="Italic">idParentClass</text>,...&gt;]<br/><tab />[<text style="font-weight:bold;">IMPLEMENTS</text> &lt;idInterface&gt;[, &lt;IdInterface2&gt;,..]</para>
    <para styleclass="Normal"><tab />[ClassMembers]</para>
    <para styleclass="Normal"><tab /><text style="font-weight:bold;">ENDCLASS</text></para>
    <para styleclass="Body Text"><tab />[CLASS] METHOD [&lt;ClassName&gt;:] &lt;MethodName&gt; [( [&lt;Parameters,...&gt;] )]</para>
    <para styleclass="Body Text"><tab /><tab />[&lt;Body&gt;]</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">参数</para>
    <para styleclass="List">Attributes<tab />描述实体元信息的一个或多个属性的可选列表，例如，MsTest 类库中包含测试的方法上的 [TestMethod] 属性。请注意，当属性写在关键字上方时，必须在同一行或以分号为后缀。<tab /></para>
    <para styleclass="List"></para>
    <para styleclass="List">Modifiers<tab />一个可选的修饰符列表，用于指定实体的可见性或范围，允许的值有 STATIC, FREEZE and FINAL</para>
    <para styleclass="List"></para>
    <para styleclass="List"><snippet src="__includeIdClass" inline="false"/></para>
    <para styleclass="List">FROM &lt;idParentClass&gt;<tab />现有类(称为超类)的名称，新类从该类继承方法和实例变量(HIDDEN 例外)。X# 不允许多重继承。</para>
    <para styleclass="List"></para>
    <para styleclass="List">SHARING &lt;<text styleclass="Italic">idParentClass</text>&gt;<tab />X# 不支持该子句</para>
    <para styleclass="List"></para>
    <para styleclass="List">IMPLEMENTS <text styleclass="Normal">&lt;idInterface&gt;</text><tab /><text styleclass="Normal">该类实现的接口名称</text></para>
    <para styleclass="List"></para>
    <para styleclass="List"><text styleclass="Normal">ClassMembers</text><tab /><text styleclass="Normal">这可能是变量声明、方法声明和内联方法实现的列表</text></para>
    <para styleclass="List"></para>
    <para styleclass="List"><text styleclass="Normal">[CLASS] METHOD</text><tab /><text styleclass="Normal">在类声明之外实现一个或多个方法。CLASS 关键字表示这是一个 STATIC 方法，而不是 INSTANCE 方法。</text></para>
    <para styleclass="Heading1">类成员</para>
    <para styleclass="List"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_Xpp_InstanceVariables" styleclass="Normal">Fields</link></para>
    <para styleclass="List"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_Xpp_Classmembers">Method 声明</link></para>
    <para styleclass="List"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_XPP_Methods">Method 实现</link></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1">参见</para>
    <para styleclass="Normal"></para>
  </body>
</topic>
