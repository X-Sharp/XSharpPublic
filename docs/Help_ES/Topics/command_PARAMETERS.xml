<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>PARAMETERS Statement</title>
  <keywords>
    <keyword>Creating<keyword>variables</keyword></keyword>
    <keyword>Declaration statements</keyword>
    <keyword>Memory variable</keyword>
    <keyword>PARAMETERS statement</keyword>
    <keyword>Runtime declaration</keyword>
    <keyword>Statements</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">PARAMETERS Statement</para>
    </header>
    <para styleclass="NotesBox"><snippet src="__NotInCoreVulcan" inline="false"/></para>
    <para styleclass="Heading1">Purpose</para>
    <para styleclass="Body Text">Create private variables to receive passed values or references.</para>
    <para styleclass="Heading1">Syntax</para>
    <para styleclass="Code with box">PARAMETERS &lt;idParameterList&gt;<br/>PARAMETERS &lt;Parameter1&gt; [ AS &lt;Type&gt; [ OF &lt;ClassLibrary&gt; ] ] [, &lt;Parameter2&gt; [ AS &lt;Type&gt; [ OF &lt;ClassLibrary&gt; ] ] ] // FoxPro only</para>
    <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"></para>
    <para styleclass="Heading1">Arguments</para>
    <para styleclass="List">&lt;<text styleclass="Code with box">idParameterList</text>&gt;<tab /><text styleclass="Body Text">One or more parameter variables separated by commas. These variables are used to receive arguments that you pass when you call the routine. The variables will be dynamic memory variables</text></para>
    <para styleclass="List"><snippet src="__TypeAndCLass" inline="false"/></para>
    <para styleclass="Heading1">Description</para>
    <para styleclass="Body Text">When a PARAMETERS statement executes, all variables in the parameter list are created as private variables and all public or private variables with the same names are hidden until the current procedure or function terminates. A PARAMETERS statement is an executable statement and can, therefore, occur anywhere in a procedure or function.</para>
    <para styleclass="Body Text">Parameters can also be declared as local variables if specified as a part of the PROCEDURE or FUNCTION declaration statement (see the example). Parameters specified in this way are referred to as formal parameters. Note that you cannot specify both formal parameters and a PARAMETERS statement within a procedure or function definition. </para>
    <para styleclass="Body Text">Attempting to do this results in a compiler error.</para>
    <para styleclass="Body Text">The number of receiving variables does not have to match the number of arguments passed by the calling routine. If you specify more arguments than parameters, the extra arguments are ignored. If you specify fewer arguments than parameters, the extra parameters are created with a NIL value. If you skip an argument, the corresponding parameter is initialized to NIL.</para>
    <para styleclass="Body Text">The PCount() function returns the position of the last argument passed in the list of arguments. This is different than the number of parameters passed, since it includes skipped parameters.</para>
    <para styleclass="Heading1">Examples</para>
    <para styleclass="Body Text">This function receives values passed into private parameters with a PARAMETERS statement:</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> MyFunc()</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">PARAMETERS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> cOne, cTwo, cThree</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? cOne, cTwo, cThree</text></para>
    <para styleclass="Body Text">The next example is similar, but receives values passed into local variables, by declaring the parameter variables within the FUNCTION declaration:</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> MyFunc(cOne, cTwo, cThree)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? cOne, cTwo, cThree</text></para>
    <para styleclass="Heading1">See Also</para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_LPARAMETERS">LPARAMETERS</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_PRIVATE">PRIVATE</link></para>
  </body>
</topic>
