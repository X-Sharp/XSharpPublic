<?xml version="1.0" encoding="utf-8"?>
<!-- This file was generated  on 17/11/2022 21:48:28 -->
<topic id="cat-Numeric_Functions" revisionNumber="1" title="Numeric Functions">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <section address="Section1">
      <title>Numeric Functions</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>
                <para>Assembly</para>
              </entry>
              <entry>
                <para>Function</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
          </tableHeader>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions._Str(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a numeric expression to a string.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions._Str3(XSharp.__Float,System.UInt32,System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a numeric expression to a string of specific length and decimal places.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions._Val(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a string containing a numeric value to a numeric data type.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Abs(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the absolute value of a numeric expression, regardless of its sign.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.AbsFloat(XSharp.__Float)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.AbsInt(System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.AbsLong(System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.AbsReal4(System.Single)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.AbsReal8(System.Double)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.AbsShort(System.Int16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.ACos(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns the arc cosine of a specified numeric expression.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.ACot(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the arc cotangent of a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.ASin(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns in radians the arc sine of a numeric expression.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.ATan(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the arc tangent of a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Atan2(XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns the angle whose tangent is the quotient of two specified numbers.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Ceil(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Round a number up to the next highest integer.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.Ceiling(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Cos(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the cosine of a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Cot(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the cotangent of a value.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.CToBin(XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.DToR(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Converts degrees to radians.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.DW2Bin(System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a double word to a string containing a 32-bit unsigned integer.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Exp(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the numeric value of a natural logarithm.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.F2Bin(XSharp.__Float)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a float to a string containing an 80-bit floating point number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Fact(System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the factorial of a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Float2Long(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.FloatFormat(XSharp.__Float,System.Int32,System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Set the display format for a floating point numeric.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Floor(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Round a number down to the next lowest integer.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Frac(XSharp.__Float)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the fractional portion of a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.FV(XSharp.__Float,XSharp.__Float,XSharp.__Float)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns the future value of a financial investment.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.HiByte(System.UInt16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the high-order (leftmost) byte in a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.HiWord(System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the high-order (leftmost) word in a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.I2Bin(System.Int16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a short integer to a string containing a 16-bit signed integer.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Integer(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Truncate or floor a number with decimal digits to a whole number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.IsBinary(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determine if a value is a Binary.
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.IsCurrency(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determine if a value is a Currency.
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.IsDecimal(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determine if a value is a Decimal.
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.IsFloat(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determine if a value is a FLOAT.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.IsFractional(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determine if a value is a Decimal or a Float
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.IsInt64(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determine if a value is a INT64.
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.IsInteger(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determine if a value is an integer (LONG or INT64).
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.IsLong(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determine if a value is a LONGINT.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.IsNumeric(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determine if a value is a numeric.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.L2Bin(System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a long integer to a string containing a 32-bit signed integer.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Len(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the length of a string or an array.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.LoByte(System.UInt16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the low-order (rightmost) byte in a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.LOG(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the natural logarithm of a numeric value.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Log10(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the common logarithm of a numeric value.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.Logic2Bin(System.Boolean)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a logical value to a string containing an 8-bit logical value.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.LoWord(System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the low-order (rightmost) word in a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.MakeDWord(System.UInt16,System.UInt16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Create a DWORD from two words
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.MakeLong(System.UInt16,System.UInt16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Create a long from two words
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.MAKEROP4(System.UInt16,System.UInt16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.MakeShort(System.Byte,System.Byte)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Create a Short from two bytes
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.MakeWord(System.Byte,System.Byte)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Create a Short from two bytes
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Max(XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the larger of 2 values.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.Mod(System.Double,System.Double)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the remainder of one number divided by another number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Mod(XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the remainder of one number divided by another number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.MToN(XSharp.__Currency)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns a Numeric value from a Currency expression.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.NToM(XSharp.__Float)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns a Currency value from a Numeric expression.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.NTrim(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a numeric expression to a left-trimmed string.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.Payment(XSharp.__Float,XSharp.__Float,XSharp.__Float)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns the amount of each periodic payment on a fixed-interest loan.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.PI</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns the numeric constant pi.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Pow(XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Raise the first argument to the numeric power specified by the second argument.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.PV(XSharp.__Float,XSharp.__Float,XSharp.__Float)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns the present value of an investment.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Rand(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return a random number between 0 and 1.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.Real42Bin(System.Single)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a Real4 value to a string containing a 32-bit floating point number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.Real82Bin(System.Double)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a Real8 value to a string containing an 8-byte floating point number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Round(XSharp.__Usual,System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Round a number to a specified number of digits.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.RToD(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Converts radians to its equivalent in degrees.
            You can use RTOD( ) when working with the X# trigonometric functions COS( ), SIN( ), and TAN( ).
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.Sign(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns a numeric value of 1, –1, or 0 if the specified numeric expression evaluates to a positive, negative, or 0 value.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Sin(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the sine of a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.SQrt(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the square root of a positive number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Str(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a numeric expression to a string.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Str1(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a numeric expression to a string.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Str2(XSharp.__Float,System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a numeric expression to a string of a specified length.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Str3(XSharp.__Float,System.UInt32,System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a numeric expression to a string of specific length and decimal places.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.StrConv(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.String2Symbol(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a string to an uppercase Symbol.
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.StrInt(System.Int32,System.UInt32,System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert an integer expression to a PSZ.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.StrLong(System.Int32,System.UInt32,System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a long integer expression to a PSZ.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.StrToFloat(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a string containing a numeric value to a numeric data type.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.StrZero(XSharp.__Usual,System.Int32,System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a numeric expression to a string and pad it with leading zeroes instead of blanks.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SwapByte(System.Byte)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Exchange the right and left halves of a byte.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SwapDWord(System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Exchange the right and left halves of a double word.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SwapInt(System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Exchange the right and left halves of an integer.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SwapInt64(System.Int64)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Exchange the right and left halves of a Int64
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SwapLong(System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Exchange the right and left halves of a long integer.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SwapQWord(System.UInt64)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SwapShort(System.Int16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Exchange the right and left halves of a short integer.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SwapWord(System.UInt16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Exchange the right and left halves of a word.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Tan(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Calculate the tangent of a number.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.ToWord(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a number to a word.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Val(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a string containing a numeric value to a numeric data type.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.W2Bin(System.UInt16)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert a word to a string containing a 16-bit unsigned integer.
        </para>
            </entry>
          </row>
        </table>
      </content>
    </section>
  </developerConceptualDocument>
</topic>