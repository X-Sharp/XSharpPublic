<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Interpolated Strings</title>
  <keywords>
    <keyword>ei&quot;...&quot;</keyword>
    <keyword>i&quot;...&quot;</keyword>
    <keyword>ie&quot;...&quot;</keyword>
    <keyword>Interpolated</keyword>
    <keyword>String</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Interpolated Strings</para>
    </header>
    <para styleclass="Normal">Interpolated strings is a feature that allows you to embed local variables, instance variables or other expressions inside literal strings.</para>
    <para styleclass="Normal">X# supports two kinds of interpolated strings:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2"><text style="font-weight:bold;">1.</text><tab /><text style="font-weight:bold;">Normal Interpolated strings: i&quot;....&quot;</text></para>
    <para styleclass="Normal"><tab /></para>
    <para styleclass="Normal">This works like a normal X# string but with an embedded expression:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><tab /><text style="font-weight:bold; font-style:normal; color:#3366ff;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start </text><text style="font-weight:bold; font-style:normal; color:#3366ff;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Who </text><text style="font-weight:bold; font-style:normal; color:#3366ff;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">STRING</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Who := </text><text style="font-weight:bold; font-style:normal; color:#993366;">&quot;World&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Console.Writeline( i</text><text style="font-weight:bold; font-style:normal; color:#993366;">&quot;Hello {Who}&quot;</text><text style="font-weight:normal; font-style:normal; color:#000000;">)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Console.Read()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">RETURN</text></para>
    <para styleclass="Heading2">2.<tab />Extended Interpolated strings: ie&quot;...&quot; and ei&quot;....&quot;</para>
    <para styleclass="Normal">This is a combination of an interpolated string and an extended string. In the example below the \t will be replaced with a tab character.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#3366ff;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start </text><text style="font-weight:bold; font-style:normal; color:#3366ff;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Who </text><text style="font-weight:bold; font-style:normal; color:#3366ff;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">STRING</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Who := </text><text style="font-weight:bold; font-style:normal; color:#993366;">&quot;World&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Console.Writeline( ie</text><text style="font-weight:bold; font-style:normal; color:#993366;">&quot;Hello\t{Who}&quot;</text><text style="font-weight:normal; font-style:normal; color:#000000;">)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Console.Read()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">RETURN</text></para>
    <para styleclass="Heading2">Notes</para>
    <para styleclass="Normal">The expression parsing inside the interpolated strings recognizes:</para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Normal">SELF:</li>
      <li styleclass="Normal">Local variables, Member variables and Properties with SELF: prefix and without this prefix</li>
      <li styleclass="Normal">Other expressions must be in C# syntax for now, using the dot (<text style="font-weight:bold;">.</text>) operator as send operator.</li>
    </list>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The expression elements inside the string can use formatting notation just like the String.Format() notation. For example:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><tab /><text style="font-weight:bold; font-style:normal; color:#3366ff;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start </text><text style="font-weight:bold; font-style:normal; color:#3366ff;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#3366ff;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> i </text><text style="font-weight:bold; font-style:normal; color:#3366ff;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;i := 42</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Console.Writeline( i</text><text style="font-weight:bold; font-style:normal; color:#993366;">&quot;Hello {i:x}&quot;</text><text style="font-weight:normal; font-style:normal; color:#000000;">) &#160; </text><text style="font-weight:normal; font-style:italic; color:#339966;">// i is printed in hex notation, so Hello 2a</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Console.Read()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; </text><text style="font-weight:bold; font-style:normal; color:#3366ff;">RETURN</text></para>
  </body>
</topic>
