<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-15T04:00:09.959+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>XS9118</title>
  <keywords>
    <keyword>Clipper calling convention</keyword>
    <keyword>PARAMS</keyword>
    <keyword>XS9118</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Warning XS9118</para>
    </header>
    <para styleclass="Body Text"></para>
    <para styleclass="Normal">假定为 &apos;USUAL&apos; 类型，未类型化的参数 &apos;{0}&apos; 和 &apos;{1}&apos; 的调用约定不正确。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">以下代码会产生此错误：</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Test1(c </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">string</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">, i ) </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">string</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// warning XS9118: 假定为 &apos;USUAL&apos; 类型，未类型化的参数 &apos;i&apos; 和 &apos;STRICT&apos; 的调用约定不正确。</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">return</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> c</text></para>
    <para styleclass="Normal">省略其他参数的类型是允许的，因为在这种情况下，该参数将获得与后面参数相同的类型。在下面的示例中，c 和 i 的类型都是 int。</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Test2(c, i </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">int</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">) </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">string</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">return</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> c</text></para>
    <para styleclass="Normal">如果省略所有类型，例如下面的代码</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Test3(c, i ) </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">string</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">return</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> c</text></para>
    <para styleclass="Normal">则编译器将生成一个 CLIPPER 调用约定的函数（或方法）。所有参数都将是 USUAL 类型，并且所有参数都是可选的。您可以随心所欲地使用多个参数调用该函数。当然，您需要在函数内部编写代码，检查参数及其类型是否正确。</para>
    <para styleclass="Normal">在处理 CLIPPER 调用约定时，X# 编译器将生成一个 USUAL[] 类型的新 PARAMS 参数，并为每个已声明的参数创建局部变量，同时将 PARAMS 数组中的正确元素赋值给局部变量。</para>
    <para styleclass="Code Example"></para>
  </body>
</topic>
