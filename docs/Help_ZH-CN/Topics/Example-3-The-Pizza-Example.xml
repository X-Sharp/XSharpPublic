<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-07-25T20:31:08.347+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>示例 3: Pizza 示例</title>
  <body>
    <header>
      <para styleclass="Heading1">示例 3: Pizza 示例</para>
    </header>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">我们的第三个迁移示例是披萨示例。您可以在 VO 安装中的 Samples\Controls\Buttons 文件夹中找到它。</para>
    <para styleclass="Body Text">我选择了相同的输出文件夹（C:\XporterOutput\Examples\），XPorter 将在 Examples 文件夹中用 AEF 和 Pizza 解决方案的内容创建一个 Pizza 子文件夹。</para>
    <para styleclass="Body Text">没有必要再次列出文件。</para>
    <para styleclass="Body Text">在 visual Studio 中打开 Pizza.sln 并编译后，你会发现以下问题：</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><image src="pizza.png" scale="100.00%" styleclass="Image Caption" figurelistinclude="0"></image></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">问题是：</para>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">原始 VO 程序的输出名称为 “PIZZA.EXE”。</li>
      <li styleclass="Body Text">X# 编译器使用与 Vulcan 编译器相同的逻辑，并创建了一个名为 Pizza.Exe.Functions 的静态类，该类将保存应用程序中的函数、全局和（X# 的新功能）定义。</li>
      <li styleclass="Body Text">应用程序中还有一个名为 “PIZZA ”的图像。</li>
      <li styleclass="Body Text">当我们编译这个应用程序时，名为 PIZZA 的类和命名空间 Pizza（来自类 Pizza.Exe.Functions）之间出现了冲突。</li>
      <li styleclass="Body Text">这是 DotNet 标准所不推荐的。Vulcan 则忽略了这一点，允许使用类 Pizza 和命名空间 Pizza。X# 更严格地遵循了 .Net 准则。</li>
      <li styleclass="Body Text">这个问题有两种解决方案：</li>
      <list id="0" level="1" type="ul" listtype="bullet" formatstring="&#111;" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:&apos;Courier New&apos;; font-size:11pt; color:#000000;">
        <li styleclass="Body Text">重命名图像类 Pizza（在 Images.prg 中）</li>
        <li styleclass="Body Text">重命名输出文件名。要重命名输出文件名，请打开项目设置（从项目菜单），在 “常规 ”页面设置程序集名称。你可以将程序集重命名为 PizzaApp，这样就可以解决问题了</li>
      </list>
    </list>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">在这种情况下，我选择重命名 PIZZA 图像。因此，打开 Images.PRG，重命名为</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> PIZZA </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INHERIT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Bitmap</text></para>
    <para styleclass="Body Text" style="margin-left:13px;">to</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> ImgPIZZA </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INHERIT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Bitmap</text></para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Then recompile again. Now one problem is left: </li>
    </list>
    <para styleclass="Normal" style="margin-left:13px;"><text styleclass="" style="font-family:Consolas; font-size:9pt; color:#000000;">C:\XporterOutput\Examples\Pizza\Order Dialog.prg(165,25): error XS0246: The type or namespace name &apos;PIZZA&apos; could not be found (are you missing a using directive or an assembly reference?)</text></para>
    <para styleclass="Normal"></para>
    <list id="2" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">在示例应用程序中，必胜客图片就用在这里。若要更改，请打开订单对话窗口（Order Dialog.ORDERDIALOG.xsfrm）。选择左下角的按钮，将属性窗口中的 “图像 ”文本从 Pizza 更改为 ImgPizza。保存表单。代码也将重新生成。</li>
      <li styleclass="Body Text">如果您查看修改后的订单对话框 rc 文件，就会发现该文件已标注了此代码生成的页眉。此外，还为表单中使用的所有窗口样式添加了 #defines。该资源是 “自包含 ”的，因此在资源文件中不依赖任何外部文件。</li>
      <li styleclass="Body Text">重新编译，程序即可编译完成。</li>
      <li styleclass="Body Text">当我们运行该程序时，会发现它的运行与预期一致：</li>
    </list>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><image src="Pizza1.png" scale="-99.90%" styleclass="Image Caption" figurelistinclude="0"></image></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><text style="font-weight:bold;">您可以在 XSharp 示例文件夹中找到 “Code before ”和 “Code after”。</text></para>
  </body>
</topic>
