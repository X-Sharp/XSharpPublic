<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2023-06-29T11:44:59.849+02:00" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>PROCEDURE Statement</title>
  <keywords>
    <keyword>_INIT1</keyword>
    <keyword>_INIT2</keyword>
    <keyword>_INIT3</keyword>
    <keyword>Compiledeclaration</keyword>
    <keyword>Declaration statements</keyword>
    <keyword>Entity declaration</keyword>
    <keyword>EXIT</keyword>
    <keyword>EXIT PROCEDURE</keyword>
    <keyword>INIT PROCEDURE</keyword>
    <keyword>PROCEDURE</keyword>
    <keyword>PROCEDURE statement</keyword>
    <keyword>Statements</keyword>
    <keyword>STATIC PROCEDURE statement</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">PROCEDURE Statement</para>
    </header>
    <para styleclass="Heading1">Purpose</para>
    <para styleclass="Normal">Declare a procedure name and formal parameters. When used inside a FoxPro DEFINE CLASS .. ENDDEFINE this declares a method.</para>
    <para styleclass="Heading1">Syntax</para>
    <para styleclass="Normal"><tab />[Attributes] [Modifiers] <text style="font-weight:bold;">PROCEDURE</text> &#160;&lt;<text styleclass="Italic">idProcedure</text>&gt; </para>
    <para styleclass="Normal"><tab />[Typeparameters]</para>
    <para styleclass="Normal"><tab />[([&lt;<text styleclass="Italic">idParam</text>&gt; [AS | REF|OUT|IN &lt;<text styleclass="Italic">idType</text>&gt;] [, ...])] </para>
    <para styleclass="Normal"><tab />[AS &lt;<text styleclass="Italic">idType</text>&gt;]</para>
    <para styleclass="Normal"><tab />[TypeparameterConstraints]</para>
    <para styleclass="Normal"><tab />[&lt;<text styleclass="Italic">idConvention</text>&gt;]</para>
    <para styleclass="Normal"><tab />[_INIT1 | _INIT2 | _INIT3 | EXIT]</para>
    <para styleclass="Normal"><tab />[EXPORT LOCAL] </para>
    <para styleclass="Normal"><tab />[DLLEXPORT STRING_CONST]</para>
    <para styleclass="Normal"><tab />[=&gt; &lt;expression&gt;]</para>
    <para styleclass="Normal"><tab /><text style="font-weight:bold;">CRLF</text></para>
    <para styleclass="Normal"><tab />[&lt;<text styleclass="Italic">Body</text>&gt;]</para>
    <para styleclass="Normal"><tab />[ENDPROC | END PROCEDURE]</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">Alternative INIT / EXIT Procedures</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><tab />[Attributes] [INIT | EXIT] <text style="font-weight:bold;">PROCEDURE</text> &#160;&lt;<text styleclass="Italic">idProcedure</text>&gt; </para>
    <para styleclass="Normal"><tab />[Typeparameters]</para>
    <para styleclass="Normal"><tab />[([&lt;<text styleclass="Italic">idParam</text>&gt; [AS | REF|OUT|IN &lt;<text styleclass="Italic">idType</text>&gt;] [, ...])] </para>
    <para styleclass="Normal"><tab />[AS &lt;<text styleclass="Italic">idType</text>&gt;]</para>
    <para styleclass="Normal"><tab />[TypeparameterConstraints]</para>
    <para styleclass="Normal"><tab />[&lt;<text styleclass="Italic">idConvention</text>&gt;]</para>
    <para styleclass="Normal"><tab />[=&gt; &lt;expression&gt;]</para>
    <para styleclass="Normal"><tab /><text style="font-weight:bold;">CRLF</text></para>
    <para styleclass="Normal"><tab />[&lt;<text styleclass="Italic">Body</text>&gt;]</para>
    <para styleclass="Normal"><tab />[ENDPROC | END PROCEDURE]</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">Arguments</para>
    <para styleclass="Heading1"><snippet src="__IncludeAttributes" inline="false"/></para>
    <para styleclass="List"><snippet src="__IncludeFuncProcModifiers" inline="false"/></para>
    <para styleclass="List"><tab />Please note that functions and procedures used as class members in FoxPro compatible classes can have more modifiers.<br/></para>
    <para styleclass="List">&lt;<text styleclass="Italic">idProcedure</text>&gt;<tab />A valid identifier name for the function. &#160;A function is an entity and, as such, shares the same name space as other entities. &#160;This means that it is not possible to have a function and a class, for example, with the same name.</para>
    <para styleclass="List"><snippet src="__IncludeFunctionParameters" inline="false"/></para>
    <para styleclass="Normal"></para>
    <para styleclass="List">_INITn, EXIT<tab />When an application is executed, all INIT procedures in all modules associated with the application (including libraries) are called automatically. &#160;There are three priority levels for INIT procedures indicated by the _INIT1, _INIT2, and _INIT3 keywords. &#160;_INIT1 procedures are called first, _INIT2 second, and _INIT3 third. &#160;All INIT procedures are called before the application Start() routine.<br/>EXIT procedures are called at application shutdown</para>
    <para styleclass="List"><snippet src="__IncludeExpressionBody" inline="false"/></para>
    <para styleclass="List"><snippet src="__IncludeBody" inline="false"/></para>
    <para styleclass="List"><text styleclass="Normal">ENDPROC | END PROCEDURE</text><tab /><text styleclass="Normal">These (optional)keywords indicate the logical end of the function.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">You must follow the guidelines below when specifying an INIT procedure:</para>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none; font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><tab /><text styleclass="Normal">No arguments are allowed</text></li>
    </list>
    <para styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"></para>
    <para styleclass="Heading1">Notes</para>
    <para styleclass="Normal">Please not that INIT and EXIT procedures have an INTERNAL scope always. You cannot access these from outside of the assembly where they are defined, so prevent you from accidentally calling them. If you need to call them, then you may consider to store the actual code in a normal function or procedure and call that code from the INIT or EXIT procedure.</para>
    <para styleclass="Heading1">Examples</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROCEDURE</text><text style="font-weight:bold; font-style:normal; color:#000000;"> First </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">PASCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">_INIT1</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">INIT procedures are necessary for having automatic initialization routines for libraries and other modules in an application besides the main startup module (i.e., the one containing the Start() routine). &#160;Although Start() routines are limited to one per application, there are no inherent limits for the total number of INIT procedures within an application.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The following example shows a skeleton of a typical procedure that uses declared variables:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROCEDURE</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Skeleton</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">cName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cClassRoom</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Bones</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nJoints</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nCrossBones</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> aOnHand </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&quot;skull&quot;,</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&quot;metacarpals&quot;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">}</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nCounter </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">0</text><tab /><br/><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">&lt;Executable Statements</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&gt;...</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">The next example determines whether an argument was skipped by comparing the parameter to NIL:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROCEDURE</text><text style="font-weight:bold; font-style:normal; color:#000000;"> MyProc</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">param1</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> param2</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> param3</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">IF</text><text style="font-weight:bold; font-style:normal; color:#000000;"> param2 </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">!=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">NIL</text><br/><tab /><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">param2 </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&quot;default value&quot;</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDIF</text><br/><tab /><text style="font-weight:bold; font-style:normal; color:#000000;">&lt;Statements</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&gt;...</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">This example invokes the procedure, UpdateAmount(), as an aliased expression:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#000000;">USE invoices NEW</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">USE customer NEW</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">Invoices</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">-&gt;</text><text style="font-weight:bold; font-style:normal; color:#000000;">UpdateAmount</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">Amount </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">+</text><text style="font-weight:bold; font-style:normal; color:#000000;"> Amount </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">*</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nInterest</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text></para>
    <para styleclass="Heading1">See Also</para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_FIELD">FIELD</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_FUNCTION">FUNCTION</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_LOCAL">LOCAL</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_MEMVAR">MEMVAR</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_METHOD">METHOD</link><text styleclass="Bold" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">,</text><link displaytype="text" defaultstyle="true" type="topiclink" href="command_RETURN">RETURN</link></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
