<?xml version="1.0" encoding="utf-8"?>
<!-- This file was generated  on 17/11/2022 21:48:28 -->
<topic id="cat-Settings_Functions" revisionNumber="1" title="Settings Functions">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <section address="Section1">
      <title>Settings Functions</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>
                <para>Assembly</para>
              </entry>
              <entry>
                <para>Function</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
          </tableHeader>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetAMExt</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns a string representing the morning extension for time strings in 12-hour format.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetAmPm</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether time strings are in 12-hour or 24-hour format.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetAnsi</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether database files are created using ANSI or OEM format and whether certain text file operations convert between the two character sets.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VO</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VO.Functions.GetAppLocaleID</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Gets the locale ID that the runtime uses for comparing strings when running in Windows collation mode (SetCollation(#Windows)).
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.GetAutoIncValue(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetChunkBase64(System.Byte,System.Byte,System.Byte,System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.GetColor</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.GetCp(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetCurPath</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Get the current X# search path for opening file.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.GetCursorAdapter(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetDateFormat</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the current date format.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetDefault</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the X# default drive and directory.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetDefaultDir</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the current SetDefault() setting.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetDosError</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the DOS error code from any application.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetEnv(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Retrieve the contents of a DOS environment variable.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetFAttr(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Convert file attributes to numbers.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.GetFile(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.GetFldState(XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetFMask(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Prepare a file specification for wildcard searching.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VO</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VO.Functions.GetMimeType(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetMimType(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>This function is not implemented yet</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetNatDLL</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Get the current DLL for nation-dependent operations and messages.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.GetNextModified(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetPMExt</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns a string representing the evening extension for time strings in 12-hour format.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.GetRTFullPath</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.GetThreadCount</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetTimeSep</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the current separation character used in time strings.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetTimeZoneDiff</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Returns TimeZone difference for current timezone in Hours
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.GetYield</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.Set(XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Changes and/or reads a system setting.
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.SetAlternate(System.Boolean)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.SetAltFile</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetAMExt</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Set the morning extension for time strings in 12-hour format.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetAmPm</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether time strings are in 12-hour or 24-hour format.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetAnsi</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether database files are created using ANSI or OEM format and whether certain text file operations convert between the two character sets.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VO</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VO.Functions.SetAppLocaleID(System.UInt32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Sets the locale that the runtime uses for comparing strings when running in Windows collation mode (SetCollation(#Windows)).
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetBeep</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether a beep is sounded by the error system when an error occurs.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetCentury</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether to include or omit century digits in the date format.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VO</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VO.Functions.SetClipCompFunc(System.Object)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>This function is not implemented yet</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetCollation</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the internal collation routine used for string comparisons.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.SetColor(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetCompatible</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.SetConsole</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetCpu</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the type of central processor you have.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetDateCountry</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the X# date format by selecting from a list of constants with corresponding date formats.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetDateFormat(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Change the setting that determines the X# date format.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetDecimal</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the number of decimal places used to display numbers.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetDecimalSep</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the decimal separation character to be used in numeric-to-string conversion functions.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetDefault</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Change the setting that determines the X# default drive and directory.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetDefaultDir</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Change the setting that determines the location of the error log file.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetDeleted</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether to ignore or include records that are marked for deletion.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetDigit</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the number of digits that will be shown to the left of the decimal point when a number is displayed.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetDigitFixed</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that fixes the number of digits used to display numeric output.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetEnv(System.String,System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Update or replace the contents of a DOS environment variable.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetEpoch</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines how dates without century digits are interpreted.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetErrorLog</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether error information is written to the error log file by the default runtime error handler.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetErrorLogFile</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>Get the name of the current errorlog file</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetErrorStackVOFormat(System.Boolean)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>This function allows you to enable or disable the VO compatible Errorstack format.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetExact</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Toggles an exact match for character string comparisons.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetExclusive</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether to open database files in exclusive or shared mode.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.SetFDateTime(System.String,XSharp.__Date,System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Reset the date and time stamps of a File.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetFieldStore</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether assignments are made to fields or to memory variables.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetFixed</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that fixes the number of decimal digits used to display numbers.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.SetFldState(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.SetFloatDelta(System.Double)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the point at which 2 floating point numbers would be considered equal even though they are different.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.SetFoxCollation(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetInternational</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the international mode for the application.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetMacroCompiler(System.Type)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Set the type of the class that must be used to compile macros
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetMacroDuplicatesResolver(XSharp.MacroCompilerResolveAmbiguousMatch)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Set the delegate that may be used to decide which symbol to call for ambiguous symbols
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetMath</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the internal operational characteristics of the underlying floating-point system.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetNatDLL(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Activate a new DLL for nation-dependent operations and messages.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetPath</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Change the setting that determines the X# search path for opening files.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetPathArray</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the Path array that is used by the File() function to locate files outside of the current directory.
            This is a combination of the SetDefault() and SetPath() variables.
            This may be null if the file function has never been called or never been called for files outside of the current
            directory.
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetPMExt</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Set the evening extension for time strings in 12-hour format.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.RT</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.RT.Functions.SetPos(System.Int32,System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Move the cursor to a new position on the terminal window.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetRefresh(System.Double)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Retrieve and optionally set the time for which the RDD system caches data.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.SetResultSet(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>-- todo --</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetSafety</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetScience</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that displays numbers in scientific notation.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetSoftSeek</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether a seek operation will find a close match when no exact match is found.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetSpace</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return the setting that determines whether a space is displayed between fields or expressions when you use the ? or ?? command.
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Data</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Data.Functions.SetSqlFactory(XSharp.Data.ISqlFactory)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>Set a new default SQL factory.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.SetTextFile(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Open/Close the file to which TEXT .. ENDTEXT values are written
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.SetTextMerge</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Retrieve the setting that determines if TextMerge is active
            </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetThousandSep</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines the thousands separation character to be used in numeric-to-string conversion functions.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetTimeFormat(System.String)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetTimeSep</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Change the setting that determines the separation character to be used in time strings.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetUnique(System.Boolean)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Return and optionally change the setting that determines whether to include unique record keys in an order.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VO</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VO.Functions.SetWinCompFlags(System.Object)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>This function is not implemented yet</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VO</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VO.Functions.SetWinCompFunc(System.Object)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>This function is not implemented yet</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.Core</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.Core.Functions.SetYield</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
              </para>
            </entry>
          </row>
        </table>
      </content>
    </section>
  </developerConceptualDocument>
</topic>