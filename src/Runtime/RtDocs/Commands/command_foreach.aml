<?xml version="1.0" encoding="utf-8"?>
<topic id="1f854d56-6755-4db4-8078-83f5937dede8" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>TODO: Move introduction text here</para>
    </introduction>




     
     <para><legacyBold>Navigation:</legacyBold>&#160;
     
     <!-- TODO: Unknown topic link: xsharp.html -->X# Documentation &gt; <!-- TODO: Unknown topic link: chapter-2.html -->X# Language Reference &gt; <!-- TODO: Unknown topic link: commands-by-category.html -->Commands and Statements &gt; <!-- TODO: Unknown topic link: cmd_cat_control.html -->Program Control&#160;&gt;</para>

     
     <!-- TODO: Add named anchor: prev --><mediaLink><image xlink:href="btn_prev_n" /></mediaLink><!-- TODO: Add named anchor: main --><mediaLink><image xlink:href="btn_home_n" /></mediaLink><!-- TODO: Add named anchor: next --><mediaLink><image xlink:href="btn_next_n" /></mediaLink>
    
    <h1 class="p_Heading1" style="page-break-after: avoid;">FOREACH Statement</h1>

  
  <!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
  
  



     <!--ZOOMRESTART-->
     <h1 class="p_Heading1" style="page-break-after: avoid;">Purpose</h1>
<para>Execute a block of statements for all elements in a collection</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Syntax</h1>
<para>FOREACH &#160;[IMPLIED &lt;idElement&gt; | VAR &lt;idElement&gt; | &lt;idElement&gt; AS &lt;idType&gt;] IN &lt;container&gt;<para/>
 &#160; &lt;Statements&gt;...<para/>
 &#160; [EXIT]<para/>
 &#160; &lt;Statements&gt;...<para/>
 &#160; [LOOP]<para/>
NEXT</para>
<h2 class="p_Heading2" style="page-break-after: avoid;">Note</h2>
<para>In the FoxPro dialect FOR EACH as 2 separate words is also allowed.</para>
<para>In the FoxPro and Xbase++ dialect ENDFOR is allowed as alternative for NEXT</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Arguments</h1>
<table><row><entry>&lt;idElement&gt;</entry><entry>The name of the variable that will receive the values of the elements in &lt;container&gt; When the IMPLIED or VAR clause is used then the datatype of the variable is inferred from the container. When the AS &lt;idType&gt; clause is used then this will be the datatype of the variable</entry></row></table><para>&#160;</para>
<table><row><entry>AS &lt;idType&gt;</entry><entry>Specifies the data type. &#160;If omitted, then depending on the compiler options the type will be either USUAL or determined by the compiler.</entry></row></table><para>&#160;</para>
<table><row><entry>&lt;container&gt;</entry><entry>A DotNet object that supports IEnumerable(), such as a XBase array, .Net array or a collection like List&lt;&gt;</entry></row></table><para>&#160;</para>
<table><row><entry>EXIT</entry><entry>Unconditionally branches control from within a FOR, FOREACH , REPEAT or DO WHILE statement to the statement immediately following the corresponding ENDDO or NEXT statement.</entry></row></table><para>&#160;</para>
<table><row><entry>LOOP</entry><entry>Branches control to the most recently executed FOR, FOREACH , REPEAT or DO WHILE statement.</entry></row></table><h1 class="p_Heading1" style="page-break-after: avoid;">Description</h1>
<para>The FOREACH statement is a convenient way to enumerate variable in an array or collection.</para>
<para>Preferrably the iteration variable should not be changed inside the loop. A compiler warning will be shown when you do this. </para>
<para>It is also not recommended to change the container in the loop as this may often result in a runtime error.</para>

     <!--ZOOMSTOP-->

<!-- TODO: Review markup -->
<markup>
<script>
           var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
           if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
	   $(document).ready(function(){
		   $(window).bind('resize', function() {
				var y = $('#header').height();
				$('#content').css('margin-top', y);
				$('.hmanchor').css('margin-top', -y-20);
				$('.hmanchor').css('padding-top', y+20);
			});
		   $(window).triggerHandler('resize');	
		   $(window).triggerHandler('resize');	
                   
		});
</script>
</markup>

    <relatedTopics>
    </relatedTopics>

  </developerConceptualDocument>
</topic>
