<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-06-15T18:43:09.855+08:00" lasteditedby="Design" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>ENUM Statement</title>
  <keywords>
    <keyword>ENUM</keyword>
    <keyword>enumeration</keyword>
    <keyword>enumeration members</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">ENUM Statement</para>
    </header>
    <para styleclass="Heading1">用途</para>
    <para styleclass="Normal">向编译器声明一个枚举。</para>
    <para styleclass="Heading1">语法</para>
    <para styleclass="Normal"><tab />[attributes] [Modifiers] </para>
    <para styleclass="Normal"><tab />ENUM &lt;idEnumName&gt; [AS type] &#160; </para>
    <para styleclass="Normal"><tab /><tab />memberName [:= value]</para>
    <para styleclass="Normal"><tab /><tab /> &#160;[...]</para>
    <para styleclass="Normal"><tab />END [ENUM]</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">参数</para>
    <para styleclass="List"><snippet src="__IncludeMethodModifiers" inline="false"/></para>
    <para styleclass="List"><text styleclass="Italic">idEnum</text><tab />枚举的有效标识符名称。 枚举名在名称空间内必须是唯一的。</para>
    <para styleclass="List"></para>
    <para styleclass="List">AS type <tab />枚举成员的数据类型(可选)。</para>
    <para styleclass="List"></para>
    <para styleclass="List"><text styleclass="List1">memberName </text><tab /><text styleclass="List1">枚举成员的名称。</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Heading1">描述</para>
    <para styleclass="Normal">使用 <text style="font-weight:bold;">ENUM</text> 关键字声明的类型是“枚举”类型，它由一组命名常量组成，称为枚举列表。枚举类型隐式继承自 System.Enum。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">枚举类型具有基础类型，即枚举列表中项的类型。默认的基础类型是 INT；如果指定了 AS 子句，则类型可以是任何有符号或无符号整数类型，但不能是 System.Char。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">默认情况下，枚举列表中的第一个成员的值为 0。每个其他成员的值是前一个成员的值加 1。元素的值可以通过使用赋值运算符（:=）后跟文字整数值或在编译时解析为整数值的表达式来显式设置为基础类型范围内的任何值。两个或更多成员可以显式设置为相同的值。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">ENUM E 的默认值是表达式 (E)0.，这取决于是否存在具有值 0 的成员，可能代表枚举类型的成员。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">通过指定枚举类型的名称和成员的名称，用句点分隔，来引用枚举成员。如果枚举类型是在当前编译的命名空间中声明的，则枚举类型的名称就足够了。否则，必须使用完全限定的枚举名称（例如 System.Windows.Forms.MessageBoxButtons），或者使用 USING 指令导入命名空间。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">可以在 <text style="font-weight:bold;">ENUM</text> 上放置 System.FlagsAttribute 属性，以指示可以使用按位 OR 运算符组合枚举的元素。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">枚举名称可以包括一个或多个命名空间名称，用句点分隔。如果在枚举名称中找不到句点，则假定默认命名空间。默认命名空间是输出程序集名称的基本名称，除非通过 /ns 编译器选项明确覆盖。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">示例</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><text style="font-weight:normal; font-style:normal; color:#000000;"> days</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Sunday &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Monday &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 1</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Tuesday &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 2</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Wednesday &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 3</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Thursday &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 4</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Friday &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 5</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Saturday &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// 6</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> example1() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> i </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; i := (</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; color:#000000;">) days.Friday</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? days.Friday, i &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// prints: Friday 5</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><text style="font-weight:normal; font-style:normal; color:#000000;"> direction</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; north &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// 具有默认值 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; east &#160;:= 90</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; south := 180</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; west &#160;:= 270</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> example2( x </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> direction ) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">IF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x == direction.north</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;goNorth()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSEIF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x == direction.east</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;goEast()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSEIF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x == direction.south</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;goSouth()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSEIF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x == direction.west</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;goWest()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSE</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;Debug.Assert( &quot;direction 的值未知&quot; )</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDIF</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">[System.FlagsAttribute];</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><text style="font-weight:normal; font-style:normal; color:#000000;"> CarOptions</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; SunRoof &#160; &#160; &#160; := 0x1</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Spoiler &#160; &#160; &#160; := 0x2</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; FogLights &#160; &#160; := 0x4</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; TintedWindows := 0x8</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENUM</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> example3() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> options </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> CarOptions</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; options := CarOptions.SunRoof | CarOptions.FogLights</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? options &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// prints: SunRoof, FogLights</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ? (</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; color:#000000;">) options </text><text style="font-weight:bold; font-style:italic; color:#339966;">// prints: 5</text></para>
    <para styleclass="Body Text">在第一个和第三个示例中，请注意在枚举类型上使用 ? 语句会打印出枚举的文本值。这是因为枚举成员的名称存储在程序集的元数据中，而 System.Enum 中的 ToString() 方法(每个枚举类型都继承自它)使用元数据来获取并返回枚举成员的名称，而不是其基础数值。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">还要注意，即使从 Enum.ToString() 返回枚举成员的文本名称，编译器在编译代码时使用的是字面数值。因此，例如 IF x == direction.north 实际上编译为 IF x == 0，因为枚举成员和它们的基础值之间的映射发生在编译时而不是运行时。这使得使用枚举类型与 #define 一样高效，同时提供更高级别的类型安全性和编译时错误检查。然而，这也意味着更改枚举成员的值可能会导致使用该枚举的现有代码出现问题，除非重新编译。</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Heading1">备注</para>
    <para styleclass="Normal"></para>
  </body>
</topic>
