<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project>

  <!-- Default values for XAML rules-->
  <ItemDefinitionGroup>
    <XamlPropertyRule>
      <Namespace>Microsoft.VisualStudio.ProjectSystem</Namespace>
      <RuleInjectionClassName>$(XamlPropertyRuleInjectionClassName)</RuleInjectionClassName>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <XlfOutputItem>_TranslatedXamlRule</XlfOutputItem>
      <LogicalName>XamlRuleToCode:%(Filename)%(Extension)</LogicalName>
    </XamlPropertyRule>
    <XamlPropertyRuleNoCodeBehind>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <XlfOutputItem>_TranslatedXamlRule</XlfOutputItem>
      <LogicalName>XamlRuleToCode:%(Filename)%(Extension)</LogicalName>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyProjectItemsSchema>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <XlfOutputItem>_TranslatedXamlRule</XlfOutputItem>
      <LogicalName>XamlRuleToCode:%(Filename)%(Extension)</LogicalName>
    </XamlPropertyProjectItemsSchema>
    <DesignTimeTargetsFile>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </DesignTimeTargetsFile>
  </ItemDefinitionGroup>

  <!-- Embed translated XAML rule files but don't copy the EmbeddedResource item to the output.
       We'll handle that ourselves in CopyTranslatedXamlRulesToOutputDirectory so we can adjust the file name. -->
  <Target Name="CreateEmbeddedResourceForTranslatedXamlRules"
          AfterTargets="TranslateSourceFromXlf">
    <ItemGroup>
      <EmbeddedResource Include="@(_TranslatedXamlRule)">
        <CopyToOutputDirectory>False</CopyToOutputDirectory>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <!-- Copy XAML rule files and design targets files for testing and setup authoring purposes -->
  <!-- Only copy during the net472 build as that prevents multiple (possibly simultaneous) copies,
       and only VS uses these files from the output directory. -->
  <Target Name="CopyXamlRulesToOutputDirectory" AfterTargets="CopyFilesToOutputDirectory"
          Condition="'$(TargetFramework)' == 'net472'">
    <ItemGroup>
      <_ItemsToCopy Include="@(XamlPropertyRule);@(XamlPropertyRuleNoCodeBehind);@(XamlPropertyProjectItemsSchema);@(DesignTimeTargetsFile)" Condition="'%(CopyToOutputDirectory)' != 'Never'" />
    </ItemGroup>

    <Copy SourceFiles="@(_ItemsToCopy)"
          DestinationFolder="$(VisualStudioXamlRulesDir)"
          SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>
  </Target>

  <!-- Copy translated XAML rule files for testing and setup authoring purposes -->
  <!-- Only copy during the net472 build as that prevents multiple (possibly simultaneous) copies,
       and only VS uses these files from the output directory. -->
  <Target Name="CopyTranslatedXamlRulesToOutputDirectory" AfterTargets="CopyFilesToOutputDirectory" DependsOnTargets="TranslateSourceFromXlf"
          Condition="'$(TargetFramework)' == 'net472'">
    <Copy SourceFiles="@(_TranslatedXamlRule)"
          DestinationFiles="@(_TranslatedXamlRule->'$(VisualStudioXamlRulesDir)%(XlfLanguage)\$([System.IO.Path]::GetFileName('%(XlfSource)'))')"
          SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>
  </Target>

  <ItemGroup>
    <!-- XamlPropertyRuleNoCodeBehind are embedded during build. Changes to them must trigger builds. -->
    <UpToDateCheckInput Include="@(XamlPropertyRuleNoCodeBehind)" />
  </ItemGroup>

</Project>