<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:platform="clr-namespace:Microsoft.Internal.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:designer="clr-namespace:Microsoft.VisualStudio.ProjectSystem.VS.PropertyPages.Designer;assembly=Microsoft.VisualStudio.ProjectSystem.VS"
    xmlns:controls="clr-namespace:Microsoft.VisualStudio.ProjectSystem.Properties.Controls"
    xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:local="clr-namespace:Microsoft.VisualStudio.ProjectSystem.VS.Utilities"
    xmlns:propertyPages="clr-namespace:Microsoft.VisualStudio.ProjectSystem.VS.PropertyPages"
    mc:Ignorable="d">

    <Style x:Key="MultilineTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Static vsfx:VsResourceKeys.TextBoxStyleKey}}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MultilineTextBoxStyle}">
        <Setter Property="local:BindingBehavior.UpdatePropertyOnEnterPressed" Value="TextBox.Text" />
        <Setter Property="MaxHeight" Value="24.66" />
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Static vsfx:VsResourceKeys.ButtonStyleKey}}">
        <Setter Property="Padding" Value="6,0" />
    </Style>

    <Style x:Key="HighlightTextBlockStyle" TargetType="platform:HighlightTextBlock">
        <Setter Property="HighlightBackground" Value="{DynamicResource {x:Static vsui:TreeViewColors.HighlightedSpanBrushKey}}" />
        <Setter Property="HighlightForeground" Value="{DynamicResource {x:Static vsui:TreeViewColors.HighlightedSpanTextBrushKey}}" />
        <Setter Property="HighlightFontWeight" Value="{Binding Path=FontWeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:CommonDocumentColors.HeaderTextBrushKey}}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <system:Double x:Key="MaxDescriptionWidth">500</system:Double>


    <!-- C# Implicit Usings PROPERTIES -->

    <Style x:Key="CSharpImplicitUsingsStyle" TargetType="controls:CSharpImplicitUsingsControl">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CSharpImplicitUsingsControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />

                        </Grid.RowDefinitions>
                        <DockPanel
                            Grid.Row="0"
                            DockPanel.Dock="Top"
                            HorizontalAlignment="Left"
                            KeyboardNavigation.TabNavigation="Local"
                            Margin="0, 0, 0, 8">

                            <DockPanel>
                                <DockPanel Margin="0, 0, 5, 0">
                                    <TextBlock Text="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_AddUsing}"
                                               Margin="0, 0, 3, 0"
                                               Foreground="DarkGray"
                                               IsHitTestVisible="False"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left" />

                                    <TextBox
                                        Name="EnteredUsingIncludesTextBox"
                                        Text="{Binding Path=EnteredUserUsingIncludes, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        TextWrapping="Wrap"
                                        Style="{StaticResource TextBoxStyle}"
                                        AutomationProperties.Name="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_AddUsing}"
                                        HorizontalAlignment="Stretch" />
                                </DockPanel>

                                <DockPanel Margin="0, 0, 5, 0">
                                    <TextBlock Text="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemAlias}"
                                               Margin="0, 0, 3, 0"
                                               Foreground="DarkGray"
                                               IsHitTestVisible="False"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left" />
                                    <TextBox
                                        IsEnabled="{Binding EnteredUserUsingIsStatic, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static local:Converters.IsEnteredUserAliasStringEnabled}}"
                                        Text="{Binding Path=EnteredUserUsingAlias, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap"
                                        Style="{StaticResource TextBoxStyle}"
                                        Width="100"
                                        AutomationProperties.Name="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemAlias}"
                                        MaxWidth="200"
                                        Margin="0, 0, 1, 0" />
                                </DockPanel>

                                <CheckBox
                                    IsChecked="{Binding Path=EnteredUserUsingIsStatic, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    Style="{StaticResource {x:Static vsfx:VsResourceKeys.CheckBoxStyleKey}}"
                                    AutomationProperties.Name="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemIsStatic}"
                                    Margin="0, 0, 15, 0">
                                    <CheckBox.IsEnabled>
                                        <MultiBinding Converter="{x:Static local:Converters.IsIsStaticCheckboxEnabled}">
                                            <Binding Path="EnteredUserUsingAlias" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Source="False" />
                                        </MultiBinding>
                                    </CheckBox.IsEnabled>
                                    <TextBlock Text="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemIsStatic}" VerticalAlignment="Center"></TextBlock>
                                </CheckBox>

                                <Button
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource ButtonStyle}"
                                    Content="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_AddUsingButton}"
                                    Command="{TemplateBinding AddUserUsingCommand}" />

                            </DockPanel>
                        </DockPanel>

                        <CheckBox
                            Grid.Row="1"
                            Margin="0, 0, 0, 10"
                            IsChecked="{Binding Path=ShouldShowReadonlyUsings, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Style="{StaticResource {x:Static vsfx:VsResourceKeys.CheckBoxStyleKey}}"
                            AutomationProperties.Name="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ShowImportedUsingsButton}">
                            <TextBlock Text="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ShowImportedUsingsButton}" VerticalAlignment="Center"></TextBlock>
                        </CheckBox>

                        <ListView
                            Grid.Row="2"
                            ItemsSource="{TemplateBinding UsingCollectionState}"
                            KeyboardNavigation.TabNavigation="Continue"
                            Background="Transparent"
                            MaxHeight="750"
                            AutomationProperties.Name="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListViewAccessibleName}">
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{StaticResource {x:Static vsfx:VsResourceKeys.ThemedDialogGridViewColumnHeaderStyleKey}}">
                                    <GridViewColumn Width="300">
                                        <GridViewColumn.Header>
                                            <TextBlock Margin="4 0" Text="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemIncludes}" />
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type controls:ImplicitUsingModel}">
                                                <TextBox
                                                    Name="Using_ListItemIncludes"
                                                    propertyPages:KeyboardFocusBehaviour.IsKeyboardFocused="{Binding ForceIncludesFocus}"
                                                    AutomationProperties.Name="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemIncludes}"
                                                    IsEnabled="{Binding IsReadOnly, Converter={x:Static local:Converters.InvertBoolean}}"
                                                    Text="{Binding Include, Mode=TwoWay}"
                                                    Style="{StaticResource TextBoxStyle}"
                                                    Width="275" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="200">
                                        <GridViewColumn.Header>
                                            <TextBlock Margin="4 0" Text="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemAlias}" />
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type controls:ImplicitUsingModel}">
                                                <TextBox
                                                    Name="Using_ListItemAlias"
                                                    propertyPages:KeyboardFocusBehaviour.IsKeyboardFocused="{Binding ForceAliasFocus}"
                                                    AutomationProperties.Name="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemAlias}"
                                                    Text="{Binding Alias, Mode=TwoWay}"
                                                    Style="{StaticResource TextBoxStyle}"
                                                    Width="175">
                                                    <TextBox.IsEnabled>
                                                        <MultiBinding Converter="{x:Static local:Converters.IsListViewAliasStringEnabled}">
                                                            <Binding Path="IsReadOnly" />
                                                            <Binding Path="IsStatic" />
                                                        </MultiBinding>
                                                    </TextBox.IsEnabled>
                                                </TextBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Width="75">
                                        <GridViewColumn.Header>
                                            <TextBlock Margin="4 0" Text="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemIsStatic}" />
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type controls:ImplicitUsingModel}">
                                                <CheckBox
                                                    Name="Using_ListItemIsStatic"
                                                    propertyPages:KeyboardFocusBehaviour.IsKeyboardFocused="{Binding ForceIsStaticFocus}"
                                                    IsChecked="{Binding IsStatic, Mode=TwoWay}"
                                                    Style="{StaticResource {x:Static vsfx:VsResourceKeys.CheckBoxStyleKey}}"
                                                    AutomationProperties.Name="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemIsStatic}"
                                                    Margin="0, 0, 15, 0">
                                                    <CheckBox.IsEnabled>
                                                        <MultiBinding Converter="{x:Static local:Converters.IsIsStaticCheckboxEnabled}">
                                                            <Binding Path="Alias" />
                                                            <Binding Path="IsReadOnly" />
                                                        </MultiBinding>
                                                    </CheckBox.IsEnabled>
                                                    <TextBlock Text="{Binding IsStatic, Converter={x:Static local:Converters.IsStaticCheckboxText}}" />
                                                </CheckBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type controls:ImplicitUsingModel}">
                                                <Button
                                                    IsEnabled="{Binding IsReadOnly, Converter={x:Static local:Converters.InvertBoolean}}"
                                                    DockPanel.Dock="Right"
                                                    Style="{StaticResource ButtonStyle}"
                                                    Content="{x:Static propertyPages:PropertyPageResources.ImplicitUsingEditor_ListItemDelete}"
                                                    Command="{Binding RemoveUsingCommand}"
                                                    CommandParameter="{Binding }" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>

                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Static vsfx:VsResourceKeys.ThemedDialogListViewItemGridStyleKey}}">
                                    <Setter Property="IsTabStop" Value="False" />
                                    <Setter Property="Focusable" Value="False" />

                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="LightGray" />
                                        </Trigger>
                                    </Style.Triggers>

                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="UnconfiguredCSharpImplicitUsingsTemplate" DataType="{x:Type designer:IPropertyValueViewModel}">
        <controls:CSharpImplicitUsingsControl
            StringList="{Binding UnevaluatedValue, Mode=TwoWay}"
            Style="{StaticResource CSharpImplicitUsingsStyle}" />
    </DataTemplate>

    <DataTemplate x:Key="ConfiguredCSharpImplicitUsingsEditorTemplate" DataType="designer:IPropertyValueViewModel">
        <DockPanel Margin="0,2" HorizontalAlignment="Left">
            <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Foreground="{DynamicResource {x:Static vsui:CommonDocumentColors.HeaderTextBrushKey}}">
                <TextBlock.Text>
                    <MultiBinding Converter="{x:Static local:Converters.DimensionNames}">
                        <Binding Path="Configuration" />
                        <Binding Path="Parent.Context.ConfigurationMatrix.DimensionNames" FallbackValue="{x:Static local:Converters.ImmutableStringArray}" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <controls:CSharpImplicitUsingsControl
                StringList="{Binding UnevaluatedValue, Mode=TwoWay}"
                Style="{StaticResource CSharpImplicitUsingsStyle}" />
        </DockPanel>
    </DataTemplate>
</ResourceDictionary>