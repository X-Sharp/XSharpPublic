<?xml version="1.0" encoding="utf-8"?>
<!-- This file was generated  on 17/11/2022 21:48:28 -->
<topic id="cat-Binary_Functions" revisionNumber="1" title="Binary Functions">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <section address="Section1">
      <title>Binary Functions</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>
                <para>Assembly</para>
              </entry>
              <entry>
                <para>Function</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
          </tableHeader>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.BitAnd(XSharp.__Usual,XSharp.__Usual[])</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Performs a bitwise AND operation on two or more values of Numeric, Varbinary, or Blob type and returns the result.
            There is a numeric and a binary version of the syntax.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.BitClear(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Clears the specified bit in a Numeric, Varbinary, or Blob value by setting it to 0 and returns the resulting value.
            There is a numeric and a binary version of the syntax.
            If the specified expression is not an integer, it is converted to an integer before performing the operation.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.BitLShift(System.Int32,System.Int32)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Moves bits in a numeric value to the left by the specified number of positions and returns the resulting value.
            If the specified expressions are not integers, they are converted to integers before performing the operation.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.BitNot(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Performs a bitwise NOT operation on a value of Numeric, Varbinary, or Blob type and returns the bitwise complement on the specified value.
            There is a numeric and a binary version of the syntax.
            If the specified expression is not an integer, it is converted to an integer before performing the operation.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.BitOr(XSharp.__Usual,XSharp.__Usual[])</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Perform a bitwise inclusive OR operation on two or more values of Numeric, Varbinary, or Blob type and returns the result.
            There is a numeric and a binary version of the syntax.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.BitRShift(XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Moves bits in a numeric value to the right by the specified number of positions and returns the resulting value.
            If the specified expressions are not integers, they are converted to integers before performing the operation.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.BitSet(XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Sets a bit to 1 in a value of Numeric, Varbinary, or Blob type and returns the resulting value.
            There is a numeric and a binary version of the syntax.
            If the specified expression is not an integer, it is converted to an integer before setting the bit.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.BitTest(XSharp.__Usual,XSharp.__Usual)</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Determines whether a specific bit in a Numeric, Varbinary, or Blob value is set to 1.
            There is a numeric and a binary version of the syntax.
            If the specified expression is not an integer, it is converted to an integer before performing the operation.
        </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>XSharp.VFP</para>
            </entry>
            <entry>
              <para>
                <codeEntityReference qualifyHint="false" autoUpgrade="true">M:XSharp.VFP.Functions.BitXor(XSharp.__Usual,XSharp.__Usual[])</codeEntityReference>
              </para>
            </entry>
            <entry>
              <para>
            Perform a bitwise exclusive OR operation on two or more values of Numeric, Varbinary, or Blob type and returns the result.
            There is a numeric and a binary version of the syntax.
        </para>
            </entry>
          </row>
        </table>
      </content>
    </section>
  </developerConceptualDocument>
</topic>