VOSTRUCT smpte_win ALIGN 1
	MEMBER hour AS BYTE
	MEMBER min AS BYTE
	MEMBER sec AS BYTE
	MEMBER frame AS BYTE
	MEMBER fps AS BYTE
	MEMBER dummy AS BYTE
	MEMBER DIM pad[2] AS BYTE

VOSTRUCT midi_win   ALIGN 1
	MEMBER songptrpos AS DWORD

VOSTRUCT _winmmtime ALIGN 1
	MEMBER    wType AS DWORD
	MEMBER    u IS u_winmmtime





VOSTRUCT _winDRVCONFIGINFOEX ALIGN 1
	MEMBER  dwDCISize AS DWORD
	MEMBER lpszDCISectionName AS PTR
	MEMBER lpszDCIAliasName AS PTR
	MEMBER dnDevNode AS DWORD





VOSTRUCT _winDRVCONFIGINFO  ALIGN 1
	MEMBER   dwDCISize AS DWORD
	MEMBER  lpszDCISectionName AS PSZ
	MEMBER  lpszDCIAliasName AS PSZ




VOSTRUCT _winwavehdr  ALIGN 1
	MEMBER  lpData AS PSZ
	MEMBER dwBufferLength AS DWORD
	MEMBER dwBytesRecorded AS DWORD
	MEMBER dwUser AS DWORD
	MEMBER dwFlags AS DWORD
	MEMBER dwLoops AS DWORD
	MEMBER lpNext AS _winwavehdr
	MEMBER reserved AS DWORD



VOSTRUCT _winWAVEOUTCAPS  ALIGN 1
	MEMBER  wMid AS WORD
	MEMBER wPid AS WORD
	MEMBER vDriverVersion AS DWORD
	MEMBER DIM szPname[MAXPNAMELEN] AS BYTE
	MEMBER dwFormats AS DWORD
	MEMBER wChannels AS WORD
	MEMBER wReserved1 AS WORD
	MEMBER dwSupport AS DWORD

VOSTRUCT _winWAVEOUTCAPSW   ALIGN 1
	MEMBER  wMid AS WORD
	MEMBER  wPid AS WORD
	MEMBER  vDriverVersion AS DWORD
	MEMBER  DIM szPname[MAXPNAMELEN] AS WORD   	//RvdH 070412 changed from BYTE to WORD
	MEMBER  dwFormats AS DWORD
	MEMBER  wChannels AS WORD
	MEMBER  wReserved1 AS WORD
	MEMBER  dwSupport AS DWORD




VOSTRUCT _winWAVEINCAPS  ALIGN 1
	MEMBER  wMid AS WORD
	MEMBER  wPid AS WORD
	MEMBER  vDriverVersion AS DWORD
	MEMBER  DIM szPname[MAXPNAMELEN] AS BYTE
	MEMBER  dwFormats AS DWORD
	MEMBER  wChannels AS WORD    	// RvdH 070411 changed from DWORD to WORD
	MEMBER  wReserved1 AS WORD		// RvdH 070411 changed from DWORD to WORD




VOSTRUCT _winwaveformat ALIGN 1
	MEMBER  wFormatTag 		AS WORD
	MEMBER  nChannels 		AS WORD
	MEMBER  nSamplesPerSec 	AS DWORD
	MEMBER  nAvgBytesPerSec AS DWORD
	MEMBER  nBlockAlign 		AS WORD


VOSTRUCT _winpcmwaveformat  ALIGN 1
	MEMBER wf IS  _winwaveformat
	MEMBER wBitsPerSample AS WORD




VOSTRUCT _winWAVEFORMATEX  ALIGN 1
	MEMBER  wFormatTag AS WORD
	MEMBER  nChannels AS WORD
	MEMBER  nSamplesPerSec AS DWORD
	MEMBER  nAvgBytesPerSec AS DWORD
	MEMBER  nBlockAlign AS WORD
	MEMBER  wBitsPerSample AS WORD
	MEMBER  cbSize AS WORD






VOSTRUCT _WINMIDIOUTCAPS ALIGN 1
	MEMBER  wMid AS WORD
	MEMBER  wPid AS WORD
	MEMBER  vDriverVersion AS DWORD
	MEMBER  DIM szPname[MAXPNAMELEN] AS BYTE
	MEMBER  wTechnology AS WORD
	MEMBER  wVoices AS WORD
	MEMBER  wNotes AS WORD
	MEMBER  wChannelMask AS WORD
	MEMBER  dwSupport AS DWORD






VOSTRUCT _winMIDIINCAPS  ALIGN 1
	MEMBER  wMid AS WORD
	MEMBER wPid AS WORD
	MEMBER vDriverVersion AS DWORD
	MEMBER DIM szPname[MAXPNAMELEN] AS BYTE
	MEMBER dwSupport AS DWORD




VOSTRUCT _winmidihdr  ALIGN 1
	MEMBER  lpData AS PSZ
	MEMBER dwBufferLength AS DWORD
	MEMBER dwBytesRecorded AS DWORD
	MEMBER dwUser AS DWORD
	MEMBER dwFlags AS DWORD
	MEMBER lpNext AS _winmidihdr
	MEMBER reserved AS DWORD
	MEMBER dwOffset AS DWORD
	MEMBER DIM dwReserved[8] AS DWORD


VOSTRUCT _winmidievent ALIGN 1
	MEMBER  dwDeltaTime AS DWORD
	MEMBER dwStreamID AS DWORD
	MEMBER dwEvent AS DWORD
	MEMBER DIM dwParms[1] AS DWORD


VOSTRUCT _WINmidistrmbuffver  ALIGN 1
	MEMBER  dwVersion AS DWORD
	MEMBER  dwMid AS DWORD
	MEMBER  dwOEMVersion AS DWORD


VOSTRUCT _winmidiproptimediv ALIGN 1
	MEMBER cbStruct AS DWORD
	MEMBER dwTimeDiv AS DWORD

VOSTRUCT _winmidiproptempo ALIGN 1
	MEMBER       cbStruct AS DWORD
	MEMBER       dwTempo AS DWORD






VOSTRUCT _winAUXCAPS ALIGN 1
	MEMBER  wMid  AS WORD
	MEMBER wPid  AS WORD
	MEMBER vDriverVersion AS DWORD
	MEMBER DIM szPname[MAXPNAMELEN] AS BYTE
	MEMBER wTechnology AS WORD
	MEMBER wReserved1 AS WORD
	MEMBER dwSupport AS DWORD



VOSTRUCT _winMIXERCAPS ALIGN 1
	MEMBER  wMid AS WORD
	MEMBER  wPid AS WORD
	MEMBER  vDriverVersion AS DWORD
	MEMBER  DIM szPname[MAXPNAMELEN] AS BYTE
	MEMBER  fdwSupport AS DWORD
	MEMBER  cDestinations AS DWORD




VOSTRUCT Target_win ALIGN 1
	MEMBER  dwType AS DWORD
	MEMBER  dwDeviceID AS DWORD
	MEMBER  wMid AS WORD
	MEMBER  wPid AS WORD
	MEMBER  vDriverVersion AS DWORD
	MEMBER  DIM szPname[MAXPNAMELEN] AS BYTE

VOSTRUCT _winMIXERLINE ALIGN 1
	MEMBER  cbStruct AS DWORD
	MEMBER  dwDestination AS DWORD
	MEMBER  dwSource AS DWORD
	MEMBER  dwLineID AS DWORD
	MEMBER  fdwLine AS DWORD
	MEMBER  dwUser AS DWORD
	MEMBER  dwComponentType AS DWORD
	MEMBER  cChannels AS DWORD
	MEMBER  cConnections AS DWORD
	MEMBER  cControls AS DWORD
	MEMBER  DIM szShortName[MIXER_SHORT_NAME_CHARS] AS BYTE
	MEMBER  DIM szName[MIXER_LONG_NAME_CHARS] AS BYTE

	MEMBER  Target IS TARGET_win









VOSTRUCT _winMIXERCONTROL  ALIGN 1
	MEMBER  cbStruct AS DWORD
	MEMBER  dwControlID AS DWORD
	MEMBER  dwControlType AS DWORD
	MEMBER  fdwControl AS DWORD
	MEMBER  cMultipleItems AS DWORD
	MEMBER  DIM szShortName[MIXER_SHORT_NAME_CHARS] AS BYTE
	MEMBER  DIM szName[MIXER_LONG_NAME_CHARS] AS BYTE
	// RvdH 070411 added
   MEMBER  DIM Bounds[6] 	AS DWORD
   MEMBER DIM Metrics[6]	AS DWORD







VOSTRUCT _winMIXERLINECONTROLS ALIGN 1
	MEMBER  cbStruct AS DWORD
	MEMBER  dwLineID AS DWORD
	MEMBER  uControlIdType	AS DWORD // RvdH 070411 added
	MEMBER  cControls AS DWORD
	MEMBER  cbmxctrl AS DWORD
	MEMBER  pamxctrl AS _winMIXERCONTROL





VOSTRUCT _winMIXERCONTROLDETAILS ALIGN 1
	MEMBER  cbStruct AS DWORD
	MEMBER  dwControlID AS DWORD
	MEMBER  cChannels AS DWORD
	MEMBER  uControlsItem	AS DWORD // RvdH 070411 added
	MEMBER  cbDetails AS DWORD
	MEMBER  paDetails AS PTR




VOSTRUCT _winMIXERCONTROLDETAILS_LISTTEXT ALIGN 1
	MEMBER  dwParam1 AS DWORD
	MEMBER  dwParam2 AS DWORD
	MEMBER  DIM szName[MIXER_LONG_NAME_CHARS] AS BYTE




VOSTRUCT _winMIXERCONTROLDETAILS_BOOLEAN ALIGN 1
	MEMBER  fValue AS LONGINT

VOSTRUCT _winMIXERCONTROLDETAILS_SIGNED ALIGN 1
	MEMBER  lValue AS LONGINT

VOSTRUCT _winMIXERCONTROLDETAILS_UNSIGNED ALIGN 1
	MEMBER           dwValue AS DWORD



VOSTRUCT _wintimecaps ALIGN 1
	MEMBER  wPeriodMin AS DWORD
	MEMBER  wPeriodMax AS DWORD




VOSTRUCT _winJOYCAPS  ALIGN 1
	MEMBER  wMid AS WORD
	MEMBER  wPid AS WORD
	MEMBER  DIM szPname[MAXPNAMELEN] AS BYTE
	MEMBER  wXmin AS DWORD
	MEMBER  wXmax AS DWORD
	MEMBER  wYmin AS DWORD
	MEMBER  wYmax AS DWORD
	MEMBER  wZmin AS DWORD
	MEMBER  wZmax AS DWORD
	MEMBER  wNumButtons AS DWORD
	MEMBER  wPeriodMin AS DWORD
	MEMBER  wPeriodMax AS DWORD
	MEMBER  wRmin AS DWORD
	MEMBER  wRmax AS DWORD
	MEMBER  wUmin AS DWORD
	MEMBER  wUmax AS DWORD
	MEMBER  wVmin AS DWORD
	MEMBER  wVmax AS DWORD
	MEMBER  wCaps AS DWORD
	MEMBER  wMaxAxes AS DWORD
	MEMBER  wNumAxes AS DWORD
	MEMBER  wMaxButtons AS DWORD
	MEMBER  DIM szRegKey[MAXPNAMELEN] AS BYTE
	MEMBER  DIM szOEMVxD[MAX_JOYSTICKOEMVXDNAME] AS BYTE





VOSTRUCT _winjoyinfo ALIGN 1
	MEMBER  wXpos AS DWORD
	MEMBER  wYpos AS DWORD
	MEMBER  wZpos AS DWORD
	MEMBER  wButtons AS DWORD

VOSTRUCT _winjoyinfoex ALIGN 1
	MEMBER  dwSize AS DWORD
	MEMBER  dwFlags AS DWORD
	MEMBER  dwXpos AS DWORD
	MEMBER  dwYpos AS DWORD
	MEMBER  dwZpos AS DWORD
	MEMBER  dwRpos AS DWORD
	MEMBER  dwUpos AS DWORD
	MEMBER  dwVpos AS DWORD
	MEMBER  dwButtons AS DWORD
	MEMBER  dwButtonNumber AS DWORD
	MEMBER  dwPOV AS DWORD
	MEMBER  dwReserved1 AS DWORD
	MEMBER  dwReserved2 AS DWORD





VOSTRUCT _winMMIOINFO ALIGN 1

	MEMBER  dwFlags AS DWORD
	MEMBER  fccIOProc AS DWORD
	MEMBER  pIOProc AS PTR
	MEMBER  wErrorRet AS DWORD
	MEMBER  htask   AS PTR


	MEMBER  cchBuffer AS LONGINT
	MEMBER  pchBuffer AS PTR
	MEMBER  pchNext AS PTR
	MEMBER  pchEndRead AS PTR
	MEMBER  pchEndWrite AS PTR
	MEMBER  lBufOffset AS LONGINT


	MEMBER  lDiskOffset AS LONGINT
	MEMBER  DIM adwInfo[3] AS DWORD


	MEMBER  dwReserved1 AS DWORD
	MEMBER  dwReserved2 AS DWORD
	MEMBER  hmmio AS PTR


VOSTRUCT _winMMCKINFO ALIGN 1
	MEMBER  ckid AS DWORD
	MEMBER  cksize AS DWORD
	MEMBER  fccType AS DWORD
	MEMBER  dwDataOffset AS DWORD
	MEMBER  dwFlags AS DWORD


VOSTRUCT _winMCI_GENERIC_PARMS ALIGN 1
	MEMBER   dwCallback AS DWORD




VOSTRUCT _winMCI_OPEN_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  wDeviceID AS DWORD
	MEMBER  lpstrDeviceType AS PSZ
	MEMBER  lpstrElementName AS PSZ
	MEMBER  lpstrAlias AS PSZ





VOSTRUCT _winMCI_PLAY_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  dwFrom AS DWORD
	MEMBER  dwTo AS DWORD


VOSTRUCT _winMCI_SEEK_PARMS ALIGN 1
	MEMBER   dwCallback AS DWORD
	MEMBER   dwTo AS DWORD



VOSTRUCT _winMCI_STATUS_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  dwReturn AS DWORD
	MEMBER  dwItem AS DWORD
	MEMBER  dwTrack AS DWORD



VOSTRUCT _winMCI_INFO_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  lpstrReturn AS PSZ
	MEMBER  dwRetSize AS DWORD



VOSTRUCT _winMCI_GETDEVCAPS_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  dwReturn AS DWORD
	MEMBER  dwItem AS DWORD



VOSTRUCT _winMCI_SYSINFO_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  lpstrReturn AS PSZ
	MEMBER  dwRetSize AS DWORD
	MEMBER  dwNumber AS DWORD
	MEMBER  wDeviceType AS DWORD


VOSTRUCT _winMCI_SET_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  dwTimeFormat AS DWORD
	MEMBER  dwAudio AS DWORD


VOSTRUCT _winMCI_BREAK_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  nVirtKey AS INT
	MEMBER  hwndBreak AS PTR



VOSTRUCT _winMCI_SAVE_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  lpfilename AS PSZ




VOSTRUCT _winMCI_LOAD_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  lpfilename AS PSZ



VOSTRUCT _winMCI_RECORD_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  dwFrom AS DWORD
	MEMBER  dwTo AS DWORD





VOSTRUCT _winMCI_VD_PLAY_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  dwFrom AS DWORD
	MEMBER  dwTo AS DWORD
	MEMBER  dwSpeed AS DWORD


VOSTRUCT _winMCI_VD_STEP_PARMS ALIGN 1
	MEMBER dwCallback AS DWORD
	MEMBER  dwFrames AS DWORD



VOSTRUCT _winMCI_VD_ESCAPE_PARMS  ALIGN 1
	MEMBER   dwCallback AS DWORD
	MEMBER     lpstrCommand AS PSZ





VOSTRUCT _winMCI_WAVE_OPEN_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  wDeviceID AS DWORD
	MEMBER  lpstrDeviceType AS PSZ
	MEMBER  lpstrElementName AS PSZ
	MEMBER  lpstrAlias AS PSZ
	MEMBER  dwBufferSeconds AS DWORD









VOSTRUCT _winMCI_WAVE_DELETE_PARMS ALIGN 1
	MEMBER dwCallback AS DWORD
	MEMBER dwFrom AS DWORD
	MEMBER dwTo AS DWORD


VOSTRUCT _winMCI_WAVE_SET_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  dwTimeFormat AS DWORD
	MEMBER  dwAudio AS DWORD
	MEMBER  wInput AS DWORD
	MEMBER  wOutput AS DWORD
	MEMBER  wFormatTag AS WORD
	MEMBER  wReserved2 AS WORD
	MEMBER  nChannels AS WORD
	MEMBER  wReserved3 AS WORD
	MEMBER  nSamplesPerSec AS DWORD
	MEMBER  nAvgBytesPerSec AS DWORD
	MEMBER  nBlockAlign AS WORD
	MEMBER  wReserved4 AS WORD
	MEMBER  wBitsPerSample AS WORD
	MEMBER  wReserved5 AS WORD





VOSTRUCT _winMCI_SEQ_SET_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  dwTimeFormat AS DWORD
	MEMBER  dwAudio AS DWORD
	MEMBER  dwTempo AS DWORD
	MEMBER  dwPort AS DWORD
	MEMBER  dwSlave AS DWORD
	MEMBER  dwMaster AS DWORD
	MEMBER  dwOffset AS DWORD




VOSTRUCT _winMCI_ANIM_OPEN_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  wDeviceID AS DWORD
	MEMBER  lpstrDeviceType AS PSZ
	MEMBER  lpstrElementName AS PSZ
	MEMBER  lpstrAlias AS PSZ
	MEMBER  dwStyle AS DWORD
	MEMBER  hWndParent AS PTR




VOSTRUCT _winMCI_ANIM_PLAY_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  dwFrom AS DWORD
	MEMBER  dwTo AS DWORD
	MEMBER  dwSpeed AS DWORD


VOSTRUCT _winMCI_ANIM_STEP_PARMS  ALIGN 1
	MEMBER   dwCallback AS DWORD
	MEMBER  dwFrames AS DWORD



VOSTRUCT _winMCI_ANIM_WINDOW_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  hWnd AS PTR
	MEMBER  nCmdShow AS DWORD
	MEMBER  lpstrText AS PSZ



VOSTRUCT _winMCI_ANIM_RECT_PARMS ALIGN 1
	MEMBER   dwCallback AS DWORD
	MEMBER  rc IS _winRECT


VOSTRUCT _winMCI_ANIM_UPDATE_PARMS ALIGN 1
	MEMBER   dwCallback AS DWORD
	MEMBER  rc IS _winRECT
	MEMBER  hDC AS PTR




VOSTRUCT _winMCI_OVLY_OPEN_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  wDeviceID AS DWORD
	MEMBER  lpstrDeviceType AS PSZ
	MEMBER  lpstrElementName AS PSZ
	MEMBER  lpstrAlias AS PSZ
	MEMBER  dwStyle AS DWORD
	MEMBER  hWndParent AS PTR




VOSTRUCT _winMCI_OVLY_WINDOW_PARMS  ALIGN 1
	MEMBER dwCallback AS DWORD
	MEMBER hWnd AS PTR
	MEMBER nCmdShow AS DWORD
	MEMBER lpstrText AS PSZ


VOSTRUCT _winMCI_OVLY_RECT_PARMS  ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER rc IS _winRECT



VOSTRUCT _winMCI_OVLY_SAVE_PARMS  ALIGN 1
	MEMBER   dwCallback AS DWORD
	MEMBER  lpfilename AS PSZ
	MEMBER  rc IS _winRECT



VOSTRUCT _winMCI_OVLY_LOAD_PARMS ALIGN 1
	MEMBER  dwCallback AS DWORD
	MEMBER  lpfilename AS PSZ
	MEMBER  rc IS _winRECT








UNION u_winmmtime
	MEMBER ms AS DWORD
	MEMBER sample AS DWORD
	MEMBER cb AS DWORD
	MEMBER ticks AS DWORD
	MEMBER smpte IS smpte_win
	MEMBER midi IS midi_win

_DLL FUNC CloseDriver(hDriver AS PTR, lParam1 AS LONGINT, lParam2 AS LONGINT);
	AS DWORD PASCAL:WINMM.CloseDriver

_DLL FUNC OpenDriver(szDriverName AS PSZ, szSectionName AS PSZ, lParam2 AS LONG);
	AS PTR PASCAL:WINMM.OpenDriver


_DLL FUNC SendDriverMessage(hDriver AS PTR, message AS DWORD, lParam1 AS LONG, lParam2 AS LONG);
	AS DWORD PASCAL:WINMM.SendDriverMessage


_DLL FUNC DrvGetModuleHandle(hDriver AS PTR) AS PTR PASCAL:WINMM.DrvGetModuleHandle


_DLL FUNC GetDriverModuleHandle(hDriver AS PTR) AS PTR PASCAL:WINMM.GetDriverModuleHandle


_DLL FUNC DefDriverProc(dwDriverIdentifier AS DWORD, hdrvr AS PTR, uMsg AS DWORD, lParam1 AS LONGINT, lParam2 AS LONGINT);
	AS DWORD PASCAL:WINMM.DefDriverProc




_DLL FUNC sndPlaySound( pszSound AS PSZ, fuSound AS DWORD);
	AS LOGIC PASCAL:WINMM.sndPlaySoundA





FUNCTION sndAlias(ch0 AS BYTE, ch1 AS BYTE) AS DWORD
	LOCAL val1 AS DWORD

	val1 := DWORD(_CAST,ch1) <<8

	RETURN(_Or((SND_ALIAS_START + DWORD(_CAST, ch0)), val1))











_DLL FUNC PlaySound(pszSound AS PSZ, hmod AS PTR, fdwSound AS DWORD);
	AS LOGIC PASCAL:WINMM.PlaySoundA








_DLL FUNC waveOutGetNumDevs() AS DWORD PASCAL:WINMM.waveOutGetNumDevs



_DLL FUNC waveOutGetDevCaps(uDeviceId AS DWORD, pwoc  AS _winWAVEOUTCAPS,;
	cbwoc AS DWORD) AS DWORD PASCAL:WINMM.waveOutGetDevCaps




_DLL FUNC waveOutGetVolume(hwo AS PTR, pdwVolume AS DWORD PTR);
	AS DWORD PASCAL:WINMM.waveOutGetVolume


_DLL FUNC waveOutSetVolume(hwo AS PTR, dwVolume AS DWORD) AS DWORD PASCAL:WINMM.waveOutSetVolume



_DLL FUNC waveOutGetErrorText( mmrError AS DWORD, pszText AS PSZ,;
	cchText AS DWORD) AS DWORD PASCAL:winmm.waveOutGetErrorTextA




_DLL FUNC waveOutOpen(phwo AS PTR, uDeviceID AS DWORD, pwfx AS _winWAVEFORMATEX,;
	dwCallBack AS DWORD, dwIndtance AS DWORD, fdwOpen AS DWORD);
	AS DWORD PASCAL:WINMM.waveOutOpen


_DLL FUNC waveOutClose(hwo AS PTR) AS DWORD PASCAL:WINMM.waveOutClose


_DLL FUNC waveOutPrepareHeader( hwo AS PTR, pwh AS _winwavehdr, cbwh AS DWORD);
	AS DWORD PASCAL:WINMM.waveOutPrepareHeader


_DLL FUNC waveOutUnprepareHeader(hwo AS PTR, pwh AS _winWAVEHDR, cbwh AS DWORD);
	AS DWORD PASCAL:WINMM.waveOutUnprepareHeader


_DLL FUNC waveOutWrite(hwo AS PTR, pwh AS _winWAVEHDR, cbwh AS DWORD);
	AS DWORD PASCAL:WINMM.waveOutWrite

_DLL FUNC waveOutPause(hwo AS PTR) AS DWORD PASCAL:WINMM.waveOutPause


_DLL FUNC waveOutRestart(hwo AS PTR) AS DWORD PASCAL:WINMM.waveOutRestart


_DLL FUNC waveOutReset(hwo AS PTR) AS DWORD PASCAL:WINMM.waveOutReset


_DLL FUNC waveOutBreakLoop( hwo AS PTR) AS DWORD PASCAL:WINMM.waveOutBreakLoop


_DLL FUNC waveOutGetPosition( hwo AS PTR, pmmt AS _winMMTIME,  cbmmt AS DWORD);
	AS DWORD PASCAL:WINMM.waveOutGetPosition


_DLL FUNC waveOutGetPitch( hwo AS PTR, pdePitch AS DWORD PTR);
	AS DWORD PASCAL:WINMM.waveOutGetPitch


_DLL FUNC waveOutSetPitch( hwo AS PTR, dwPitch AS DWORD) AS DWORD PASCAL:WINMM.waveOutSetPitch


_DLL FUNC waveOutGetPlaybackRate(hwo AS PTR, pdwRate AS DWORD PTR);
	AS DWORD PASCAL:WINMM.waveOutGetPlaybackRate


_DLL FUNC waveOutSetPlaybackRate( hwo AS PTR, dwRate AS DWORD);
	AS DWORD PASCAL:WINMM.waveOutSetPlaybackRate


_DLL FUNC waveOutGetID(hwo AS PTR, pudeviceID AS DWORD PTR);
	AS DWORD PASCAL:WINMM.waveOutGetID



_DLL FUNC waveOutMessage(hwo AS PTR, uMsg AS DWORD, dw1 AS DWORD, dw2 AS DWORD);
	AS DWORD PASCAL:WINMM.waveOutMessage


_DLL FUNC waveInGetNumDevs() AS DWORD PASCAL:WINMM.waveInGetNumDevs



_DLL FUNC waveInGetDevCaps(uDeviceID AS DWORD, pwic AS _winWAVEINCAPS, cbwic AS DWORD);
	AS DWORD PASCAL:WINMM.waveInGetDevCapsA




_DLL FUNC waveInGetErrorTextA( mmrError AS DWORD, pszText AS PSZ, cchText AS DWORD);
	AS DWORD PASCAL:WINMM.waveInGetErrorTextA




_DLL FUNC waveInOpen (phwi AS PTR, uDeviceID AS DWORD, pwfx AS _winWAVEFORMATEX,;
	dwCallback AS DWORD, dwInstance AS DWORD, fdwOpen AS DWORD);
	AS DWORD PASCAL:WINMM.waveInOpen


_DLL FUNC waveInClose( hwi AS PTR) AS DWORD PASCAL:WINMM.waveInClose


_DLL FUNC waveInPrepareHeader(hwi AS PTR, pwh AS _winWAVEHDR, cbwh AS DWORD);
	AS DWORD PASCAL:WINMM.waveInPrepareHeader


_DLL FUNC waveInUnprepareHeader(hwi AS PTR, pwh AS _winWAVEHDR, cbwh AS DWORD);
	AS DWORD PASCAL:WINMM.waveInUnprepareHeader


_DLL FUNC waveInAddBuffer( hwi AS PTR, pwh AS _winWAVEHDR, cbwh AS DWORD);
	AS DWORD PASCAL:WINMM.waveInAddBuffer


_DLL FUNC waveInStart( hwi AS PTR) AS DWORD PASCAL:WINMM.waveInStart


_DLL FUNC waveInStop( hwi AS PTR) AS DWORD PASCAL:WINMM.waveInStop


_DLL FUNC waveInReset(HWI AS PTR) AS DWORD PASCAL:WINMM.waveInReset


_DLL FUNC waveInGetPosition( hwi AS PTR, pmmt AS _winMMTIME, cbmmt AS DWORD);
	AS DWORD PASCAL:WINMM.waveInGetPosition


_DLL FUNC waveInGetID(hwi AS PTR, puDeviceID AS DWORD PTR) AS DWORD PASCAL:WINMM.waveInGetID


_DLL FUNC waveInMessage( hwi AS PTR, uMsg AS DWORD, dw1 AS DWORD, dw2 AS DWORD);
	AS DWORD PASCAL:WINMM.waveInMessage







FUNCTION MEVT_EVENTTYPE(x AS DWORD) AS BYTE
	LOCAL val1 AS DWORD

	val1 := _And((x >> 24), 0xFF)
	RETURN (BYTE(_CAST, val1) )


_DLL FUNC midiOutGetNumDevs() AS DWORD PASCAL:WINMM.midiOutGetNumDevs


_DLL FUNC midiStreamOpen( phms AS PTR, puDeviceID AS DWORD PTR, cMidi AS DWORD, dwcallBack AS DWORD,;
	dwInstance AS DWORD, fdwOpen AS DWORD);
	AS DWORD PASCAL:WINMM.midiStreamOpen


_DLL FUNC midiStreamClose(HMS AS PTR) AS DWORD PASCAL:WINMM.midiStreamClose


_DLL FUNC midiStreamProperty(hms AS PTR, lppropdata AS BYTE PTR, dwProperty AS DWORD);
	AS DWORD PASCAL:WINMM.midiStreamProperty


_DLL FUNC midiStreamPosition( hms AS PTR, lpmmt AS _winMMTIME, cbmmt AS DWORD);
	AS DWORD PASCAL:WINMM.midiStreamPosition


_DLL FUNC midiStreamOut(hms AS PTR, pmh AS _winMIDIHDR, cbmh AS DWORD);
	AS DWORD PASCAL:WINMM.midiStreamOut


_DLL FUNC midiStreamPause( hms AS PTR) AS PTR PASCAL:WINMM.midiStreamPause


_DLL FUNC midiStreamRestart( hms AS PTR) AS DWORD PASCAL:WINMM.midiStreamRestart


_DLL FUNC midiStreamStop( hms AS PTR) AS DWORD PASCAL:WINMM.midiStreamStop



_DLL FUNC  midiConnect( hmi AS PTR, hmo AS PTR, pReserved AS PTR);
	AS DWORD PASCAL:WINMM.midiConnect


_DLL FUNC midiDisconnect(hmi AS PTR, hmo AS PTR, pReserved AS PTR);
	AS DWORD PASCAL:WINMM.midiDisconnect


_DLL FUNC midiOutGetDevCaps( uDeviceID AS DWORD, pmoc AS _winMIDIOUTCAPS, cbmoc AS DWORD);
	AS DWORD PASCAL:WINMM.midiOutGetDevCapsA




_DLL FUNC midiOutGetVolume( hmo AS PTR, pdwVolume AS DWORD PTR) AS DWORD PASCAL:WINMM.midiOutGetVolume


_DLL FUNC midiOutSetVolume(hmo AS PTR, dwVolume AS DWORD) AS DWORD PASCAL:WINMM.midiOutSetVolume



_DLL FUNC midiOutGetErrorText( mmrError AS DWORD, pszText AS PSZ, cchText AS DWORD);
	AS DWORD PASCAL:WINMM.midiOutGetErrorTextA




_DLL FUNC midiOutOpen(phmo AS PTR, uDeviceID AS DWORD, dwCallback AS DWORD,;
	dwInstance AS DWORD, fdwOpen AS DWORD);
	AS DWORD PASCAL:WINMM.midiOutOpen


_DLL FUNC midiOutClose( hmo AS PTR) AS DWORD PASCAL:WINMM.midiOutClose


_DLL FUNC midiOutPrepareHeader( hmo AS PTR, pmh AS _winMIDIHDR, cbmh AS DWORD);
	AS DWORD PASCAL:WINMM.midiOutPrepareHeader


_DLL FUNC midiOutUnprepareHeader( hmo AS PTR, pmh AS _winMIDIHDR, cbmh AS DWORD);
	AS DWORD PASCAL:WINMM.midiOutUnprepareHeader


_DLL FUNC midiOutShortMsg(hmo AS PTR, dwMsg AS DWORD) AS DWORD PASCAL:WINMM.midiOutShortMsg


_DLL FUNC midiOutLongMsg( hmo AS PTR, pmh AS _winMIDIHDR, cbmh AS DWORD);
	AS DWORD PASCAL:WINMM.midiOutLongMsg


_DLL FUNC midiOutReset(hmo AS PTR) AS DWORD PASCAL:WINMM.midiOutReset


_DLL FUNC midiOutCachePatches( hmo AS PTR, uBank AS DWORD, pwpa AS DWORD PTR, fuCache AS DWORD);
	AS DWORD PASCAL:WINMM.midiOutCachePatches


_DLL FUNC midiOutCacheDrumPatches(hmo AS PTR, iPatH AS DWORD, fuCache AS DWORD);
	AS DWORD PASCAL:WINMM.midiOutCacheDrumPatches


_DLL FUNC midiOutGetID(hmo AS PTR, puDeviceID AS DWORD PTR) AS DWORD PASCAL:WINMM.midiOutGetID



_DLL FUNC midiOutMessage(hmo AS PTR, uMsg AS DWORD, dw1 AS DWORD, dw2 AS DWORD);
	AS DWORD PASCAL:WINMM.midiOutMessage



_DLL FUNC midiInGetNumDevs() AS DWORD PASCAL:WINMM.midiInGetNumDevs


_DLL FUNC midiInGetDevCaps(uDecviceID AS DWORD, pmic AS _winMIDIINCAPS, cbmic AS DWORD);
	AS DWORD PASCAL:WINMM.midiInGetDevCapsA


_DLL FUNC midiInGetErrorText(mmrError AS DWORD, pszText AS PSZ, tcchText AS DWORD);
	AS DWORD PASCAL:WINMM.midiInGetErrorTextA





_DLL  FUNC MidiInOpen (phmi AS  PTR, uDeviceId AS DWORD, dwCallback AS DWORD,  dwInstance AS DWORD,;
	fdwOpen  AS DWORD) AS DWORD PASCAL:WINMM.midiInOpen


_DLL FUNC midiInClose( hmi AS PTR) AS DWORD PASCAL:WINMM.midiInClose



_DLL FUNC midiInUnprepareHeader(hmi AS PTR, pmh AS _winMIDIHDR, cbmh AS DWORD);
	AS DWORD PASCAL:WINMM.midiInUnprepareHeader


_DLL FUNC midiInAddBuffer( hmi AS PTR, pmh AS _winMIDIHDR, cbmh AS DWORD);
	AS DWORD PASCAL:WINMM.midiInAddBuffer


_DLL FUNC midiInStart( hmi AS PTR) AS DWORD PASCAL:WINMM.midiInStart


_DLL FUNC midiInStop( hmi AS PTR) AS DWORD PASCAL:WINMM.midiInStop


_DLL FUNC midiInReset( hmi AS PTR) AS PTR PASCAL:WINMM.midiInReset


_DLL FUNC midiInGetID( hmi AS PTR, puDeviceID AS DWORD PTR) AS DWORD PASCAL:WINMM.midiInGetID


_DLL FUNC midiInMessage(hmi AS PTR, uMsg AS DWORD, dw1 AS DWORD, dw2 AS DWORD);
	AS DWORD PASCAL:WINMM.midiInMessage







_DLL FUNC auxGetNumDevs() AS DWORD PASCAL:WINMM.auxGetNumDevs


_DLL FUNC auxGetDevCaps( uDeviceID AS DWORD, pac AS _winAUXCAPS, cbac AS DWORD);
	AS DWORD PASCAL:WINMM.auxGetDevCapsA




_DLL FUNC auxSetVolume( uDeviceID AS DWORD, dwVolume AS DWORD);
	AS DWORD PASCAL:WINMM.auxSetVolume


_DLL FUNC auxGetVolume( uDeviceID AS DWORD, pdwVolume AS DWORD PTR);
	AS DWORD PASCAL:WINMM.auxGetVolume


_DLL FUNC auxOutMessage( uDeviceID AS DWORD, uMsg AS DWORD, dw1 AS DWORD, dw2 AS DWORD);
	AS DWORD PASCAL:WINMM.auxOutMessage







_DLL FUNC mixerGetNumDevs() AS DWORD PASCAL:WINMM.mixerGetNumDevs


_DLL FUNC mixerGetDevCaps(uMxId AS DWORD, pmxcaps AS _winMIXERCAPS, cbmxcaps AS DWORD);
	AS DWORD PASCAL:WINMM.mixerGetDevCapsA




_DLL FUNC mixerOpen( phmx AS PTR, uMxId AS DWORD, dwCallback AS DWORD,  fdwOpen AS DWORD);
	AS DWORD PASCAL:WINMM.mixerOpen

_DLL FUNC mixerClose( hmx AS PTR) AS DWORD PASCAL:WINMM.mixerClose


_DLL FUNC mixerMessage(hmx AS PTR, uMsg AS DWORD, dwParam1 AS DWORD,  dwParam2 AS DWORD);
	AS DWORD PASCAL:WINMM.mixerMessage



_DLL FUNC mixerGetLineInfo( hmxobj AS PTR, pmxl AS _winMIXERLINE, fdwInfo AS DWORD);
	AS DWORD PASCAL:WINMM.mixerGetLineInfoA



_DLL FUNC mixerGetID(hmxobj AS PTR, puMxId AS PTR, fdwId AS DWORD);
	AS DWORD PASCAL:WINMM.mixerGetID




UNION Metrics
	MEMBER cSteps AS DWORD
	MEMBER cbCustomData AS DWORD
	MEMBER DIM dwReserved[6] AS DWORD

_DLL FUNC mixerGetLineControls( hmxobj AS PTR,  pmxlc AS _winMIXERLINECONTROLS, fdwControls AS DWORD);
	AS DWORD PASCAL:WINMM.mixerGetLineControlsA



_DLL FUNC mixerGetControlDetails(hmxobj AS PTR, pmxcd AS _winMIXERCONTROLDETAILS, fdwDetails AS DWORD);
	AS DWORD PASCAL:WINMM.mixerGetControlDetailsA



_DLL FUNC mixerSetControlDetails(hmxobj AS PTR,  pmxcd AS _winMIXERCONTROLDETAILS, fdwDetails AS DWORD);
	AS DWORD PASCAL:WINMM.mixerSetControlDetails

_DLL FUNC timeGetSystemTime( pmmt AS _winMMTIME, cbmmt AS DWORD);
	AS DWORD PASCAL:WINMM.timeGetSystemTime


_DLL FUNC timeGetTime() AS DWORD PASCAL:WINMM.timeGetTime


_DLL FUNC timeSetEvent( uDelay AS DWORD, uResolution AS DWORD, fptc AS PTR,;
	dwUser AS DWORD, fuEvent AS DWORD) AS DWORD PASCAL:WINMM.timeSetEvent


_DLL FUNC timeKillEvent( uTimerId AS DWORD) AS DWORD PASCAL:WINMM.timeKillEvent


_DLL FUNC timeGetDevCaps(pts AS _winTIMECAPS, cbtc AS DWORD) AS DWORD PASCAL:WINMM.timeGetDevCaps

_DLL FUNC timeBeginPeriod(uPeriod AS DWORD) AS DWORD PASCAL:WINMM.timeBeginPeriod

_DLL FUNC timeEndPeriod( iPeriod AS DWORD) AS DWORD PASCAL:WINMM.timeEndPeriod





_DLL FUNC joyGetNumDevs () AS DWORD  PASCAL:WINMM.joyGetNumDevs


_DLL FUNC joyGetDevCaps(uJoyID AS DWORD, pjc AS _winJOYCAPS, cbjc AS DWORD);
	AS DWORD PASCAL:WINMM.joyGetDevCapsA




_DLL FUNC joyGetPos(uJoyID AS DWORD, pji AS _winJOYINFO) AS DWORD PASCAL:WINMM.joyGetPos

_DLL FUNC joyGetPosEx(uJoyID AS DWORD, pji AS _winJOYINFOEX) AS DWORD PASCAL:WINMM.joyGetPosEx


_DLL FUNC joyGetThreshold(uJoyID AS DWORD, puThreshold AS DWORD PTR);
	AS DWORD PASCAL:WINMM.joyGetThreshold


_DLL FUNC joyReleaseCapture(hJoyID AS DWORD) AS DWORD PASCAL:WINMM.joyReleaseCapture


_DLL FUNC joySetCapture(hwnd AS PTR, uJoyID AS DWORD, uPeriod AS DWORD);
	AS DWORD PASCAL:WINMM.joySetCapture


_DLL FUNC joySetThreshold(uJoyID AS DWORD, uThreshold AS DWORD);
	AS DWORD PASCAL:WINMM.joySetThreshold

FUNCTION mmioFOURCC(ch0 AS BYTE, ch1 AS BYTE, ch2 AS BYTE, ch3 AS BYTE) AS DWORD
	LOCAL retVal AS DWORD
	retVal:= MAKEFOURCC(ch0, ch1, ch2, ch3)
	RETURN retval



_DLL FUNC mmioStringToFOURCC( sz AS PSZ, uFlags AS DWORD) AS DWORD PASCAL:WINMM.mmioStringToFOURCCA



_DLL FUNC mmioInstallIOProc(fccIOProc AS DWORD, pIOProc AS PTR, dwFlags AS DWORD);
	AS PTR PASCAL:WINMM.mmioInstallIOProcA


_DLL FUNC mmioOpen( pszFileName AS PSZ, pmmioinfo AS _winMMIOINFO, fdwOpen AS DWORD);
	AS PTR PASCAL:WINMM.mmioOpenA



_DLL FUNC mmioRename(pszFileName AS PSZ, pszNewFileName AS PSZ,  fdwRename AS DWORD);
	AS DWORD PASCAL:WINMM.mmioRenameA



_DLL FUNC mmioClose( hmmio AS PTR, fuclose AS DWORD) AS DWORD PASCAL:WINMM.mmioClose


_DLL FUNC mmioRead( hmmio AS PTR, pcH AS PTR, cch AS LONG) AS LONG PASCAL:WINMM.mmioRead


_DLL FUNC mmioWrite( hmmio AS PTR, pch AS PTR, cch AS LONG) AS LONG PASCAL:WINMM.mmioWrite

_DLL FUNC mmioSeek( hmmio AS PTR, lOffset AS LONG, iOrigin AS INT);
	AS LONG PASCAL:WINMM.mmioSeek


_DLL FUNC mmioGetInfo(hmmio AS PTR, pmmioinfo AS _winMMIOINFO, fuInfo AS DWORD);
	AS DWORD PASCAL:WINMM.mmioGetInfo


_DLL FUNC mmioSetInfo(hmmio AS PTR, pmmioinfo AS _winMMIOINFO,  fuInfo AS DWORD);
	AS DWORD PASCAL:WINMM.mmioSetInfo


_DLL FUNC mmioSetBuffer( hmmio AS PTR, pchBuffer AS PSZ, cchBuffer AS LONG,;
	fuBuffer AS DWORD) AS DWORD PASCAL:WINMM.mmioSetBuffer


_DLL FUNC mmioFlush( hmmio AS PTR, fuFlush AS DWORD) AS DWORD PASCAL:WINMM.mmioFlush


_DLL FUNC mmioAdvance(hmmio AS PTR, pmmioinfo AS _winMMIOINFO, fuAdvance AS DWORD);
	AS DWORD PASCAL:WINMM.mmioAdvance

_DLL FUNC mmioSendMessage(hmmio AS PTR, uMsg AS DWORD, lParam1 AS LONG,;
	lParam2 AS LONG) AS DWORD PASCAL:WINMM.mmioSendMessage


_DLL FUNC mmioDescend(hmmio AS PTR, pmmcki AS _winMMCKINFO, pmmchiParent AS _winMMCKINFO,;
	fuDescend AS DWORD) AS DWORD PASCAL:WINMM.mmioDescend


_DLL FUNC mmioAscend( hmmio AS PTR, pmmcki AS _winMMCKINFO, fuAscend AS DWORD);
	AS DWORD PASCAL:WINMM.mmioAscend


_DLL FUNC mmioCreateChunk(hmmio AS PTR, pmmcki AS _winMMCKINFO, fuCreate AS DWORD);
	AS DWORD PASCAL:WINMM.mmioCreateChunk










_DLL FUNC mciSendCommand( mciId AS DWORD, uMsg AS DWORD, dwParam1 AS DWORD, dwParam2 AS DWORD);
	AS DWORD PASCAL:WINMM.mciSendCommandA


_DLL FUNC mciSendString(lpstrCommand AS PSZ, lpstrReturnString AS PSZ, uReturnLenght AS DWORD, hwndCallback AS PTR);
	AS DWORD PASCAL:WINMM.mciSendStringA



_DLL FUNC mciGetDeviceID( pszDevice AS PSZ) AS DWORD PASCAL:WINMM.mciGetDeviceIDA


// this is nowhere to find
//_DLL FUNC mciGetDeviceIDFromElementID(dwElementID AS DWORD, lpstrType AS PSZ);
//                                      AS DWORD PASCAL:MMSYSTEM.mciGetDeviceIDFromElementIDA



_DLL FUNC mciGetErrorString(mcierr AS DWORD, pszText AS PSZ, cchText AS DWORD);
	AS LOGIC PASCAL:WINMM.mciGetErrorStringA





_DLL FUNC mciSetYieldProc(mciId AS DWORD, fpYieldProc AS PTR,;
	dwYieldData AS DWORD) AS LOGIC PASCAL:WINMM.mciSetYieldProc



_DLL FUNC mciGetCreatorTask( mciId AS DWORD) AS PTR PASCAL:WINMM.mciGetCreatorTask


_DLL FUNC mciGetYieldProc( mciId AS DWORD, pdwYieldData AS DWORD PTR);
	AS PTR  PASCAL:WINMM.mciGetYieldProc




FUNCTION MCI_MSF_MINUTE(msf)  AS BYTE
	RETURN(BYTE(_CAST, msf))


FUNCTION  MCI_MSF_SECOND(msf AS DWORD) AS BYTE
	RETURN BYTE(_CAST, (msf >>8))


FUNCTION MCI_MSF_FRAME(msf AS DWORD) AS BYTE
	RETURN (BYTE(_CAST, (msf)>>16))


FUNCTION MCI_MAKE_MSF(m AS INT, s AS INT, f AS INT) AS DWORD
	RETURN DWORD(_CAST, _Or(m, (s<<8), (f<<16)))

FUNCTION MCI_TMSF_TRACK(tmsf) AS BYTE
	RETURN (BYTE( _CAST, tmsf))

FUNCTION MCI_TMSF_MINUTE(tmsf AS DWORD)  AS BYTE
	RETURN (BYTE (_CAST, (tmsf>>8)))

FUNCTION MCI_TMSF_SECOND(tmsf AS DWORD)  AS BYTE
	RETURN BYTE(_CAST, (tmsf>>16))


FUNCTION MCI_TMSF_FRAME(tmsf AS DWORD) AS BYTE
	RETURN BYTE(_CAST, (tmsf>>24))

FUNCTION MCI_MAKE_TMSF(t AS INT, m AS INT, s AS INT, f AS INT) AS DWORD
	RETURN DWORD(_CAST, _Or(t, (m<<8), (s<<16), (f<<24)))

FUNCTION MCI_HMS_HOUR(hms) AS BYTE
	RETURN (BYTE( _CAST, hms))

FUNCTION MCI_HMS_MINUTE(hms)  AS BYTE
    EnForceNumeric(@hms)
    RETURN (BYTE) ( (WORD(hms) >> 8) )



FUNCTION MCI_HMS_SECOND(hms AS DWORD) AS BYTE
	RETURN BYTE(_CAST, (hms >>16))

FUNCTION MCI_MAKE_HMS(h AS INT, m AS INT, s AS INT) AS DWORD
	RETURN DWORD(_CAST, _Or(h, (m<<8), (s<<16)))

FUNCTION MAKEFOURCC(ch0 AS BYTE, ch1 AS BYTE, ch2 AS BYTE, ch3 AS BYTE) AS DWORD STRICT


	LOCAL val0  AS DWORD
	LOCAL val1  AS DWORD
	LOCAL val2  AS DWORD
	LOCAL val3  AS DWORD
	LOCAL nRet  AS DWORD

	val0 := ch0
	val1 := DWORD(_CAST, BYTE(ch1)) << 8
	val2 := DWORD(_CAST, BYTE(ch2)) <<16
	val3 := DWORD(_CAST, BYTE(ch3)) <<24

	nRet :=_OR(_Or(_Or(val0,val1),val2),val3)

	RETURN nRet


FUNCTION MEVT_EVENTPARM(x AS DWORD) AS DWORD
	//PP-030924 correct 51422
	RETURN (_And(LONGINT(_CAST,x), 0x00FFFFF))

FUNCTION DIBINDEX(n AS WORD) AS LONGINT
	//PP-030924 correct 51422
	RETURN MakeLong((n),0x10FF)



#region defines
DEFINE MAXPNAMELEN            := 32
DEFINE MAXERRORLENGTH         := 256
DEFINE MAX_JOYSTICKOEMVXDNAME := 260
DEFINE MM_MICROSOFT            := 1
DEFINE MM_MIDI_MAPPER          := 1
DEFINE MM_WAVE_MAPPER          := 2
DEFINE MM_SNDBLST_MIDIOUT      := 3
DEFINE MM_SNDBLST_MIDIIN       := 4
DEFINE MM_SNDBLST_SYNTH        := 5
DEFINE MM_SNDBLST_WAVEOUT      := 6
DEFINE MM_SNDBLST_WAVEIN       := 7
DEFINE MM_ADLIB                := 9
DEFINE MM_MPU401_MIDIOUT       := 10
DEFINE MM_MPU401_MIDIIN        := 11
DEFINE MM_PC_JOYSTICK          := 12
DEFINE TIME_MS         := 0x0001
DEFINE TIME_SAMPLES    := 0x0002
DEFINE TIME_BYTES      := 0x0004
DEFINE TIME_SMPTE      := 0x0008
DEFINE TIME_MIDI       := 0x0010
DEFINE TIME_TICKS      := 0x0020
//  UH 04/23/1997
//  FUNC MAKEFOURCC(ch0, ch1, ch2, ch3) AS DWORD
DEFINE MM_JOY1MOVE         := 0x3A0
DEFINE MM_JOY2MOVE         := 0x3A1
DEFINE MM_JOY1ZMOVE        := 0x3A2
DEFINE MM_JOY2ZMOVE        := 0x3A3
DEFINE MM_JOY1BUTTONDOWN   := 0x3B5
DEFINE MM_JOY2BUTTONDOWN   := 0x3B6
DEFINE MM_JOY1BUTTONUP     := 0x3B7
DEFINE MM_JOY2BUTTONUP     := 0x3B8
DEFINE MM_MCINOTIFY        := 0x3B9
DEFINE MM_WOM_OPEN         := 0x3BB
DEFINE MM_WOM_CLOSE        := 0x3BC
DEFINE MM_WOM_DONE         := 0x3BD
DEFINE MM_WIM_OPEN         := 0x3BE
DEFINE MM_WIM_CLOSE        := 0x3BF
DEFINE MM_WIM_DATA         := 0x3C0
DEFINE MM_MIM_OPEN         := 0x3C1
DEFINE MM_MIM_CLOSE        := 0x3C2
DEFINE MM_MIM_DATA         := 0x3C3
DEFINE MM_MIM_LONGDATA     := 0x3C4
DEFINE MM_MIM_ERROR        := 0x3C5
DEFINE MM_MIM_LONGERROR    := 0x3C6
DEFINE MM_MOM_OPEN         := 0x3C7
DEFINE MM_MOM_CLOSE        := 0x3C8
DEFINE MM_MOM_DONE         := 0x3C9
DEFINE MM_DRVM_OPEN       := 0x3D0
DEFINE MM_DRVM_CLOSE      := 0x3D1
DEFINE MM_DRVM_DATA       := 0x3D2
DEFINE MM_DRVM_ERROR      := 0x3D3
DEFINE MM_STREAM_OPEN     := 0x3D4
DEFINE MM_STREAM_CLOSE      := 0x3D5
DEFINE MM_STREAM_DONE     := 0x3D6
DEFINE MM_STREAM_ERROR      := 0x3D7
DEFINE MM_MOM_POSITIONCB   := 0x3CA
DEFINE MM_MCISIGNAL        := 0x3CB
DEFINE MM_MIM_MOREDATA      := 0x3CC
DEFINE MM_MIXM_LINE_CHANGE     := 0x3D0
DEFINE MM_MIXM_CONTROL_CHANGE  := 0x3D1
DEFINE MMSYSERR_BASE          := 0
DEFINE WAVERR_BASE            := 32
DEFINE MIDIERR_BASE           := 64
DEFINE TIMERR_BASE            := 96
DEFINE JOYERR_BASE            := 160
DEFINE MCIERR_BASE            := 256
DEFINE MIXERR_BASE            := 1024
DEFINE MCI_STRING_OFFSET      := 512
DEFINE MCI_VD_OFFSET          := 1024
DEFINE MCI_CD_OFFSET          := 1088
DEFINE MCI_WAVE_OFFSET        := 1152
DEFINE MCI_SEQ_OFFSET         := 1216
DEFINE MMSYSERR_NOERROR      := 0
DEFINE MMSYSERR_ERROR        := (MMSYSERR_BASE + 1)
DEFINE MMSYSERR_BADDEVICEID  := (MMSYSERR_BASE + 2)
DEFINE MMSYSERR_NOTENABLED   := (MMSYSERR_BASE + 3)
DEFINE MMSYSERR_ALLOCATED    := (MMSYSERR_BASE + 4)
DEFINE MMSYSERR_INVALHANDLE  := (MMSYSERR_BASE + 5)
DEFINE MMSYSERR_NODRIVER     := (MMSYSERR_BASE + 6)
DEFINE MMSYSERR_NOMEM        := (MMSYSERR_BASE + 7)
DEFINE MMSYSERR_NOTSUPPORTED := (MMSYSERR_BASE + 8)
DEFINE MMSYSERR_BADERRNUM    := (MMSYSERR_BASE + 9)
DEFINE MMSYSERR_INVALFLAG    := (MMSYSERR_BASE + 10)
DEFINE MMSYSERR_INVALPARAM   := (MMSYSERR_BASE + 11)
DEFINE MMSYSERR_HANDLEBUSY   := (MMSYSERR_BASE + 12)
DEFINE MMSYSERR_INVALIDALIAS := (MMSYSERR_BASE + 13)
DEFINE MMSYSERR_BADDB        := (MMSYSERR_BASE + 14)
DEFINE MMSYSERR_KEYNOTFOUND  := (MMSYSERR_BASE + 15)
DEFINE MMSYSERR_READERROR    := (MMSYSERR_BASE + 16)
DEFINE MMSYSERR_WRITEERROR   := (MMSYSERR_BASE + 17)
DEFINE MMSYSERR_DELETEERROR  := (MMSYSERR_BASE + 18)
DEFINE MMSYSERR_VALNOTFOUND  := (MMSYSERR_BASE + 19)
DEFINE MMSYSERR_NODRIVERCB   := (MMSYSERR_BASE + 20)
DEFINE MMSYSERR_LASTERROR    := (MMSYSERR_BASE + 20)
DEFINE DRV_LOAD                := 0x0001
DEFINE DRV_ENABLE              := 0x0002
DEFINE DRV_OPEN                := 0x0003
DEFINE DRV_CLOSE               := 0x0004
DEFINE DRV_DISABLE             := 0x0005
DEFINE DRV_FREE                := 0x0006
DEFINE DRV_CONFIGURE           := 0x0007
DEFINE DRV_QUERYCONFIGURE      := 0x0008
DEFINE DRV_INSTALL             := 0x0009
DEFINE DRV_REMOVE              := 0x000A
DEFINE DRV_EXITSESSION         := 0x000B
DEFINE DRV_POWER               := 0x000F
DEFINE DRV_RESERVED            := 0x0800
DEFINE DRV_USER                := 0x4000
DEFINE DRVCNF_CANCEL           := 0x0000
DEFINE DRVCNF_OK               := 0x0001
DEFINE DRVCNF_RESTART          := 0x0002
DEFINE DRV_CANCEL             := DRVCNF_CANCEL
DEFINE DRV_OK                 := DRVCNF_OK
DEFINE DRV_RESTART            := DRVCNF_RESTART
DEFINE DRV_MCI_FIRST         := DRV_RESERVED
DEFINE DRV_MCI_LAST          := (DRV_RESERVED + 0xFFF)
DEFINE CALLBACK_TYPEMASK   := 0x00070000L
DEFINE CALLBACK_NULL       := 0x00000000L
DEFINE CALLBACK_WINDOW     := 0x00010000L
DEFINE CALLBACK_TASK       := 0x00020000L
DEFINE CALLBACK_FUNCTION   := 0x00030000L
DEFINE CALLBACK_THREAD     := (CALLBACK_TASK)
DEFINE CALLBACK_EVENT      := 0x00050000L
DEFINE SND_SYNC            := 0x0000
DEFINE SND_ASYNC           := 0x0001
DEFINE SND_NODEFAULT       := 0x0002
DEFINE SND_MEMORY          := 0x0004
DEFINE SND_LOOP            := 0x0008
DEFINE SND_NOSTOP          := 0x0010
DEFINE SND_NOWAIT    := 0x00002000L
DEFINE SND_ALIAS           := 0x00010000L
DEFINE SND_ALIAS_ID    := 0x00110000L
DEFINE SND_FILENAME        := 0x00020000L
DEFINE SND_RESOURCE        := 0x00040004L
DEFINE SND_PURGE           := 0x0040
DEFINE SND_APPLICATION     := 0x0080
DEFINE SND_ALIAS_START     := 0
DEFINE WAVERR_BADFORMAT      := (WAVERR_BASE + 0)
DEFINE WAVERR_STILLPLAYING   := (WAVERR_BASE + 1)
DEFINE WAVERR_UNPREPARED     := (WAVERR_BASE + 2)
DEFINE WAVERR_SYNC           := (WAVERR_BASE + 3)
DEFINE WAVERR_LASTERROR      := (WAVERR_BASE + 3)
DEFINE WOM_OPEN        := MM_WOM_OPEN
DEFINE WOM_CLOSE       := MM_WOM_CLOSE
DEFINE WOM_DONE        := MM_WOM_DONE
DEFINE WIM_OPEN        := MM_WIM_OPEN
DEFINE WIM_CLOSE       := MM_WIM_CLOSE
DEFINE WIM_DATA        := MM_WIM_DATA
DEFINE WAVE_MAPPER     :=-1
DEFINE  WAVE_FORMAT_QUERY         := 0x0001
DEFINE  WAVE_ALLOWSYNC            := 0x0002
DEFINE  WAVE_MAPPED               := 0x0004
DEFINE WHDR_DONE       := 0x00000001
DEFINE WHDR_PREPARED   := 0x00000002
DEFINE WHDR_BEGINLOOP  := 0x00000004
DEFINE WHDR_ENDLOOP    := 0x00000008
DEFINE WHDR_INQUEUE    := 0x00000010
DEFINE WAVECAPS_PITCH          := 0x0001
DEFINE WAVECAPS_PLAYBACKRATE   := 0x0002
DEFINE WAVECAPS_VOLUME         := 0x0004
DEFINE WAVECAPS_LRVOLUME       := 0x0008
DEFINE WAVECAPS_SYNC           := 0x0010
DEFINE WAVECAPS_SAMPLEACCURATE := 0x0020
DEFINE WAVECAPS_DIRECTSOUND    := 0x0040
DEFINE WAVE_INVALIDFORMAT     := 0x00000000
DEFINE WAVE_FORMAT_1M08       := 0x00000001
DEFINE WAVE_FORMAT_1S08       := 0x00000002
DEFINE WAVE_FORMAT_1M16       := 0x00000004
DEFINE WAVE_FORMAT_1S16       := 0x00000008
DEFINE WAVE_FORMAT_2M08       := 0x00000010
DEFINE WAVE_FORMAT_2S08       := 0x00000020
DEFINE WAVE_FORMAT_2M16       := 0x00000040
DEFINE WAVE_FORMAT_2S16       := 0x00000080
DEFINE WAVE_FORMAT_4M08       := 0x00000100
DEFINE WAVE_FORMAT_4S08       := 0x00000200
DEFINE WAVE_FORMAT_4M16       := 0x00000400
DEFINE WAVE_FORMAT_4S16       := 0x00000800
DEFINE WAVE_FORMAT_PCM     := 1
DEFINE MIDIERR_UNPREPARED    := (MIDIERR_BASE + 0)
DEFINE MIDIERR_STILLPLAYING  := (MIDIERR_BASE + 1)
DEFINE MIDIERR_NOMAP         := (MIDIERR_BASE + 2)
DEFINE MIDIERR_NOTREADY      := (MIDIERR_BASE + 3)
DEFINE MIDIERR_NODEVICE      := (MIDIERR_BASE + 4)
DEFINE MIDIERR_INVALIDSETUP  := (MIDIERR_BASE + 5)
DEFINE MIDIERR_BADOPENMODE   := (MIDIERR_BASE + 6)
DEFINE MIDIERR_DONT_CONTINUE := (MIDIERR_BASE + 7)
DEFINE MIDIERR_LASTERROR     := (MIDIERR_BASE + 7)
DEFINE MIDIPATCHSIZE   := 128
DEFINE MIM_OPEN        := MM_MIM_OPEN
DEFINE MIM_CLOSE       := MM_MIM_CLOSE
DEFINE MIM_DATA        := MM_MIM_DATA
DEFINE MIM_LONGDATA    := MM_MIM_LONGDATA
DEFINE MIM_ERROR       := MM_MIM_ERROR
DEFINE MIM_LONGERROR   := MM_MIM_LONGERROR
DEFINE MOM_OPEN        := MM_MOM_OPEN
DEFINE MOM_CLOSE       := MM_MOM_CLOSE
DEFINE MOM_DONE        := MM_MOM_DONE
DEFINE MIM_MOREDATA      := MM_MIM_MOREDATA
DEFINE MOM_POSITIONCB    := MM_MOM_POSITIONCB
DEFINE MIDIMAPPER     :=-1
DEFINE MIDI_MAPPER    := -1
DEFINE MIDI_IO_STATUS      := 0x00000020L
DEFINE MIDI_CACHE_ALL      := 1
DEFINE MIDI_CACHE_BESTFIT  := 2
DEFINE MIDI_CACHE_QUERY    := 3
DEFINE MIDI_UNCACHE        := 4
DEFINE MOD_MIDIPORT    := 1
DEFINE MOD_SYNTH       := 2
DEFINE MOD_SQSYNTH     := 3
DEFINE MOD_FMSYNTH     := 4
DEFINE MOD_MAPPER      := 5
DEFINE MIDICAPS_VOLUME          := 0x0001
DEFINE MIDICAPS_LRVOLUME        := 0x0002
DEFINE MIDICAPS_CACHE           := 0x0004
DEFINE MIDICAPS_STREAM          := 0x0008
DEFINE MHDR_DONE       := 0x00000001
DEFINE MHDR_PREPARED   := 0x00000002
DEFINE MHDR_INQUEUE    := 0x00000004
DEFINE MHDR_ISSTRM     := 0x00000008
DEFINE MEVT_F_SHORT        := 0x00000000L
DEFINE MEVT_F_LONG         := 0x80000000L
DEFINE MEVT_F_CALLBACK     := 0x40000000L
DEFINE MEVT_SHORTMSG       := BYTE(_CAST, 0x00)
DEFINE MEVT_TEMPO          := BYTE(_CAST, 0x01)
DEFINE MEVT_NOP            := BYTE(_CAST, 0x02)
DEFINE MEVT_LONGMSG       := BYTE(_CAST, 0x80)
DEFINE MEVT_COMMENT       := BYTE(_CAST, 0x82)
DEFINE MEVT_VERSION       := BYTE(_CAST, 0x84)
DEFINE MIDISTRM_ERROR      := (-2)
DEFINE MIDIPROP_SET        := 0x80000000L
DEFINE MIDIPROP_GET        := 0x40000000L
DEFINE MIDIPROP_TIMEDIV    := 0x00000001L
DEFINE MIDIPROP_TEMPO      := 0x00000002L
DEFINE AUX_MAPPER    := -1
DEFINE AUXCAPS_CDAUDIO    := 1
DEFINE AUXCAPS_AUXIN      := 2
DEFINE AUXCAPS_VOLUME          := 0x0001
DEFINE AUXCAPS_LRVOLUME        := 0x0002
DEFINE MIXER_SHORT_NAME_CHARS   := 16
DEFINE MIXER_LONG_NAME_CHARS    := 64
DEFINE MIXERR_INVALLINE         :=    (MIXERR_BASE + 0)
DEFINE MIXERR_INVALCONTROL      :=    (MIXERR_BASE + 1)
DEFINE MIXERR_INVALVALUE        :=    (MIXERR_BASE + 2)
DEFINE MIXERR_LASTERROR         :=    (MIXERR_BASE + 2)
DEFINE MIXER_OBJECTF_HANDLE    := 0x80000000L
DEFINE MIXER_OBJECTF_MIXER     := 0x00000000L
DEFINE MIXER_OBJECTF_HMIXER    := 0x80000000L
DEFINE MIXER_OBJECTF_WAVEOUT   := 0x10000000L
DEFINE MIXER_OBJECTF_HWAVEOUT  := 0x90000000L
DEFINE MIXER_OBJECTF_WAVEIN    := 0x20000000L
DEFINE MIXER_OBJECTF_HWAVEIN   := 0xA0000000L
DEFINE MIXER_OBJECTF_MIDIOUT   := 0x30000000L
DEFINE MIXER_OBJECTF_HMIDIOUT  := 0xB0000000L
DEFINE MIXER_OBJECTF_MIDIIN    := 0x40000000L
DEFINE MIXER_OBJECTF_HMIDIIN   := 0xC0000000L
DEFINE MIXER_OBJECTF_AUX       := 0x50000000L
DEFINE MIXERLINE_LINEF_ACTIVE              := 0x00000001L
DEFINE MIXERLINE_LINEF_DISCONNECTED        := 0x00008000L
DEFINE MIXERLINE_LINEF_SOURCE              := 0x80000000L
DEFINE MIXERLINE_COMPONENTTYPE_DST_FIRST       := 0x00000000L
DEFINE MIXERLINE_COMPONENTTYPE_DST_UNDEFINED   := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 0)
DEFINE MIXERLINE_COMPONENTTYPE_DST_DIGITAL     := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 1)
DEFINE MIXERLINE_COMPONENTTYPE_DST_LINE        := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 2)
DEFINE MIXERLINE_COMPONENTTYPE_DST_MONITOR     := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 3)
DEFINE MIXERLINE_COMPONENTTYPE_DST_SPEAKERS    := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 4)
DEFINE MIXERLINE_COMPONENTTYPE_DST_HEADPHONES  := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 5)
DEFINE MIXERLINE_COMPONENTTYPE_DST_TELEPHONE   := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 6)
DEFINE MIXERLINE_COMPONENTTYPE_DST_WAVEIN      := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 7)
DEFINE MIXERLINE_COMPONENTTYPE_DST_VOICEIN     := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 8)
DEFINE MIXERLINE_COMPONENTTYPE_DST_LAST        := (MIXERLINE_COMPONENTTYPE_DST_FIRST + 8)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_FIRST       := 0x00001000L
DEFINE MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED   := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 0)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_DIGITAL     := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 1)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_LINE        := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 2)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE  := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 3)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 4)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 5)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE   := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 6)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER   := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 7)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT     := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 8)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY   := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 9)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_ANALOG      := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10)
DEFINE MIXERLINE_COMPONENTTYPE_SRC_LAST        := (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10)
DEFINE MIXERLINE_TARGETTYPE_UNDEFINED      := 0
DEFINE MIXERLINE_TARGETTYPE_WAVEOUT        := 1
DEFINE MIXERLINE_TARGETTYPE_WAVEIN         := 2
DEFINE MIXERLINE_TARGETTYPE_MIDIOUT        := 3
DEFINE MIXERLINE_TARGETTYPE_MIDIIN         := 4
DEFINE MIXERLINE_TARGETTYPE_AUX            := 5
DEFINE MIXER_GETLINEINFOF_DESTINATION      := 0x00000000L
DEFINE MIXER_GETLINEINFOF_SOURCE           := 0x00000001L
DEFINE MIXER_GETLINEINFOF_LINEID           := 0x00000002L
DEFINE MIXER_GETLINEINFOF_COMPONENTTYPE    := 0x00000003L
DEFINE MIXER_GETLINEINFOF_TARGETTYPE       := 0x00000004L
DEFINE MIXER_GETLINEINFOF_QUERYMASK        := 0x0000000FL
DEFINE MIXERCONTROL_CONTROLF_UNIFORM   := 0x00000001L
DEFINE MIXERCONTROL_CONTROLF_MULTIPLE  := 0x00000002L
DEFINE MIXERCONTROL_CONTROLF_DISABLED  := 0x80000000L
DEFINE MIXERCONTROL_CT_CLASS_MASK          := 0xF0000000L
DEFINE MIXERCONTROL_CT_CLASS_CUSTOM        := 0x00000000L
DEFINE MIXERCONTROL_CT_CLASS_METER         := 0x10000000L
DEFINE MIXERCONTROL_CT_CLASS_SWITCH        := 0x20000000L
DEFINE MIXERCONTROL_CT_CLASS_NUMBER        := 0x30000000L
DEFINE MIXERCONTROL_CT_CLASS_SLIDER        := 0x40000000L
DEFINE MIXERCONTROL_CT_CLASS_FADER         := 0x50000000L
DEFINE MIXERCONTROL_CT_CLASS_TIME          := 0x60000000L
DEFINE MIXERCONTROL_CT_CLASS_LIST          := 0x70000000L
DEFINE MIXERCONTROL_CT_SUBCLASS_MASK       := 0x0F000000L
DEFINE MIXERCONTROL_CT_SC_SWITCH_BOOLEAN   := 0x00000000L
DEFINE MIXERCONTROL_CT_SC_SWITCH_BUTTON    := 0x01000000L
DEFINE MIXERCONTROL_CT_SC_METER_POLLED     := 0x00000000L
DEFINE MIXERCONTROL_CT_SC_TIME_MICROSECS   := 0x00000000L
DEFINE MIXERCONTROL_CT_SC_TIME_MILLISECS   := 0x01000000L
DEFINE MIXERCONTROL_CT_SC_LIST_SINGLE      := 0x00000000L
DEFINE MIXERCONTROL_CT_SC_LIST_MULTIPLE    := 0x01000000L
DEFINE MIXERCONTROL_CT_UNITS_MASK          := 0x00FF0000L
DEFINE MIXERCONTROL_CT_UNITS_CUSTOM        := 0x00000000L
DEFINE MIXERCONTROL_CT_UNITS_BOOLEAN       := 0x00010000L
DEFINE MIXERCONTROL_CT_UNITS_SIGNED        := 0x00020000L
DEFINE MIXERCONTROL_CT_UNITS_UNSIGNED      := 0x00030000L
DEFINE MIXERCONTROL_CT_UNITS_DECIBELS      := 0x00040000L
DEFINE MIXERCONTROL_CT_UNITS_PERCENT       := 0x00050000L
DEFINE MIXERCONTROL_CONTROLTYPE_CUSTOM         := 0x00000000L
DEFINE MIXERCONTROL_CONTROLTYPE_BOOLEANMETER   := 0x10010000L
DEFINE MIXERCONTROL_CONTROLTYPE_SIGNEDMETER    := 0x10020000L
DEFINE MIXERCONTROL_CONTROLTYPE_PEAKMETER      := (MIXERCONTROL_CONTROLTYPE_SIGNEDMETER + 1)
DEFINE MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER  := 0x10030000L
DEFINE MIXERCONTROL_CONTROLTYPE_BOOLEAN        := 0x20010000L
DEFINE MIXERCONTROL_CONTROLTYPE_ONOFF          := (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 1)
DEFINE MIXERCONTROL_CONTROLTYPE_MUTE           := (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 2)
DEFINE MIXERCONTROL_CONTROLTYPE_MONO           := (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 3)
DEFINE MIXERCONTROL_CONTROLTYPE_LOUDNESS       := (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 4)
DEFINE MIXERCONTROL_CONTROLTYPE_STEREOENH      := (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 5)
DEFINE MIXERCONTROL_CONTROLTYPE_BUTTON         := 0x21010000L
DEFINE MIXERCONTROL_CONTROLTYPE_DECIBELS       := 0x30040000L
DEFINE MIXERCONTROL_CONTROLTYPE_SIGNED         := 0x30020000L
DEFINE MIXERCONTROL_CONTROLTYPE_UNSIGNED       := 0x30030000L
DEFINE MIXERCONTROL_CONTROLTYPE_PERCENT        := 0x30050000L
DEFINE MIXERCONTROL_CONTROLTYPE_SLIDER         := 0x40020000L
DEFINE MIXERCONTROL_CONTROLTYPE_PAN            := (MIXERCONTROL_CONTROLTYPE_SLIDER + 1)
DEFINE MIXERCONTROL_CONTROLTYPE_QSOUNDPAN      := (MIXERCONTROL_CONTROLTYPE_SLIDER + 2)
DEFINE MIXERCONTROL_CONTROLTYPE_FADER          := 0x50030000L
DEFINE MIXERCONTROL_CONTROLTYPE_VOLUME         := (MIXERCONTROL_CONTROLTYPE_FADER + 1)
DEFINE MIXERCONTROL_CONTROLTYPE_BASS           := (MIXERCONTROL_CONTROLTYPE_FADER + 2)
DEFINE MIXERCONTROL_CONTROLTYPE_TREBLE         := (MIXERCONTROL_CONTROLTYPE_FADER + 3)
DEFINE MIXERCONTROL_CONTROLTYPE_EQUALIZER      := (MIXERCONTROL_CONTROLTYPE_FADER + 4)
DEFINE MIXERCONTROL_CONTROLTYPE_SINGLESELECT   := 0x70010000L
DEFINE MIXERCONTROL_CONTROLTYPE_MUX            := (MIXERCONTROL_CONTROLTYPE_SINGLESELECT + 1)
DEFINE MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT := 0x71010000L
DEFINE MIXERCONTROL_CONTROLTYPE_MIXER          := (MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT + 1)
DEFINE MIXERCONTROL_CONTROLTYPE_MICROTIME      := 0x60030000L
DEFINE MIXERCONTROL_CONTROLTYPE_MILLITIME      := 0x61030000L
DEFINE MIXER_GETLINECONTROLSF_ALL          := 0x00000000L
DEFINE MIXER_GETLINECONTROLSF_ONEBYID      := 0x00000001L
DEFINE MIXER_GETLINECONTROLSF_ONEBYTYPE    := 0x00000002L
DEFINE MIXER_GETLINECONTROLSF_QUERYMASK    := 0x0000000FL
DEFINE MIXER_GETCONTROLDETAILSF_VALUE      := 0x00000000L
DEFINE MIXER_GETCONTROLDETAILSF_LISTTEXT   := 0x00000001L
DEFINE MIXER_GETCONTROLDETAILSF_QUERYMASK  := 0x0000000FL
DEFINE MIXER_SETCONTROLDETAILSF_VALUE      := 0x00000000L
DEFINE MIXER_SETCONTROLDETAILSF_CUSTOM     := 0x00000001L
DEFINE MIXER_SETCONTROLDETAILSF_QUERYMASK  := 0x0000000FL
DEFINE TIMERR_NOERROR        := (0)
DEFINE TIMERR_NOCANDO        := (TIMERR_BASE+1)
DEFINE TIMERR_STRUCT         := (TIMERR_BASE+33)
DEFINE TIME_ONESHOT    := 0x0000
DEFINE TIME_PERIODIC   := 0x0001
DEFINE TIME_CALLBACK_FUNCTION      := 0x0000
DEFINE TIME_CALLBACK_EVENT_SET     := 0x0010
DEFINE TIME_CALLBACK_EVENT_PULSE   := 0x0020
DEFINE JOYERR_NOERROR        := (0)
DEFINE JOYERR_PARMS          := (JOYERR_BASE+5)
DEFINE JOYERR_NOCANDO        := (JOYERR_BASE+6)
DEFINE JOYERR_UNPLUGGED      := (JOYERR_BASE+7)
DEFINE JOY_BUTTON1         := 0x0001
DEFINE JOY_BUTTON2         := 0x0002
DEFINE JOY_BUTTON3         := 0x0004
DEFINE JOY_BUTTON4         := 0x0008
DEFINE JOY_BUTTON1CHG      := 0x0100
DEFINE JOY_BUTTON2CHG      := 0x0200
DEFINE JOY_BUTTON3CHG      := 0x0400
DEFINE JOY_BUTTON4CHG      := 0x0800
DEFINE JOY_BUTTON5         := 0x00000010L
DEFINE JOY_BUTTON6         := 0x00000020L
DEFINE JOY_BUTTON7         := 0x00000040L
DEFINE JOY_BUTTON8         := 0x00000080L
DEFINE JOY_BUTTON9         := 0x00000100L
DEFINE JOY_BUTTON10        := 0x00000200L
DEFINE JOY_BUTTON11        := 0x00000400L
DEFINE JOY_BUTTON12        := 0x00000800L
DEFINE JOY_BUTTON13        := 0x00001000L
DEFINE JOY_BUTTON14        := 0x00002000L
DEFINE JOY_BUTTON15        := 0x00004000L
DEFINE JOY_BUTTON16        := 0x00008000L
DEFINE JOY_BUTTON17        := 0x00010000L
DEFINE JOY_BUTTON18        := 0x00020000L
DEFINE JOY_BUTTON19        := 0x00040000L
DEFINE JOY_BUTTON20        := 0x00080000L
DEFINE JOY_BUTTON21        := 0x00100000L
DEFINE JOY_BUTTON22        := 0x00200000L
DEFINE JOY_BUTTON23        := 0x00400000L
DEFINE JOY_BUTTON24        := 0x00800000L
DEFINE JOY_BUTTON25        := 0x01000000L
DEFINE JOY_BUTTON26        := 0x02000000L
DEFINE JOY_BUTTON27        := 0x04000000L
DEFINE JOY_BUTTON28        := 0x08000000L
DEFINE JOY_BUTTON29        := 0x10000000L
DEFINE JOY_BUTTON30        := 0x20000000L
DEFINE JOY_BUTTON31        := 0x40000000L
DEFINE JOY_BUTTON32        := 0x80000000L
DEFINE JOY_POVCENTERED     := -1
DEFINE JOY_POVFORWARD    := 0
DEFINE JOY_POVRIGHT    := 9000
DEFINE JOY_POVBACKWARD     := 18000
DEFINE JOY_POVLEFT     := 27000
DEFINE JOY_RETURNX    := 0X00000001L
DEFINE JOY_RETURNY    := 0X00000002L
DEFINE JOY_RETURNZ    := 0X00000004L
DEFINE JOY_RETURNR    := 0X00000008L
DEFINE JOY_RETURNU    := 0X00000010L
DEFINE JOY_RETURNV    := 0X00000020L
DEFINE JOY_RETURNPOV    := 0X00000040L
DEFINE JOY_RETURNBUTTONS  := 0X00000080L
DEFINE JOY_RETURNRAWDATA  := 0X00000100L
DEFINE JOY_RETURNPOVCTS         := 0X00000200L
DEFINE JOY_RETURNCENTERED := 0X00000400L
DEFINE JOY_USEDEADZONE    := 0X00000800L
DEFINE JOY_RETURNALL    := 0X000000FFL
DEFINE JOY_CAL_READALWAYS := 0X00010000L
DEFINE JOY_CAL_READXYONLY := 0X00020000L
DEFINE JOY_CAL_READ3    := 0X00040000L
DEFINE JOY_CAL_READ4    := 0X00080000L
DEFINE JOY_CAL_READXONLY  := 0X00100000L
DEFINE JOY_CAL_READYONLY  := 0X00200000L
DEFINE JOY_CAL_READ5    := 0X00400000L
DEFINE JOY_CAL_READ6    := 0X00800000L
DEFINE JOY_CAL_READZONLY  := 0X01000000L
DEFINE JOY_CAL_READRONLY  := 0X02000000L
DEFINE JOY_CAL_READUONLY  := 0X04000000L
DEFINE JOY_CAL_READVONLY  := 0X08000000L
DEFINE JOYSTICKID1         := 0
DEFINE JOYSTICKID2         := 1
DEFINE JOYCAPS_HASZ   := 0x0001
DEFINE JOYCAPS_HASR   := 0x0002
DEFINE JOYCAPS_HASU   := 0x0004
DEFINE JOYCAPS_HASV   := 0x0008
DEFINE JOYCAPS_HASPOV   := 0x0010
DEFINE JOYCAPS_POV4DIR    := 0x0020
DEFINE JOYCAPS_POVCTS   := 0x0040
DEFINE MMIOERR_BASE                := 256
DEFINE MMIOERR_FILENOTFOUND        := (MMIOERR_BASE + 1)
DEFINE MMIOERR_OUTOFMEMORY         := (MMIOERR_BASE + 2)
DEFINE MMIOERR_CANNOTOPEN          := (MMIOERR_BASE + 3)
DEFINE MMIOERR_CANNOTCLOSE         := (MMIOERR_BASE + 4)
DEFINE MMIOERR_CANNOTREAD          := (MMIOERR_BASE + 5)
DEFINE MMIOERR_CANNOTWRITE         := (MMIOERR_BASE + 6)
DEFINE MMIOERR_CANNOTSEEK          := (MMIOERR_BASE + 7)
DEFINE MMIOERR_CANNOTEXPAND        := (MMIOERR_BASE + 8)
DEFINE MMIOERR_CHUNKNOTFOUND       := (MMIOERR_BASE + 9)
DEFINE MMIOERR_UNBUFFERED          := (MMIOERR_BASE + 10)
DEFINE MMIOERR_PATHNOTFOUND        := (MMIOERR_BASE + 11)
DEFINE MMIOERR_ACCESSDENIED        := (MMIOERR_BASE + 12)
DEFINE MMIOERR_SHARINGVIOLATION    := (MMIOERR_BASE + 13)
DEFINE MMIOERR_NETWORKERROR        := (MMIOERR_BASE + 14)
DEFINE MMIOERR_TOOMANYOPENFILES    := (MMIOERR_BASE + 15)
DEFINE MMIOERR_INVALIDFILE         := (MMIOERR_BASE + 16)
DEFINE CFSEPCHAR       := '+'
DEFINE MMIO_RWMODE     := 0x00000003
DEFINE MMIO_SHAREMODE  := 0x00000070
DEFINE MMIO_CREATE     := 0x00001000
DEFINE MMIO_PARSE      := 0x00000100
DEFINE MMIO_DELETE     := 0x00000200
DEFINE MMIO_EXIST      := 0x00004000
DEFINE MMIO_ALLOCBUF   := 0x00010000
DEFINE MMIO_GETTEMP    := 0x00020000
DEFINE MMIO_DIRTY      := 0x10000000
DEFINE MMIO_READ       := 0x00000000
DEFINE MMIO_WRITE      := 0x00000001
DEFINE MMIO_READWRITE  := 0x00000002
DEFINE MMIO_COMPAT     := 0x00000000
DEFINE MMIO_EXCLUSIVE  := 0x00000010
DEFINE MMIO_DENYWRITE  := 0x00000020
DEFINE MMIO_DENYREAD   := 0x00000030
DEFINE MMIO_DENYNONE   := 0x00000040
DEFINE MMIO_FHOPEN         := 0x0010
DEFINE MMIO_EMPTYBUF       := 0x0010
DEFINE MMIO_TOUPPER        := 0x0010
DEFINE MMIO_INSTALLPROC    := 0x00010000
DEFINE MMIO_GLOBALPROC     := 0x10000000
DEFINE MMIO_REMOVEPROC     := 0x00020000
DEFINE MMIO_UNICODEPROC    := 0x01000000
DEFINE MMIO_FINDPROC       := 0x00040000
DEFINE MMIO_FINDCHUNK      := 0x0010
DEFINE MMIO_FINDRIFF       := 0x0020
DEFINE MMIO_FINDLIST       := 0x0040
DEFINE MMIO_CREATERIFF     := 0x0020
DEFINE MMIO_CREATELIST     := 0x0040
DEFINE MMIOM_READ          := MMIO_READ
DEFINE MMIOM_WRITE         := MMIO_WRITE
DEFINE MMIOM_SEEK          := 2
DEFINE MMIOM_OPEN          := 3
DEFINE MMIOM_CLOSE         := 4
DEFINE MMIOM_WRITEFLUSH    := 5
DEFINE MMIOM_RENAME        := 6
DEFINE MMIOM_USER          := 0x8000
DEFINE FOURCC_RIFF := DWORD(_CAST, 0x46464952)
DEFINE FOURCC_LIST := DWORD(_CAST, 0x5453494C)
DEFINE FOURCC_DOS  := DWORD(_CAST, 0x20534F44)
DEFINE FOURCC_MEM  := DWORD(_CAST, 0x204D454D)
DEFINE SEEK_SET        := 0
DEFINE SEEK_CUR        := 1
DEFINE SEEK_END        := 2
DEFINE MMIO_DEFAULTBUFFER      := 8192
DEFINE MCIERR_INVALID_DEVICE_ID        := (MCIERR_BASE + 1)
DEFINE MCIERR_UNRECOGNIZED_KEYWORD     := (MCIERR_BASE + 3)
DEFINE MCIERR_UNRECOGNIZED_COMMAND     := (MCIERR_BASE + 5)
DEFINE MCIERR_HARDWARE                 := (MCIERR_BASE + 6)
DEFINE MCIERR_INVALID_DEVICE_NAME      := (MCIERR_BASE + 7)
DEFINE MCIERR_OUT_OF_MEMORY            := (MCIERR_BASE + 8)
DEFINE MCIERR_DEVICE_OPEN              := (MCIERR_BASE + 9)
DEFINE MCIERR_CANNOT_LOAD_DRIVER       := (MCIERR_BASE + 10)
DEFINE MCIERR_MISSING_COMMAND_STRING   := (MCIERR_BASE + 11)
DEFINE MCIERR_PARAM_OVERFLOW           := (MCIERR_BASE + 12)
DEFINE MCIERR_MISSING_STRING_ARGUMENT  := (MCIERR_BASE + 13)
DEFINE MCIERR_BAD_INTEGER              := (MCIERR_BASE + 14)
DEFINE MCIERR_PARSER_INTERNAL          := (MCIERR_BASE + 15)
DEFINE MCIERR_DRIVER_INTERNAL          := (MCIERR_BASE + 16)
DEFINE MCIERR_MISSING_PARAMETER        := (MCIERR_BASE + 17)
DEFINE MCIERR_UNSUPPORTED_FUNCTION     := (MCIERR_BASE + 18)
DEFINE MCIERR_FILE_NOT_FOUND           := (MCIERR_BASE + 19)
DEFINE MCIERR_DEVICE_NOT_READY         := (MCIERR_BASE + 20)
DEFINE MCIERR_INTERNAL                 := (MCIERR_BASE + 21)
DEFINE MCIERR_DRIVER                   := (MCIERR_BASE + 22)
DEFINE MCIERR_CANNOT_USE_ALL           := (MCIERR_BASE + 23)
DEFINE MCIERR_MULTIPLE                 := (MCIERR_BASE + 24)
DEFINE MCIERR_EXTENSION_NOT_FOUND      := (MCIERR_BASE + 25)
DEFINE MCIERR_OUTOFRANGE               := (MCIERR_BASE + 26)
DEFINE MCIERR_FLAGS_NOT_COMPATIBLE     := (MCIERR_BASE + 28)
DEFINE MCIERR_FILE_NOT_SAVED           := (MCIERR_BASE + 30)
DEFINE MCIERR_DEVICE_TYPE_REQUIRED     := (MCIERR_BASE + 31)
DEFINE MCIERR_DEVICE_LOCKED            := (MCIERR_BASE + 32)
DEFINE MCIERR_DUPLICATE_ALIAS          := (MCIERR_BASE + 33)
DEFINE MCIERR_BAD_CONSTANT             := (MCIERR_BASE + 34)
DEFINE MCIERR_MUST_USE_SHAREABLE       := (MCIERR_BASE + 35)
DEFINE MCIERR_MISSING_DEVICE_NAME      := (MCIERR_BASE + 36)
DEFINE MCIERR_BAD_TIME_FORMAT          := (MCIERR_BASE + 37)
DEFINE MCIERR_NO_CLOSING_QUOTE         := (MCIERR_BASE + 38)
DEFINE MCIERR_DUPLICATE_FLAGS          := (MCIERR_BASE + 39)
DEFINE MCIERR_INVALID_FILE             := (MCIERR_BASE + 40)
DEFINE MCIERR_NULL_PARAMETER_BLOCK     := (MCIERR_BASE + 41)
DEFINE MCIERR_UNNAMED_RESOURCE         := (MCIERR_BASE + 42)
DEFINE MCIERR_NEW_REQUIRES_ALIAS       := (MCIERR_BASE + 43)
DEFINE MCIERR_NOTIFY_ON_AUTO_OPEN      := (MCIERR_BASE + 44)
DEFINE MCIERR_NO_ELEMENT_ALLOWED       := (MCIERR_BASE + 45)
DEFINE MCIERR_NONAPPLICABLE_FUNCTION   := (MCIERR_BASE + 46)
DEFINE MCIERR_ILLEGAL_FOR_AUTO_OPEN    := (MCIERR_BASE + 47)
DEFINE MCIERR_FILENAME_REQUIRED        := (MCIERR_BASE + 48)
DEFINE MCIERR_EXTRA_CHARACTERS         := (MCIERR_BASE + 49)
DEFINE MCIERR_DEVICE_NOT_INSTALLED     := (MCIERR_BASE + 50)
DEFINE MCIERR_GET_CD                   := (MCIERR_BASE + 51)
DEFINE MCIERR_SET_CD                   := (MCIERR_BASE + 52)
DEFINE MCIERR_SET_DRIVE                := (MCIERR_BASE + 53)
DEFINE MCIERR_DEVICE_LENGTH            := (MCIERR_BASE + 54)
DEFINE MCIERR_DEVICE_ORD_LENGTH        := (MCIERR_BASE + 55)
DEFINE MCIERR_NO_INTEGER               := (MCIERR_BASE + 56)
DEFINE MCIERR_WAVE_OUTPUTSINUSE        := (MCIERR_BASE + 64)
DEFINE MCIERR_WAVE_SETOUTPUTINUSE      := (MCIERR_BASE + 65)
DEFINE MCIERR_WAVE_INPUTSINUSE         := (MCIERR_BASE + 66)
DEFINE MCIERR_WAVE_SETINPUTINUSE       := (MCIERR_BASE + 67)
DEFINE MCIERR_WAVE_OUTPUTUNSPECIFIED   := (MCIERR_BASE + 68)
DEFINE MCIERR_WAVE_INPUTUNSPECIFIED    := (MCIERR_BASE + 69)
DEFINE MCIERR_WAVE_OUTPUTSUNSUITABLE   := (MCIERR_BASE + 70)
DEFINE MCIERR_WAVE_SETOUTPUTUNSUITABLE := (MCIERR_BASE + 71)
DEFINE MCIERR_WAVE_INPUTSUNSUITABLE    := (MCIERR_BASE + 72)
DEFINE MCIERR_WAVE_SETINPUTUNSUITABLE  := (MCIERR_BASE + 73)
DEFINE MCIERR_SEQ_DIV_INCOMPATIBLE     := (MCIERR_BASE + 80)
DEFINE MCIERR_SEQ_PORT_INUSE           := (MCIERR_BASE + 81)
DEFINE MCIERR_SEQ_PORT_NONEXISTENT     := (MCIERR_BASE + 82)
DEFINE MCIERR_SEQ_PORT_MAPNODEVICE     := (MCIERR_BASE + 83)
DEFINE MCIERR_SEQ_PORT_MISCERROR       := (MCIERR_BASE + 84)
DEFINE MCIERR_SEQ_TIMER                := (MCIERR_BASE + 85)
DEFINE MCIERR_SEQ_PORTUNSPECIFIED      := (MCIERR_BASE + 86)
DEFINE MCIERR_SEQ_NOMIDIPRESENT        := (MCIERR_BASE + 87)
DEFINE MCIERR_NO_WINDOW                := (MCIERR_BASE + 90)
DEFINE MCIERR_CREATEWINDOW             := (MCIERR_BASE + 91)
DEFINE MCIERR_FILE_READ                := (MCIERR_BASE + 92)
DEFINE MCIERR_FILE_WRITE               := (MCIERR_BASE + 93)
DEFINE MCIERR_NO_IDENTITY              := (MCIERR_BASE + 94)
DEFINE MCIERR_CUSTOM_DRIVER_BASE       := (MCIERR_BASE + 256)
DEFINE MCI_FIRST                       := DRV_MCI_FIRST
DEFINE MCI_OPEN                        := 0x0803
DEFINE MCI_CLOSE                       := 0x0804
DEFINE MCI_ESCAPE                      := 0x0805
DEFINE MCI_PLAY                        := 0x0806
DEFINE MCI_SEEK                        := 0x0807
DEFINE MCI_STOP                        := 0x0808
DEFINE MCI_PAUSE                       := 0x0809
DEFINE MCI_INFO                        := 0x080A
DEFINE MCI_GETDEVCAPS                  := 0x080B
DEFINE MCI_SPIN                        := 0x080C
DEFINE MCI_SET                         := 0x080D
DEFINE MCI_STEP                        := 0x080E
DEFINE MCI_RECORD                      := 0x080F
DEFINE MCI_SYSINFO                     := 0x0810
DEFINE MCI_BREAK                       := 0x0811
DEFINE MCI_SAVE                        := 0x0813
DEFINE MCI_STATUS                      := 0x0814
DEFINE MCI_CUE                         := 0x0830
DEFINE MCI_REALIZE                     := 0x0840
DEFINE MCI_WINDOW                      := 0x0841
DEFINE MCI_PUT                         := 0x0842
DEFINE MCI_WHERE                       := 0x0843
DEFINE MCI_FREEZE                      := 0x0844
DEFINE MCI_UNFREEZE                    := 0x0845
DEFINE MCI_LOAD                        := 0x0850
DEFINE MCI_CUT                         := 0x0851
DEFINE MCI_COPY                        := 0x0852
DEFINE MCI_PASTE                       := 0x0853
DEFINE MCI_UPDATE                      := 0x0854
DEFINE MCI_RESUME                      := 0x0855
DEFINE MCI_DELETE                      := 0x0856
DEFINE MCI_USER_MESSAGES               := (DRV_MCI_FIRST + 0x400)
DEFINE MCI_LAST                        := 0x0FFF
DEFINE MCI_ALL_DEVICE_ID               := -1
DEFINE MCI_DEVTYPE_VCR                 := 513
DEFINE MCI_DEVTYPE_VIDEODISC           := 514
DEFINE MCI_DEVTYPE_OVERLAY             := 515
DEFINE MCI_DEVTYPE_CD_AUDIO            := 516
DEFINE MCI_DEVTYPE_DAT                 := 517
DEFINE MCI_DEVTYPE_SCANNER             := 518
DEFINE MCI_DEVTYPE_ANIMATION           := 519
DEFINE MCI_DEVTYPE_DIGITAL_VIDEO       := 520
DEFINE MCI_DEVTYPE_OTHER               := 521
DEFINE MCI_DEVTYPE_WAVEFORM_AUDIO      := 522
DEFINE MCI_DEVTYPE_SEQUENCER           := 523
DEFINE MCI_DEVTYPE_FIRST               := MCI_DEVTYPE_VCR
DEFINE MCI_DEVTYPE_LAST                := MCI_DEVTYPE_SEQUENCER
DEFINE MCI_DEVTYPE_FIRST_USER          := 0x1000
DEFINE MCI_MODE_NOT_READY              := (MCI_STRING_OFFSET + 12)
DEFINE MCI_MODE_STOP                   := (MCI_STRING_OFFSET + 13)
DEFINE MCI_MODE_PLAY                   := (MCI_STRING_OFFSET + 14)
DEFINE MCI_MODE_RECORD                 := (MCI_STRING_OFFSET + 15)
DEFINE MCI_MODE_SEEK                   := (MCI_STRING_OFFSET + 16)
DEFINE MCI_MODE_PAUSE                  := (MCI_STRING_OFFSET + 17)
DEFINE MCI_MODE_OPEN                   := (MCI_STRING_OFFSET + 18)
DEFINE MCI_FORMAT_MILLISECONDS         := 0
DEFINE MCI_FORMAT_HMS                  := 1
DEFINE MCI_FORMAT_MSF                  := 2
DEFINE MCI_FORMAT_FRAMES               := 3
DEFINE MCI_FORMAT_SMPTE_24             := 4
DEFINE MCI_FORMAT_SMPTE_25             := 5
DEFINE MCI_FORMAT_SMPTE_30             := 6
DEFINE MCI_FORMAT_SMPTE_30DROP         := 7
DEFINE MCI_FORMAT_BYTES                := 8
DEFINE MCI_FORMAT_SAMPLES              := 9
DEFINE MCI_FORMAT_TMSF                 := 10
DEFINE MCI_NOTIFY_SUCCESSFUL           := 0x0001
DEFINE MCI_NOTIFY_SUPERSEDED           := 0x0002
DEFINE MCI_NOTIFY_ABORTED              := 0x0004
DEFINE MCI_NOTIFY_FAILURE              := 0x0008
DEFINE MCI_NOTIFY                      := 0x00000001L
DEFINE MCI_WAIT                        := 0x00000002L
DEFINE MCI_FROM                        := 0x00000004L
DEFINE MCI_TO                          := 0x00000008L
DEFINE MCI_TRACK                       := 0x00000010L
DEFINE MCI_OPEN_SHAREABLE              := 0x00000100L
DEFINE MCI_OPEN_ELEMENT                := 0x00000200L
DEFINE MCI_OPEN_ALIAS                  := 0x00000400L
DEFINE MCI_OPEN_ELEMENT_ID             := 0x00000800L
DEFINE MCI_OPEN_TYPE_ID                := 0x00001000L
DEFINE MCI_OPEN_TYPE                   := 0x00002000L
DEFINE MCI_SEEK_TO_START               := 0x00000100L
DEFINE MCI_SEEK_TO_END                 := 0x00000200L
DEFINE MCI_STATUS_ITEM                 := 0x00000100L
DEFINE MCI_STATUS_START                := 0x00000200L
DEFINE MCI_STATUS_LENGTH               := 0x00000001L
DEFINE MCI_STATUS_POSITION             := 0x00000002L
DEFINE MCI_STATUS_NUMBER_OF_TRACKS     := 0x00000003L
DEFINE MCI_STATUS_MODE                 := 0x00000004L
DEFINE MCI_STATUS_MEDIA_PRESENT        := 0x00000005L
DEFINE MCI_STATUS_TIME_FORMAT          := 0x00000006L
DEFINE MCI_STATUS_READY                := 0x00000007L
DEFINE MCI_STATUS_CURRENT_TRACK        := 0x00000008L
DEFINE MCI_INFO_PRODUCT                := 0x00000100L
DEFINE MCI_INFO_FILE                   := 0x00000200L
DEFINE MCI_INFO_MEDIA_UPC              := 0x00000400L
DEFINE MCI_INFO_MEDIA_IDENTITY         := 0x00000800L
DEFINE MCI_INFO_NAME                   := 0x00001000L
DEFINE MCI_INFO_COPYRIGHT              := 0x00002000L
DEFINE MCI_GETDEVCAPS_ITEM             := 0x00000100L
DEFINE MCI_GETDEVCAPS_CAN_RECORD       := 0x00000001L
DEFINE MCI_GETDEVCAPS_HAS_AUDIO        := 0x00000002L
DEFINE MCI_GETDEVCAPS_HAS_VIDEO        := 0x00000003L
DEFINE MCI_GETDEVCAPS_DEVICE_TYPE      := 0x00000004L
DEFINE MCI_GETDEVCAPS_USES_FILES       := 0x00000005L
DEFINE MCI_GETDEVCAPS_COMPOUND_DEVICE  := 0x00000006L
DEFINE MCI_GETDEVCAPS_CAN_EJECT        := 0x00000007L
DEFINE MCI_GETDEVCAPS_CAN_PLAY         := 0x00000008L
DEFINE MCI_GETDEVCAPS_CAN_SAVE         := 0x00000009L
DEFINE MCI_SYSINFO_QUANTITY            := 0x00000100L
DEFINE MCI_SYSINFO_OPEN                := 0x00000200L
DEFINE MCI_SYSINFO_NAME                := 0x00000400L
DEFINE MCI_SYSINFO_INSTALLNAME         := 0x00000800L
DEFINE MCI_SET_DOOR_OPEN               := 0x00000100L
DEFINE MCI_SET_DOOR_CLOSED             := 0x00000200L
DEFINE MCI_SET_TIME_FORMAT             := 0x00000400L
DEFINE MCI_SET_AUDIO                   := 0x00000800L
DEFINE MCI_SET_VIDEO                   := 0x00001000L
DEFINE MCI_SET_ON                      := 0x00002000L
DEFINE MCI_SET_OFF                     := 0x00004000L
DEFINE MCI_SET_AUDIO_ALL               := 0x00000000L
DEFINE MCI_SET_AUDIO_LEFT              := 0x00000001L
DEFINE MCI_SET_AUDIO_RIGHT             := 0x00000002L
DEFINE MCI_BREAK_KEY                   := 0x00000100L
DEFINE MCI_BREAK_HWND                  := 0x00000200L
DEFINE MCI_BREAK_OFF                   := 0x00000400L
DEFINE MCI_RECORD_INSERT               := 0x00000100L
DEFINE MCI_RECORD_OVERWRITE            := 0x00000200L
DEFINE MCI_SAVE_FILE                   := 0x00000100L
DEFINE MCI_LOAD_FILE                   := 0x00000100L
DEFINE MCI_VD_MODE_PARK                := (MCI_VD_OFFSET + 1)
DEFINE MCI_VD_MEDIA_CLV               :=  (MCI_VD_OFFSET + 2)
DEFINE MCI_VD_MEDIA_CAV               :=  (MCI_VD_OFFSET + 3)
DEFINE MCI_VD_MEDIA_OTHER             :=  (MCI_VD_OFFSET + 4)
DEFINE MCI_VD_FORMAT_TRACK            :=  0x4001
DEFINE MCI_VD_PLAY_REVERSE            :=  0x00010000L
DEFINE MCI_VD_PLAY_FAST               :=  0x00020000L
DEFINE MCI_VD_PLAY_SPEED              :=  0x00040000L
DEFINE MCI_VD_PLAY_SCAN               :=  0x00080000L
DEFINE MCI_VD_PLAY_SLOW               :=  0x00100000L
DEFINE MCI_VD_SEEK_REVERSE            :=  0x00010000L
DEFINE MCI_VD_STATUS_SPEED            :=  0x00004002L
DEFINE MCI_VD_STATUS_FORWARD          :=  0x00004003L
DEFINE MCI_VD_STATUS_MEDIA_TYPE       :=  0x00004004L
DEFINE MCI_VD_STATUS_SIDE             :=  0x00004005L
DEFINE MCI_VD_STATUS_DISC_SIZE        :=  0x00004006L
DEFINE MCI_VD_GETDEVCAPS_CLV          :=  0x00010000L
DEFINE MCI_VD_GETDEVCAPS_CAV          :=  0x00020000L
DEFINE MCI_VD_SPIN_UP                 :=  0x00010000L
DEFINE MCI_VD_SPIN_DOWN               :=  0x00020000L
DEFINE MCI_VD_GETDEVCAPS_CAN_REVERSE  :=  0x00004002L
DEFINE MCI_VD_GETDEVCAPS_FAST_RATE    :=  0x00004003L
DEFINE MCI_VD_GETDEVCAPS_SLOW_RATE    :=  0x00004004L
DEFINE MCI_VD_GETDEVCAPS_NORMAL_RATE  :=  0x00004005L
DEFINE MCI_VD_STEP_FRAMES             :=  0x00010000L
DEFINE MCI_VD_STEP_REVERSE            :=  0x00020000L
DEFINE MCI_VD_ESCAPE_STRING           :=  0x00000100L
DEFINE MCI_CDA_STATUS_TYPE_TRACK      := 0x00004001L
DEFINE MCI_CDA_TRACK_AUDIO             := (MCI_CD_OFFSET + 0)
DEFINE MCI_CDA_TRACK_OTHER             := (MCI_CD_OFFSET + 1)
DEFINE MCI_WAVE_PCM                    := (MCI_WAVE_OFFSET + 0)
DEFINE MCI_WAVE_MAPPER                 := (MCI_WAVE_OFFSET + 1)
DEFINE MCI_WAVE_OPEN_BUFFER            := 0x00010000L
DEFINE MCI_WAVE_SET_FORMATTAG          := 0x00010000L
DEFINE MCI_WAVE_SET_CHANNELS           := 0x00020000L
DEFINE MCI_WAVE_SET_SAMPLESPERSEC      := 0x00040000L
DEFINE MCI_WAVE_SET_AVGBYTESPERSEC     := 0x00080000L
DEFINE MCI_WAVE_SET_BLOCKALIGN         := 0x00100000L
DEFINE MCI_WAVE_SET_BITSPERSAMPLE      := 0x00200000L
DEFINE MCI_WAVE_INPUT                  := 0x00400000L
DEFINE MCI_WAVE_OUTPUT                 := 0x00800000L
DEFINE MCI_WAVE_STATUS_FORMATTAG       := 0x00004001L
DEFINE MCI_WAVE_STATUS_CHANNELS        := 0x00004002L
DEFINE MCI_WAVE_STATUS_SAMPLESPERSEC   := 0x00004003L
DEFINE MCI_WAVE_STATUS_AVGBYTESPERSEC  := 0x00004004L
DEFINE MCI_WAVE_STATUS_BLOCKALIGN      := 0x00004005L
DEFINE MCI_WAVE_STATUS_BITSPERSAMPLE   := 0x00004006L
DEFINE MCI_WAVE_STATUS_LEVEL           := 0x00004007L
DEFINE MCI_WAVE_SET_ANYINPUT           := 0x04000000L
DEFINE MCI_WAVE_SET_ANYOUTPUT          := 0x08000000L
DEFINE MCI_WAVE_GETDEVCAPS_INPUTS      := 0x00004001L
DEFINE MCI_WAVE_GETDEVCAPS_OUTPUTS     := 0x00004002L
DEFINE     MCI_SEQ_DIV_PPQN            := (0 + MCI_SEQ_OFFSET)
DEFINE     MCI_SEQ_DIV_SMPTE_24        := (1 + MCI_SEQ_OFFSET)
DEFINE     MCI_SEQ_DIV_SMPTE_25        := (2 + MCI_SEQ_OFFSET)
DEFINE     MCI_SEQ_DIV_SMPTE_30DROP    := (3 + MCI_SEQ_OFFSET)
DEFINE     MCI_SEQ_DIV_SMPTE_30        := (4 + MCI_SEQ_OFFSET)
DEFINE     MCI_SEQ_FORMAT_SONGPTR      := 0x4001
DEFINE     MCI_SEQ_FILE                := 0x4002
DEFINE     MCI_SEQ_MIDI                := 0x4003
DEFINE     MCI_SEQ_SMPTE               := 0x4004
DEFINE     MCI_SEQ_NONE                := 65533
DEFINE     MCI_SEQ_MAPPER              := 65535
DEFINE MCI_SEQ_STATUS_TEMPO            := 0x00004002L
DEFINE MCI_SEQ_STATUS_PORT             := 0x00004003L
DEFINE MCI_SEQ_STATUS_SLAVE            := 0x00004007L
DEFINE MCI_SEQ_STATUS_MASTER           := 0x00004008L
DEFINE MCI_SEQ_STATUS_OFFSET           := 0x00004009L
DEFINE MCI_SEQ_STATUS_DIVTYPE          := 0x0000400AL
DEFINE MCI_SEQ_STATUS_NAME             := 0x0000400BL
DEFINE MCI_SEQ_STATUS_COPYRIGHT        := 0x0000400CL
DEFINE MCI_SEQ_SET_TEMPO               := 0x00010000L
DEFINE MCI_SEQ_SET_PORT                := 0x00020000L
DEFINE MCI_SEQ_SET_SLAVE               := 0x00040000L
DEFINE MCI_SEQ_SET_MASTER              := 0x00080000L
DEFINE MCI_SEQ_SET_OFFSET              := 0x01000000L
DEFINE MCI_ANIM_OPEN_WS                := 0x00010000L
DEFINE MCI_ANIM_OPEN_PARENT            := 0x00020000L
DEFINE MCI_ANIM_OPEN_NOSTATIC          := 0x00040000L
DEFINE MCI_ANIM_PLAY_SPEED             := 0x00010000L
DEFINE MCI_ANIM_PLAY_REVERSE           := 0x00020000L
DEFINE MCI_ANIM_PLAY_FAST              := 0x00040000L
DEFINE MCI_ANIM_PLAY_SLOW              := 0x00080000L
DEFINE MCI_ANIM_PLAY_SCAN              := 0x00100000L
DEFINE MCI_ANIM_STEP_REVERSE           := 0x00010000L
DEFINE MCI_ANIM_STEP_FRAMES            := 0x00020000L
DEFINE MCI_ANIM_STATUS_SPEED           := 0x00004001L
DEFINE MCI_ANIM_STATUS_FORWARD         := 0x00004002L
DEFINE MCI_ANIM_STATUS_HWND            := 0x00004003L
DEFINE MCI_ANIM_STATUS_HPAL            := 0x00004004L
DEFINE MCI_ANIM_STATUS_STRETCH         := 0x00004005L
DEFINE MCI_ANIM_INFO_TEXT              := 0x00010000L
DEFINE MCI_ANIM_GETDEVCAPS_CAN_REVERSE := 0x00004001L
DEFINE MCI_ANIM_GETDEVCAPS_FAST_RATE   := 0x00004002L
DEFINE MCI_ANIM_GETDEVCAPS_SLOW_RATE   := 0x00004003L
DEFINE MCI_ANIM_GETDEVCAPS_NORMAL_RATE := 0x00004004L
DEFINE MCI_ANIM_GETDEVCAPS_PALETTES    := 0x00004006L
DEFINE MCI_ANIM_GETDEVCAPS_CAN_STRETCH := 0x00004007L
DEFINE MCI_ANIM_GETDEVCAPS_MAX_WINDOWS := 0x00004008L
DEFINE MCI_ANIM_REALIZE_NORM           := 0x00010000L
DEFINE MCI_ANIM_REALIZE_BKGD           := 0x00020000L
DEFINE MCI_ANIM_WINDOW_HWND            := 0x00010000L
DEFINE MCI_ANIM_WINDOW_STATE           := 0x00040000L
DEFINE MCI_ANIM_WINDOW_TEXT            := 0x00080000L
DEFINE MCI_ANIM_WINDOW_ENABLE_STRETCH  := 0x00100000L
DEFINE MCI_ANIM_WINDOW_DISABLE_STRETCH := 0x00200000L
DEFINE MCI_ANIM_WINDOW_DEFAULT         := 0x00000000L
DEFINE MCI_ANIM_RECT                   := 0x00010000L
DEFINE MCI_ANIM_PUT_SOURCE             := 0x00020000L
DEFINE MCI_ANIM_PUT_DESTINATION        := 0x00040000L
DEFINE MCI_ANIM_WHERE_SOURCE           := 0x00020000L
DEFINE MCI_ANIM_WHERE_DESTINATION      := 0x00040000L
DEFINE MCI_ANIM_UPDATE_HDC             := 0x00020000L
DEFINE MCI_OVLY_OPEN_WS                := 0x00010000L
DEFINE MCI_OVLY_OPEN_PARENT            := 0x00020000L
DEFINE MCI_OVLY_STATUS_HWND            := 0x00004001L
DEFINE MCI_OVLY_STATUS_STRETCH         := 0x00004002L
DEFINE MCI_OVLY_INFO_TEXT              := 0x00010000L
DEFINE MCI_OVLY_GETDEVCAPS_CAN_STRETCH := 0x00004001L
DEFINE MCI_OVLY_GETDEVCAPS_CAN_FREEZE  := 0x00004002L
DEFINE MCI_OVLY_GETDEVCAPS_MAX_WINDOWS := 0x00004003L
DEFINE MCI_OVLY_WINDOW_HWND            := 0x00010000L
DEFINE MCI_OVLY_WINDOW_STATE           := 0x00040000L
DEFINE MCI_OVLY_WINDOW_TEXT            := 0x00080000L
DEFINE MCI_OVLY_WINDOW_ENABLE_STRETCH  := 0x00100000L
DEFINE MCI_OVLY_WINDOW_DISABLE_STRETCH := 0x00200000L
DEFINE MCI_OVLY_WINDOW_DEFAULT         := 0x00000000L
DEFINE MCI_OVLY_RECT                   := 0x00010000L
DEFINE MCI_OVLY_PUT_SOURCE             := 0x00020000L
DEFINE MCI_OVLY_PUT_DESTINATION        := 0x00040000L
DEFINE MCI_OVLY_PUT_FRAME              := 0x00080000L
DEFINE MCI_OVLY_PUT_VIDEO              := 0x00100000L
DEFINE MCI_OVLY_WHERE_SOURCE           := 0x00020000L
DEFINE MCI_OVLY_WHERE_DESTINATION      := 0x00040000L
DEFINE MCI_OVLY_WHERE_FRAME            := 0x00080000L
DEFINE MCI_OVLY_WHERE_VIDEO            := 0x00100000L
DEFINE SELECTDIB       := 41
#endregion
