<?xml version="1.0" encoding="utf-8"?>
<topic id="f7451e68-caf8-41bd-967c-34c4860ebd45" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>TODO: Move introduction text here</para>
    </introduction>




     
     <para><legacyBold>Navigation:</legacyBold>&#160;
     
     <!-- TODO: Unknown topic link: xsharp.html -->X# Documentation &gt; <!-- TODO: Unknown topic link: chapter-2.html -->X# Language Reference &gt; <!-- TODO: Unknown topic link: commands-by-category.html -->Commands and Statements &gt; <!-- TODO: Unknown topic link: cmd_cat_database.html -->Database&#160;&gt;</para>

     
     <!-- TODO: Add named anchor: prev --><mediaLink><image xlink:href="btn_prev_n" /></mediaLink><!-- TODO: Add named anchor: main --><mediaLink><image xlink:href="btn_home_n" /></mediaLink><!-- TODO: Add named anchor: next --><mediaLink><image xlink:href="btn_next_n" /></mediaLink>
    
    <h1 class="p_Heading1" style="page-break-after: avoid;">GATHER Command &#160;(FoxPro)</h1>

  
  <!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
  
  



     <!--ZOOMRESTART-->
     <table><row><entry>Note</entry><entry>This command is defined in a header file and will be preprocessed by the X# preprocessor to a function call. If you disable the standard header (<!-- TODO: Unknown topic link: opt-nostddefs.html -->-nostddefs) files then this command will not be available. If you tell the compiler to use a different standard header file (<!-- TODO: Unknown topic link: opt-stddefs.html -->-stddef&#160;) then this command may also be not available</entry></row></table><h1 class="p_Heading1" style="page-break-after: avoid;">Purpose</h1>
<para>Replaces the data in the current record of the currently selected table with data from an array, a set of variables, or an object.</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Syntax</h1>
<para>&#160;</para>
<para>GATHER FROM ArrayName | MEMVAR | NAME ObjectName<para/>
 &#160; [FIELDS FieldList | FIELDS LIKE Skeleton | FIELDS EXCEPT Skeleton]<para/>
 &#160; [MEMO]</para>
<h1 class="p_Heading1" style="page-break-after: avoid;">Arguments</h1>
<para>&#160;</para>
<table><row><entry>FIELDS &lt;idFieldList&gt;</entry><entry>The list of fields to process. The default is all fields with the exception of memo fields, unless the command supports the MEMO clause.</entry></row></table><table><row><entry></entry><entry>Only fields with the same names and types in both files are appended. &#160;If fields with the same name do not match in data type, a runtime error is raised.</entry></row></table><table><row><entry>FIELDS LIKE &lt;Skeleton&gt;</entry><entry>You can specify field names with a wild card, such as FIELDS LIKE *name</entry></row></table><para>FIELDS EXCEPT &lt;Skeleton&gt;You can exclude fields, such as for example the primary keys: FIELDS EXCEPT Id<para/>
&lt;Skeleton&gt; supports wildcards (* and ?). For example, to replace all fields that begin with the letters A and P, use: <para/>
FIELDS LIKE A*,P*</para>
<para>&#160;</para>
<para>Please note that you can combine FIELDS LIKE and FIELDS EXCEPT but you cannot combine a fields list with the LIKE and EXCEPT clauses.</para>
<para>&#160;</para>
<para>&#160;</para>
<table><row><entry>FROM &lt;ArrayName&gt;</entry><entry>Specifies the array whose data replaces the data in the current record. The contents of the elements of the array, starting with the first element, replace the contents of the corresponding fields of the record. The contents of the first array element replace the first field of the record; the contents of the second array element replace the second field, and so on.<para/>
If the array has fewer elements than the table has fields, the additional fields are ignored. If the array has more elements than the table has fields, the additional array elements are ignored. </entry></row></table><para>&#160;</para>
<table><row><entry>MEMVAR</entry><entry>Specifies the variables or array from which data is copied to the current record. Data is transferred from the variable to the field that has the same name as the variable. The contents of a field are not replaced if a variable doesn&#39;t exist with the same name as the field.</entry></row></table><para>&#160;</para>
<table><row><entry>NAME &lt;ObjectName&gt;</entry><entry>Specifies an object whose properties have the same names as fields in the table. The contents of each field are replaced by the value of the property with the same names as the fields. The contents of a field are not replaced if a property doesn&#39;t exist with the same name as the field.</entry></row></table><para>&#160;</para>
<table><row><entry>MEMO</entry><entry>Specifies that the contents of memo or Blob fields are replaced with the contents or array elements or variables. If you omit MEMO, memo and Blob fields are skipped when GATHER replaces the contents of fields with the contents of an array or variable. General and picture fields are always ignored in GATHER, even if you include the MEMO keyword.</entry></row></table><h1 class="p_Heading1" style="page-break-after: avoid;">See Also</h1>
<para><link xlink:href="758e4c7e-09b3-4ace-ab30-c361684ab5f7">APPEND FROM ARRAY</link>, <link xlink:href="ca9a9a9e-070c-4be5-9f07-26b70cebbe4e">COPY TO ARRAY</link>, <link xlink:href="c8ac4542-9a98-4c54-808e-781ed794489c">SCATTER</link></para>

     <!--ZOOMSTOP-->

<!-- TODO: Review markup -->
<markup>
<script>
           var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
           if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
	   $(document).ready(function(){
		   $(window).bind('resize', function() {
				var y = $('#header').height();
				$('#content').css('margin-top', y);
				$('.hmanchor').css('margin-top', -y-20);
				$('.hmanchor').css('padding-top', y+20);
			});
		   $(window).triggerHandler('resize');	
		   $(window).triggerHandler('resize');	
                   
		});
</script>
</markup>

    <relatedTopics>
    </relatedTopics>

  </developerConceptualDocument>
</topic>
