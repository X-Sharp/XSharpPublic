<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2023-06-29T19:14:38.535+02:00" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Compiler magic in the startup code</title>
  <keywords>
    <keyword>$AppExit</keyword>
    <keyword>$AppInit</keyword>
    <keyword>$Exit</keyword>
    <keyword>$Init1</keyword>
    <keyword>$Init2</keyword>
    <keyword>$Init3</keyword>
    <keyword>EXIT PROCEDURE</keyword>
    <keyword>INIT PROCEDURE</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Compiler magic in the startup code</para>
    </header>
    <para styleclass="Body Text">The X# compiler also does some extra &quot;tricks&quot; in the startup code.</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">XBase code may have so called INIT procedures, which contain code that will be executed at startup. For example inside the VO GUI Classes there is a procedure </para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">PROCEDURE</text><text style="font-weight:normal; font-style:normal; color:#000000;"> __WCInitCriticalSections() _INIT1</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">To ensure that these procedures are called at start the compiler generates one to three special methods in the functions class with the names $Init1, $Init2, $Init3 and $Exit. The VOGuiclasses assembly has two of these ($Init1 and $Init3). When you look at the contents of this method in ILSpy you see the following (using C# decompilation)</text></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:italic; color:#000000;">// VOGUIClasses.Functions</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">System.Runtime.CompilerServices;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">[CompilerGenerated]</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">$Init1()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">__WCInitCriticalSections();</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">In some assemblies you will see that the $Init1() method is there but it is empty. For example in the VOSystemClasses:</text></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:italic; color:#000000;">// VOSystemClasses.Functions</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">System.Runtime.CompilerServices;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">[CompilerGenerated]</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">$Init1()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">The reason why we are creating these empty initializers is the following:</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">many of our VO customers are instantiating classes indirectly, by calling CreateInstance(). </text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">To be able to do so the classes have to be available at runtime.</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">The Roslyn compiler that we use is very smart. It does not include references to external assemblies into the exe when the exe does not reference any types or methods in that assembly. </text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">As a result if you were calling CreateInstance(#DbServer) in your app but you were never declaring variables of type DbServer (but only of type DataServer for example) then even when you include a reference to the VORDDClasses assembly at compile time you would not have a reference to the RDDClasses in your main app.</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">That is why we are generating the empty $Init() methods.</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">When building the main application, the X# compiler checks all referenced assemblies and looks for all $Init1, $Init2, $Init3 and $Exit methods and build some code to call all these methods. As a result all referenced assemblies will be loaded at startup. You will find this startup code in a special compiler generated method in the compiler generated &lt;module&gt; class:</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:italic; color:#000000;">// &lt;Module&gt;</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Application1.Exe;</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">System;</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">System.Runtime.CompilerServices;</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">VOWin32APILibrary;</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">XSharp;</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">XSharp.RT;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">[CompilerGenerated]</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">internal</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">$AppInit()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">try</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">RuntimeState.AppModule</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">typeof</text><text style="font-weight:normal; font-style:normal; color:#000000;">(Application1.Exe.Functions).Module;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">RuntimeState.CompilerOptionOVF</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">false</text><text style="font-weight:normal; font-style:normal; color:#000000;">;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">RuntimeState.CompilerOptionVO11</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">false</text><text style="font-weight:normal; font-style:normal; color:#000000;">;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">RuntimeState.CompilerOptionVO13</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">false</text><text style="font-weight:normal; font-style:normal; color:#000000;">;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">RuntimeState.Dialect</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">=</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">XSharpDialect.VO;</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">VOWin32APILibrary.Functions.$Init1();</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">XSharp.RT.Functions.$Init1();</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Application1.Exe.Functions.$Init1();</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">}</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">catch</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">(Exception</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">innerException)</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">throw</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">new</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Exception(&quot;Error when executing code in INIT procedure(s)&quot;,</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">innerException);</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">As you can see this code not only calls several $Init1() methods, but it also sets some properties in the X# runtime. You can also see that the code above was called in the VO Dialect.</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">And if you look at the generated code for the Start function this looks like this:</text></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:italic; color:#000000;">// Application1.Exe.Functions</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">System;</text><br/><text style="font-weight:bold; font-style:normal; color:#000000;">using</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">XSharp.RT;</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#000000;">public</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">static</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#000000;">void</text><text style="font-weight:normal; font-style:normal; color:#ffffff;">&#32;</text><text style="font-weight:normal; font-style:normal; color:#000000;">Start()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">try</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;Module&gt;.$AppInit();</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">XSharp.RT.Functions.QOut(&quot;Function Start&quot;);</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">}</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#000000;">finally</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">{</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">&lt;Module&gt;.$AppExit();</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">GC.Collect();</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160; &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">GC.WaitForPendingFinalizers();</text><br/><text style="font-weight:normal; font-style:normal; color:#ffffff;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; color:#000000;">}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">}</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">The compiler has created a try finally block and calls $AppInit() to initialize the runtime state and call the init procedures in every referenced assembly.</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">You also see that in the finally clause there is a call to $AppExit() from which EXIT procedures are called (we have added these in X#) and where the garbage collector cleans all references and waits for all finalizers to finish before your app finished.</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">Unfortunately this does not mean that for example all open servers will be closed. If you have opened a DbServer and assigned the object to a global variable then this does not automatically close the server.</text></para>
    <para styleclass="Body Text"><text style="font-weight:normal; font-style:normal; color:#000000;">There is some code in the runtime that takes care of this (but that is the subject of another topic)..</text></para>
    <para styleclass="Body Text"></para>
  </body>
</topic>
