<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllFiles" xml:space="preserve">
    <value>All files</value>
  </data>
  <data name="ApplicationArgumentsWatermark" xml:space="preserve">
    <value>Arguments to be passed to the application</value>
  </data>
  <data name="DebugPropertyPageTitle" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="DuplicateKey" xml:space="preserve">
    <value>Duplicate Key</value>
  </data>
  <data name="EnvVariableNameWatermark" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="EnvVariableValueWatermark" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ExecutableFiles" xml:space="preserve">
    <value>Executable files</value>
  </data>
  <data name="ExecutablePathWatermark" xml:space="preserve">
    <value>Path to the executable to run</value>
  </data>
  <data name="LaunchUrlWatermark" xml:space="preserve">
    <value>Absolute or relative URL</value>
  </data>
  <data name="NameCannotBeEmpty" xml:space="preserve">
    <value>Name cannot be empty.</value>
  </data>
  <data name="NewProfileCaption" xml:space="preserve">
    <value>New profile</value>
  </data>
  <data name="NewProfileSeedName" xml:space="preserve">
    <value>newProfile</value>
  </data>
  <data name="ProfileKindExecutableName" xml:space="preserve">
    <value>Executable</value>
  </data>
  <data name="ProfileKindIISExpressName" xml:space="preserve">
    <value>IIS Express</value>
  </data>
  <data name="ProfileKindNoActionName" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="ProfileKindProjectName" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="ProfileNameInvalid" xml:space="preserve">
    <value>That profile name is invalid or there is an existing profile with the same name.</value>
  </data>
  <data name="ProfileNameRequired" xml:space="preserve">
    <value>You must specify a profile name.</value>
  </data>
  <data name="ValueCannotBeEmpty" xml:space="preserve">
    <value>Value cannot be empty.</value>
  </data>
  <data name="WorkingDirectoryWatermark" xml:space="preserve">
    <value>Absolute path to working directory</value>
  </data>
  <data name="ErrorsMustBeCorrectedPriorToSaving" xml:space="preserve">
    <value>The errors on the page must be corrected prior to saving your changes.</value>
  </data>
  <data name="AddBtn" xml:space="preserve">
    <value>_Add</value>
  </data>
  <data name="ApplicationArguments" xml:space="preserve">
    <value>Application ar_guments:</value>
  </data>
  <data name="BrowseBtn" xml:space="preserve">
    <value>_Browse...</value>
  </data>
  <data name="DeleteBtn" xml:space="preserve">
    <value>_Delete</value>
  </data>
  <data name="EnvironmentVariables" xml:space="preserve">
    <value>Environ_ment variables:</value>
  </data>
  <data name="Executable" xml:space="preserve">
    <value>_Executable:</value>
  </data>
  <data name="Launch" xml:space="preserve">
    <value>_Launch:</value>
  </data>
  <data name="LaunchURL" xml:space="preserve">
    <value>Launch browser:</value>
  </data>
  <data name="NameHeader" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewBtn" xml:space="preserve">
    <value>_New...</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>_Profile:</value>
  </data>
  <data name="RemoveBtn" xml:space="preserve">
    <value>_Remove</value>
  </data>
  <data name="ValueHeader" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="WorkingDirectory" xml:space="preserve">
    <value>_Working directory:</value>
  </data>
  <data name="CancelBtn" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="OKBtn" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ProfileName" xml:space="preserve">
    <value>Profile name:</value>
  </data>
  <data name="CancelBtnHelpText" xml:space="preserve">
    <value>Return to the debug property page with no changes</value>
  </data>
  <data name="chkLaunchBrowserHelpText" xml:space="preserve">
    <value>Checking enables a textbox to specify an absolute or relative URl</value>
  </data>
  <data name="DeleteBtnHelpText" xml:space="preserve">
    <value>Delete the current profile and change to the next available profile</value>
  </data>
  <data name="NewBtnHelpText" xml:space="preserve">
    <value>Open the new profile dialog</value>
  </data>
  <data name="OKBtnHelpText" xml:space="preserve">
    <value>Create the profile and return to the debug property page with the new profile selected</value>
  </data>
  <data name="chkNativeCodeDebuggingText" xml:space="preserve">
    <value>Enable nati_ve code debugging</value>
  </data>
  <data name="chkSqlCodeDebuggingText" xml:space="preserve">
    <value>Enable _SQL Server debugging</value>
  </data>
  <data name="chkRemoteDebugEnabledHelpText" xml:space="preserve">
    <value>Enable remote debugging</value>
  </data>
  <data name="RemoteDebug" xml:space="preserve">
    <value>_Use remote machine:</value>
  </data>
  <data name="RemoteDebugMachineWatermark" xml:space="preserve">
    <value>Remote machine host name</value>
  </data>
  <data name="RemoteHostNameRequired" xml:space="preserve">
    <value>You must specify a remote machine's host name.</value>
  </data>
  <data name="InvalidHostName" xml:space="preserve">
    <value>The host name is invalid.</value>
  </data>
  <data name="FindBtn" xml:space="preserve">
    <value>_Find...</value>
  </data>
  <data name="AuthenticationMode" xml:space="preserve">
    <value>Au_thentication mode:</value>
  </data>
  <data name="chkJSWebView2DebuggingText" xml:space="preserve">
    <value>Enable JavaScript debugger for Microsoft Edge (Chromium) based WebView2</value>
  </data>
  <data name="JSWebView2DebuggingAdditionalText" xml:space="preserve">
    <value>(Requires the JavaScript Diagnostics component)</value>
  </data>
  <data name="ImplicitUsingEditor_AddUsing" xml:space="preserve">
    <value>Using</value>
    <comment>Refers to the implicit using "includes" that will be added</comment>
  </data>
  <data name="ImplicitUsingEditor_AddUsingButton" xml:space="preserve">
    <value>Add Using</value>
  </data>
  <data name="ImplicitUsingEditor_ListItemIncludes" xml:space="preserve">
    <value>Using Includes</value>
    <comment>Refers to the implicit using "Includes" text when displayed as a list item</comment>
  </data>
  <data name="ImplicitUsingEditor_ListItemAlias" xml:space="preserve">
    <value>Alias</value>
    <comment>Refers to the implicit using "Alias" text when displayed as a list item</comment>
  </data>
  <data name="ImplicitUsingEditor_ListItemIsStatic" xml:space="preserve">
    <value>Static</value>
    <comment>Refers to the implicit using "Static" value when displayed as a list item</comment>
  </data>
  <data name="ImplicitUsingEditor_ListItemDelete" xml:space="preserve">
    <value>Delete</value>
    <comment>The action of deleting an implicit using list item</comment>
  </data>
  <data name="ImplicitUsingEditor_ListViewAccessibleName" xml:space="preserve">
    <value>Implicit global usings list</value>
  </data>
  <data name="ImplicitUsingEditor_ShowImportedUsingsButton" xml:space="preserve">
    <value>Show imported usings</value>
  </data>
</root>