<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Example 5: OCX - The Email Client Example </title>
  <body>
    <header>
      <para styleclass="Heading1">Example 5: OCX - The Email Client Example </para>
    </header>
    <para styleclass="Body Text">This example shows how to migrate an application that uses an ActiveX/OCX Control.<br/>We are using the Email example from Visual Objects that you can find in the Examples folder, subfolder Email.</para>
    <para styleclass="Body Text">The problem that we can expect here is that the X# Runtime (and also Vulcan rumtime) does not support ActiveX controls.</para>
    <para styleclass="Body Text">So lets try to solve this.</para>
    <list id="12" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">First run VOXporter and create a Visual Studio solution from the AEF</li>
      <li styleclass="Body Text">Compile and run in Visual Studio.</li>
      <li styleclass="Body Text">We will get 2 messages:</li>
    </list>
    <para styleclass="Normal"><image src="Email1.png" scale="-99.90%" width="858" height="154" styleclass="Image Caption"></image></para>
    <para styleclass="Body Text">The first message shows the biggest problem in this example. The second message was inserted by the Xporter to warn us that the original code was adding a method to a class that exists inside the VO Gui classes. </para>
    <para styleclass="Body Text">Lets fix these problems quickly to be able to compile the app. We will add the OCX Later:</para>
    <list id="13" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Click on the warning. You will see that the XPorter has added a <text styleclass="Code Example">CLASS ToolBar_external_class</text><text styleclass="" style="font-family:Consolas; font-size:12pt; font-weight:bold; color:#000000; background-color:#ffffff;">&#32;</text>that inherits from Toolbar. The original code was trying to add the ShowButtonmenu method to the existing Toolbar class. </li>
      <li styleclass="Body Text">We can solve this problem, that we have also seen in the VOPAD example by either adding an Extension Method or by subclassing the Toolbar class.</li>
      <li styleclass="Body Text">Just like in the VOPAD example I prefer the extension method.</li>
      <li styleclass="Body Text">Change the class name and method declaration. We will create 2 overloads, because the symTb parameter is optional:</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ToolBarExtensions</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ShowButtonMenu(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> tbSelf </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Toolbar, nButtonID </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> LONG, oButtonMenu </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Menu) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;tbSelf:ShowButtonMenu(nButtonID, oButtonMenu, #MAINTOOLBAR)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ShowButtonMenu(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> tbSelf </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Toolbar, nButtonID </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> LONG, oButtonMenu </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Menu,symTb </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Symbol) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text></para>
    <list id="13" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Remove the Default() line and replace <text styleclass="Code Example">SELF</text> in the body of the original ShowButtonMenu with <text styleclass="Code Example">tbSelf</text></li>
      <li styleclass="Body Text">We will also have to make some changes to the code that calls this method. This is due to the fact that the code calls ShowButtonMenu on the Toolbar access from the window class. This Toolbar access is untyped and therefore returns a USUAL..<br/>So locate the 2 lines with <text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#3366ff;">SELF</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">:ToolBar:ShowButtonMenu</text><text styleclass="" style="font-family:Consolas; font-size:12pt; color:#000000; background-color:#ffffff;">&#32;</text>and change that to<text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> ((Toolbar) </text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#3366ff;">SELF</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">:ToolBar):ShowButtonMenu</text><text styleclass="" style="font-family:Consolas; font-size:12pt; color:#000000; background-color:#ffffff;">. </text>You cannot use the oToolbar field of the Window class, because the DataWindow class will return the Toolbar from its framewindow in stead of its own toolbar.<br/>In the improved VO SDK that we will include with our X# runtime we will solve this problem by strongly typing properties such as Window:Toolbar.<br/>Maybe you would be tempted to add the Extension methods to the USUAL type, so you would not have to add the casts to the code that calls ShowButtonMenu. <br/>That will compile, but unfortunately will produce a problem at runtime. The X# compiler (like the Vulcan and VO Compilers) knows that the USUAL type is special and will not try to emit a method call, but will produce code that calls Send() on the usual to call its method. And the Vulcan Runtime does not handle extension methods inside the Send() function.</li>
      <li styleclass="Body Text">We can confirm that this works later when we press the &quot;Reply&quot; button on the toolbar. That should bring up the menu with &quot;Reply to Sender&quot; and &quot;Reply to All&quot;</li>
    </list>
    <para styleclass="Body Text">Now it is time to fix the ActiveX/OCX problem</para>
    <list id="13" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Click on the error about OleControl.</li>
      <li styleclass="Body Text">As a quick workaround we will change the code and let webbrowser inherit from MultiLineEdit. That gives us a control that will certainly work. We will implement the OCX later. To do so go to the Class Webbrowser.PRG and change the INHERIT clause. It says <text styleclass="Code Example" style="font-weight:bold;">INHERIT OleControl</text> now. Change that to <text styleclass="Code Example" style="font-weight:bold;">INHERIT MultiLineEdit</text>.</li>
      <li styleclass="Body Text">Compile again and now some other errors will be shown. 2 of these mention the type cOleMethod. Goto this code by double clicking the error.</li>
      <li styleclass="Body Text">You will see the Quit method of the Webbrowser class. This code uses an internal class and internal methods from the VO OLE Classes. Comment out the contents of this method for now.</li>
      <li styleclass="Body Text">Compile again and you will see that only a few errors are left. Some of these are the same as the error in the VOPAD Example and require that we change the Font property to ControlFont. Correct that.</li>
      <li styleclass="Body Text">One error points to an incorrect &apos;+&apos; operator: in the line<text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text></li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">cTemp += &#160;+&quot;; &quot;+ cEntry</text></para>
    <list id="13" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">This is an obvious error in the original VO code that was never picked up by the VO Compiler. Remove the + before the double quote</li>
      <li styleclass="Body Text">The last error comes from the constructor of the Webbrowser class. It is calling the CreateEmbedding method from the OleControl. This method does not exist in the MultiLineEdit class, so we comment it out for now. We will deal with the Webbrowser later.</li>
      <li styleclass="Body Text">The rest of the code should compile without problems after commenting out the call to SELF:CreateEmbedding().</li>
      <li styleclass="Body Text">You should be able to run the app now.</li>
      <li styleclass="Body Text">There will be a runtime error if you try to open the Address Book because it uses the Databrowser control which depends on Cato3Cnt.dll. Fix this by copying the cato3*.dll and msvcrt.dll from the Cavo28\Redist folder to your output folder.</li>
      <li styleclass="Body Text">Recompile and run the example. I twill now produce an error inside the Display method of the Webbrowser class (DisplayHtml if you have used the Email example from VO 2.8 SP4).<br/>This method takes the content of the email, writes it to disk and calls the Navigate method of the Webbrowser control (late bound, using the Send() function of VO). This will not work.<br/>Since we have changed the webbrowser control and made it a multi line edit we can change this behavior. Instead of writing the email text to disk we can simply assign it to the TextValue property of the MultiLineEdit. So comment out the body of the Display method (do not throw the code away we will need it later) and replace it with:</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:TextValue := cText</text></para>
    <list id="14" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">After that the sample should run without problems. You can also display the emails. Of course it will not show HTML properly but that is the next step.</li>
    </list>
    <para styleclass="Heading2">How to add the ActiveX to the code</para>
    <para styleclass="Body Text">The VO compatible GUI classes inside Vulcan do not support ActiveX Controls. Windows Forms however has great support for ActiveX Controls.</para>
    <para styleclass="Body Text">We will use the ActiveX support from Windows Forms to add the ActiveX control to the example.</para>
    <para styleclass="Body Text">There are 2 possibilities here:</para>
    <list id="15" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Arial; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Replace the whole Email Display window with a Windows Forms window</li>
      <li styleclass="Body Text">Use a trick to use Windows Forms to show the ActiveX control and merge that control into our VO GUI app</li>
    </list>
    <para styleclass="Body Text">The first solution is by far the easiest to understand, but we will have to create a whole new window and we will have to change the calling code as well.</para>
    <para styleclass="Body Text">We leave it up to you to make the choice for your own apps.</para>
    <para styleclass="Body Text">In this example we will the choose the second approach.</para>
    <para styleclass="Heading2">Create a Windows Forms Window to display the email</para>
    <para styleclass="Body Text">For this method we use a Windows.Forms.Form window as &quot;Host&quot; for the ActiveX control.<br/>We will instantiate that window and will grab the windows handle to the control and link that windows handle with our VO GUI window.</para>
    <para styleclass="Body Text">To do this you must take the following steps:</para>
    <list id="16" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Right Click on the project icon in the solution explorer and select &quot;Add New Item&quot;</li>
      <li styleclass="Body Text">This brings up a list of possible new items. Choose the icon for Windows Forms Form, give it a meaningful name, such as &quot;EmailDisplayForm.prg&quot; and click Add. </li>
      <li styleclass="Body Text">This will open the Form Designer window.</li>
      <li styleclass="Body Text">Open the ToolBox. The webbrowser control will not be in there.</li>
      <li styleclass="Body Text">Right click on an empty area in the toolbox and select &quot;Choose Items...&quot;. This will bring up a dialog where you can control the contents of the ToolBox.</li>
      <li styleclass="Body Text">Select the &quot;COM Components&quot; Tab and scroll down until you see the Microsoft Web Browser control:<br/><br/><image src="Email3.png" scale="100.00%" styleclass="Image Caption"></image></li>
      <li styleclass="Normal"><text styleclass="Image Caption" style="font-style:normal;">Tick the checkbox in front of the control and press Ok. This should add the ActiveX to the toolbox:</text><br/></li>
    </list>
    <para styleclass="Normal"><image src="Email4.png" scale="100.00%" styleclass="Image Caption"></image></para>
    <list id="17" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">You can drag the control to a different place in the Toolbox if you are not happy with where it landed.</li>
      <li styleclass="Body Text">Now drag the Control from the ToolBox to the form. There is no need to size or move the control.</li>
      <li styleclass="Body Text">Visual Studio will add two references to our project. These are:</li>
      <list id="17" level="1" type="ul" listtype="bullet" formatstring="&#111;" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:&apos;Courier New&apos;; font-size:11pt; color:#000000;">
        <li styleclass="Body Text"><text style="font-weight:bold;">AxSHDocVw</text>, a type library that contains that code for the actual ActiveX control</li>
        <li styleclass="Body Text"><text style="font-weight:bold;">SHDocVw</text>, a type library that contains code for the supporting automation server interfaces and classes</li>
      </list>
    </list>
    <list id="17" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">The form editor will add a field named <text style="font-weight:bold;">axWebBrowser1</text> to the form. This field is of the type AxSHDocVw.AxWebBrowser.</li>
      <li styleclass="Body Text">Goto the property window and change the <text style="font-weight:bold;">Modifiers</text> Field to change it from <text style="font-weight:bold;">Private</text> to it <text style="font-weight:bold;">Public</text> (Export). <br/>That will make the field accessible outside of the webBrowserHost class</li>
    </list>
    <list id="18" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Save the code, and close the form</li>
      <li styleclass="Body Text">Now goto the Webbrowser class</li>
      <li styleclass="Body Text">Add the following using clauses to the top of the file:</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">using</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Email</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">using</text><text style="font-weight:normal; font-style:normal; color:#000000;"> AxShDocVw</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">using</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ShDocVw</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">The first using is the namespace where the webBrowserHost window is generated. The second namespace is the namespace of the generated ActiveX and the third namespace if that of the other types that we need, such as enums and events.</para>
    <list id="18" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Add the following 2 fields (no need to elaborate I think):</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">EXPORT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oHost </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> webBrowserHost</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">EXPORT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oWebBrowser </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> AxWebBrowser</text><br/></para>
    <list id="19" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Goto the constructor of the Webbrowser class and add the following lines of code (in stead of the CreateEmbedding() that we commented out before)</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oHost := webBrowserHost{} &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// Create the host window, do not show !</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser := </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oHost:axWebBrowser1 &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Get the ActiveX on the form</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">SetParent(oWebBrowser:Handle, </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">self</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Handle()) &#160; </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Using Windows API &quot;steal&quot; its handle and link to the MLE</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Visible := TRUE &#160; &#160; &#160; &#160; &#160; &#160;</text><text style="font-weight:bold; font-style:italic; color:#339966;">// make the webbrowser visible</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Okay := TRUE</text></para>
    <list id="20" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">And add the following methods to make sure that the ActiveX has the same with and height as the MultiLineEdit that is its owner and to make sure it is properly destroyed,</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Resize(oEvent) </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oDim </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Dimension</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SUPER</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Resize(oEvent)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> oDim := </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Size</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">IF</text><text style="font-weight:normal; font-style:normal; color:#000000;"> oDim:Width &gt; 0</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:SuspendLayout()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Location := System.Drawing.Point{0,0}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Size := System.Drawing.Size{oDim:Width,oDim:Height}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:ResumeLayout()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDIF</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NIL</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Destroy()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SUPER</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Destroy()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Dispose()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oHost:Dispose()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NIL</text></para>
    <list id="21" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">And we need to &quot;restore&quot; the old behavior to display the HTML in the browser window, that we commented out before. <br/>So goto the WebBrowser:Display() method (DisplayHtml for VO 2.8 SP4) and restore the old code and change </li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">Send(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">, #Navigate, cFileName)</text></para>
    <para styleclass="Body Text" style="margin-left:13px;">into</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Navigate(cFileName)</text></para>
    <para styleclass="Body Text">so you change this into an early bound method call </para>
    <list id="22" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">To finish our work, browse through the source of the webbrowser class and find lines that call Navigate, such as </li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">Send( </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">, #Navigate, &quot;#top&quot; )</text></para>
    <para styleclass="Body Text">and change these to early bound method calls:</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:Navigate(&quot;#top&quot; )</text></para>
    <para styleclass="Body Text" style="margin-left:13px;">And look for lines like:</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">Send( </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">, #ExecWB, OLECMDID_PRINT, OLECMDEXECOPT_DODEFAULT, NIL, NIL )</text></para>
    <para styleclass="Body Text" style="margin-left:13px;">and change these to early bound method calls using enums in the type library. Also remove the NIL values:</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:ExecWB(OLECMDID.OLECMDID_PRINT, OLECMDEXECOPT.OLECMDEXECOPT_DODEFAULT )</text></para>
    <list id="23" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">That wraps it up. Everything works now, including the PrintPreview and Print functionality.</li>
      <li styleclass="Body Text">Of course you can now also use the activeX events and respond to them. <br/>You have to do that the .Net way. Something like this:</li>
    </list>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:oWebBrowser:NavigateComplete2 += NavigateComplete2</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Body Text" style="margin-left:13px;">and then the implementation</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NavigateComplete2(sender </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> OBJECT, e </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> DWebBrowserEvents2_NavigateComplete2Event) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SELF</text><text style="font-weight:normal; font-style:normal; color:#000000;">:Owner:StatusBar:SetText(&quot;Showing file:&quot; +e:uRL:ToString())</text></para>
    <para styleclass="Body Text"><text style="font-weight:bold;">You will find the &quot;code before&quot; and &quot;code after&quot; in the XSharp Examples folder</text></para>
  </body>
</topic>
