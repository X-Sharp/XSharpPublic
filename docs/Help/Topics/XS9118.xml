<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2023-05-29T10:17:43.590+02:00" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>XS9118</title>
  <keywords>
    <keyword>Clipper calling convention</keyword>
    <keyword>PARAMS</keyword>
    <keyword>XS9118</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Warning XS9118</para>
    </header>
    <para styleclass="Body Text">Untyped parameter &apos;{0}&apos; and &apos;{1}&apos; calling convention, assuming &apos;USUAL&apos; type.</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">This error will be generated by code such as the following:</para>
    <para styleclass="Code Example"><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Test1(c </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">string</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">, i ) </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">string</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// warning XS9118: Untyped parameter &apos;i&apos; and &apos;STRICT&apos; calling convention, assuming &apos;USUAL&apos; type.</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">return</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> c</text></para>
    <para styleclass="Normal">Omitting the type of other parameters is allowed, because in that case this parameter will get the same type as the parameter following it. In the sample below both c and i will be of type int.</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Test2(c, i </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">int</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">) </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">string</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">return</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> c</text></para>
    <para styleclass="Normal">If you omit all types such as in the code below</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Test3(c, i ) </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">as</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">string</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">return</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> c</text></para>
    <para styleclass="Normal">then the compiler will generate a function (or method) of CLIPPER calling convention. All parameters will be of type USUAL then and all parameters are optional. You can call this function with as many parameters as you like. Of course you need to write code inside the function to check if the parameters and their types are corrected.</para>
    <para styleclass="Normal">When processing the CLIPPER calling convention, the X# compiler will generate a new PARAMS parameter of type USUAL[] and will create locals for each of the declared parameters and will assign the right element from the PARAMS array into the local variables. </para>
    <para styleclass="Code Example"></para>
  </body>
</topic>
