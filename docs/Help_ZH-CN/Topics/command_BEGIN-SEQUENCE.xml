<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-06-11T17:08:14.676+08:00" lasteditedby="Design" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>BEGIN SEQUENCE</title>
  <keywords>
    <keyword>BEGIN</keyword>
    <keyword>BEGIN SEQUENCE</keyword>
    <keyword>END</keyword>
    <keyword>END SEQUENCE</keyword>
    <keyword>FINALLY</keyword>
    <keyword>RECOVER</keyword>
    <keyword>SEQUENCE</keyword>
    <keyword>USING</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">BEGIN SEQUENCE</para>
    </header>
    <para styleclass="Heading1">用途</para>
    <para styleclass="Heading1"><text styleclass="Body Text">BEGIN SEQUENCE 关键字声明异常处理块的开始。</text></para>
    <para styleclass="Heading1">语法</para>
    <para styleclass="Code Example">BEGIN SEQUENCE<br/> &#160; tryStatements<br/>[RECOVER [USING localVariable]<br/> &#160; recoveryStatements<br/>]<br/>[FINALLY<br/> &#160; finallyStatements<br/>]<br/>END [SEQUENCE]</para>
    <para styleclass="Body Text">语法中：</para>
    <para styleclass="Body Text"></para>
    <para styleclass="List"><text style="font-style:italic;">tryStatements</text>&#32;<tab />一个或多个可能导致异常抛出的语句或表达式。</para>
    <para styleclass="List"><text style="font-style:italic;">localVariable</text>&#32;<tab />一个局部变量，用于接收 BEGIN SEQUENCE(开始序列)和 RECOVER(恢复)语句之间的任何代码抛出的异常。该变量类型必须为 USUAL。</para>
    <para styleclass="List"><text style="font-style:italic;">recoveryStatements</text><tab />如果任何 tryStatements 抛出异常，将执行的一条或多条语句或表达式。 </para>
    <para styleclass="List"><text style="font-style:italic;">finallyStatements</text>&#32;<tab />无论是否抛出异常，都将始终执行的一条或多条语句或表达式。 </para>
    <para styleclass="List"></para>
    <para styleclass="Heading1">备注</para>
    <para styleclass="Normal">BEGIN SEQUENCE ... END SEQUENCE 是一种控制结构，用于异常和运行时错误处理。它限定了一个定义离散操作的语句块，包括调用的存储过程和函数。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">当在 BEGIN SEQUENCE 语句之后直到相应的 RECOVER 语句之前的语句块中的任何地方出现异常时，控制权将分支到紧跟 RECOVER 语句之后的程序语句。如果未指定 RECOVER 语句，控制将分支到 FINALLY 语句之后的语句，从而终止序列。如果未指定 FINALLY 语句，控制将分支到 END SEQUENCE 语句之后的语句，从而终止序列。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">如果控制到达 RECOVER 语句，但没有抛出异常，则控制分支到 FINALLY 语句后面的语句。如果未指定 FINALLY 语句，控制将分支到 END SEQUENCE 语句之后的语句，从而终止序列。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">RECOVER 语句可选择接收 tryStatements 块中的语句抛出的异常。这通常是一个错误对象，由 ErrorBlock() 定义的当前错误处理块生成并返回。如果返回了错误对象，则可以向其发送信息，以查询有关错误的信息。有了这些信息，运行时错误就可以在操作的上下文中处理，而不是在当前的运行时错误处理程序中处理。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">FINALLY 语句块可用于清理在 BEGIN SEQUENCE 块中分配的任何资源。无论 BEGIN SEQUENCE 块如何退出，控制权始终会传递到 FINALLY 块(如果存在)。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">在 BEGIN SEQUENCE 和 RECOVER 语句之间不能使用 RETURN、LOOP 或 EXIT。但在 RECOVER 和 FINALLY 语句块中，可以进行 LOOP、EXIT、BREAK(中断)或 RETURN操作，因为此时序列已基本完成。在 RECOVER 语句块中使用 LOOP 可以重新执行序列语句块。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">BEGIN SEQUENCE ... END SEQUENCE 控制结构可以嵌套到任意深度。</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">如果在任何 BEGIN SEQUENCE 块内执行，CanBreak() 函数将返回 TRUE。</para>
    <para styleclass="Heading1">示例</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start() </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x := 4, y := 0 </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">BEGIN</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SEQUENCE</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? x / y</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RECOVER</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? &quot;oops&quot;</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FINALLY</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">? &quot;in finally block&quot;</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">SEQUENCE</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1">参看</para>
    <para styleclass="Body Text"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_BREAK">BREAK</link><br/><link displaytype="text" defaultstyle="true" type="topiclink" href="command_THROW">THROW</link><br/><link displaytype="text" defaultstyle="true" type="topiclink" href="command_TRY_CATCH">TRY-CATCH-FINALLY </link></para>
    <para styleclass="Body Text"></para>
  </body>
</topic>
