<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Catching runtime errors at startup</title>
  <keywords>
    <keyword>-main</keyword>
    <keyword>Start</keyword>
    <keyword>StartupCode</keyword>
    <keyword>UnhandledException</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">Catching runtime errors at startup</para>
    </header>
    <para styleclass="Normal">Sometimes your program throws runtime errors at startup. These can be caused by missing assemblies and or by errors in initialization code. <br/>These errors can be difficult to trap, since the errors occur inside code that is executed before the first line of code in your application.</para>
    <para styleclass="Normal">Take the following example</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">GLOBAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> x </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">GLOBAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> y := 1 / x </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> ? &quot;Function Start&quot;</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text></para>
    <para styleclass="Body Text">This code will generate an exception at startup, which you can only see/read when you run the app from the commandline</para>
    <para styleclass="Code Example">Unhandled Exception: System.TypeInitializationException: The type initializer for &apos;Application1.Exe.Functions&apos; threw an exception. ---&gt; System.DivideByZeroException: Attempted to divide by zero.<br/>at Application1.Exe.Functions..cctor() in C:\XIDE\Projects\Default\Applications\Application1\Prg\Start.prg:line 4<br/>--- End of inner exception stack trace ---<br/>at Application1.Exe.Functions.Start()</para>
    <para styleclass="Body Text">The normal program flow in an X# application is this:</para>
    <list id="3" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">Your application is started</li>
      <li styleclass="Body Text">The DotNet framework is initialized</li>
      <li styleclass="Body Text">The entrypoint is called. The normal entrypoint in an app is the Start function, which is converted by the compiler to a Start method in a compiler generated Functions class. <br/>The same class also has the globals and defines from your app. If one of these globals or defines contains an initialization expression that cannot be resolved at compile then these this code will be executed in the static constructor of the Functions class (in the error message above this is called the &quot;type initializer&quot;).</li>
      <li styleclass="Body Text">The code above clearly makes a mistake which causes a divide by zero error.</li>
    </list>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">To intercept this we would like to run some other code at startup and add a try .. catch construct to make sure we can catch this kind of errors.</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">Add the following code:</para>
    <para styleclass="Body Text"><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> MyStartupCode</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> Start </text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STRICT</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">TRY</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text styleclass="Code Example" style="font-weight:bold; font-style:italic; color:#339966;">// Note that in the following line the name before .Exe must</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text styleclass="Code Example" style="font-weight:bold; font-style:italic; color:#339966;">// match the file name of your EXE. In my case I am generating Application1.exe</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Application1.Exe.Functions.Start()</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">CATCH</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> e </text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> Exception &#160;</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text styleclass="Code Example" style="font-weight:bold; font-style:italic; color:#339966;">// We should probably log this to disk as well !</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Console.WriteLine(&quot;An unhandled exception has occurred&quot;)</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Console.WriteLine(&quot;===================================&quot;)</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">DO</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">WHILE</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> e != </text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">NULL</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160;</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; Console.WriteLine(&quot;Exception: &quot;+e:Message) &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; Console.WriteLine(&quot;Callstack:&quot;)</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; Console.WriteLine(e:StackTrace)</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; Console.WriteLine()</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; e := e:InnerException</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">ENDDO</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160;</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Console.WriteLine(&quot;===================================&quot;)</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Console.WriteLine(&quot;Press any to close the application&quot;)</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Console.ReadLine() &#160; </text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">TRY</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text styleclass="Code Example" style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">You may have to change the call to Application1.Exe.Functions.Start() into something that matches your EXE name.</para>
    <para styleclass="Body Text">Now goto the General page in the application properties in VS and at the entry &quot;Startup Object&quot; set the value MyStartupCode.</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><image src="StartupCode.png" scale="100.00%" styleclass="Image Caption"></image></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">In XIDE add the command line option -main:MyStartupCode:</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text"><image src="XideStartup.png" scale="100.00%" styleclass="Image Caption"></image></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">and run the code again.<br/>The error is now trapped and shown.<br/>If you app is not a Console app but a Windows app then the console output may not be visible. </para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">Of course you can also register an UnHandledException handler in the AppDomain class inside the new startup code. </para>
    <para styleclass="Body Text">Change the code to:</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> MyStartupCode</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Start </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STRICT</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TRY</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; System.AppDomain.CurrentDomain:UnhandledException += ExceptionHandler</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; Application1.Exe.Functions.Start()</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CATCH</text><text style="font-weight:normal; font-style:normal; color:#000000;"> e </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> Exception</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; ExceptionHandler(</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">NULL</text><text style="font-weight:normal; font-style:normal; color:#000000;">, </text>UnhandledExceptionEventArgs<text style="font-weight:normal; font-style:normal; color:#000000;">{e, TRUE})</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TRY</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; color:#000000;"> ExceptionHandler( sender </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">OBJECT</text><text style="font-weight:normal; font-style:normal; color:#000000;">, args </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> UnhandledExceptionEventArgs) </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">VOID</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> e </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Exception &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; </text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> c </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> STRINGe := (Exception) args:ExceptionObject </text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;c := &quot;An unhandled exception has occurred&quot;+crlf</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;c += &quot;===================================&quot;+crlf</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">DO</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">WHILE</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> e != </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">NULL</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; c += &quot;Exception: &quot;+e:Message+crlf</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; c += &quot;Callstack:&quot;+crlf</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; c += e:StackTrace+crlf</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; e := e:InnerException</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">ENDDO</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160;c += &quot;===================================&quot;+crlf &#160; &#160; &#160;</text><br/><tab /><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">MessageBox(IntPtr.Zero, c,&quot;Error&quot;,0x60010) </text><text style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;">// MB_OK + MB_ICONSTOP+ MB_DEFAULT_DESKTOP_ONLY + MB_TOPMOST</text><br/><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">[DllImport(&quot;user32.dll&quot;, CharSet := CharSet.</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">Ansi</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">)];</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STATIC</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">METHOD</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> MessageBox(hwnd </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> IntPtr, lpText </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">, lpCaption </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">STRING</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">, uType </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">DWORD</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">) </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">PASCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; </text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">END</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">CLASS</text></para>
    <para styleclass="Normal" style="line-height:1.00; tabstops:720px left,1440px left,2160px left,2880px left,3600px left ;"></para>
    <para styleclass="Body Text">One remark:</para>
    <para styleclass="Body Text">Do NOT use or call any Xbase types and or functions in the exception handler, since you can&apos;t be sure that the runtime was initialized properly. </para>
    <para styleclass="Body Text">If you use classes written by yourself make sure that everything is strongly typed and uses native types only. So no USUAL, FLOAT, SYMBOL etc.</para>
    <para styleclass="Body Text">And do not call code inside functions in the same app or DLLs, because again the type initializers for the classes in which these functions are located can also throw exceptions.</para>
    <para styleclass="Body Text"></para>
  </body>
</topic>
