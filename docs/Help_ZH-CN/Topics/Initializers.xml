<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" modified="2024-06-30T01:51:54.657+08:00" lasteditedby="niuji" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Initializers(初始化器)</title>
  <body>
    <header>
      <para styleclass="Heading1">Initializers(初始化器)</para>
    </header>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">X# 为语言添加了两种初始化器：集合初始化器和对象初始化器。其语法如下</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">constructorcall &#160; &#160; &#160; &#160; </text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: datatype { parameterlist? } initializer?</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; </text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">initializer </text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: objectinitializer</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| collectioninitializer</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">objectinitializer &#160; &#160; &#160;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: { (memberinitializer (, memberinitializer)*)? }</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">memberinitializer &#160; &#160; &#160;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: Name=identifierName := Expr=initializervalue</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">initializervalue &#160; &#160; &#160;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: objectOrCollectioninitializer </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">| expression</text><br/><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">;</text><br/><br/><text style="font-weight:normal; font-style:normal; color:#000000;">collectioninitializer &#160; </text><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">: { expression (, expression)* }</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;</text><tab /><tab /><text style="font-weight:normal; font-style:normal; color:#000000;">;</text></para>
    <para styleclass="Heading3">备注：</para>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Body Text" style="font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Body Text">初始化器也用大括号分隔，紧跟在构造函数调用的结尾大括号之后</li>
    </list>
    <para styleclass="Body Text">对象初始化器的示例</para>
    <para styleclass="Code Example"><tab /><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VAR</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> oPerson := Person{}{FirstName := &quot;John&quot;, LastName := &quot;Smith&quot;}</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; </text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">VAR</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> oPerson := Person{&quot;John&quot;, &quot;Smith&quot;} {Age := 35 }</text></para>
    <para styleclass="Body Text">集合初始化器示例</para>
    <para styleclass="Code Example"><tab /><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">oList := List&lt;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">Int</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">&gt;{} {1,2,3,4,5}</text></para>
    <para styleclass="Body Text">结合在一起：</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;"> &#160; &#160;</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160;</text><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">Var</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> oPeople := List&lt;Person&gt; {} {;</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; Person{}{FirstName := &quot;John&quot;, LastName := &quot;Smith&quot;}, ;</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; Person{}{FirstName := &quot;Jane&quot;, LastName := &quot;Doe&quot;} ;</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; }</text></para>
    <para styleclass="Body Text"><link displaytype="text" defaultstyle="true" type="topiclink" href="Ex-LINQ">LINQ 示例</link> 展示了不同初始化器的运行情况。</para>
  </body>
</topic>
