<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic modified="2025-05-30T16:07:37.343+02:00" lasteditedby="robert" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Basic Usage</title>
  <keywords>
    <keyword translate="true">Append</keyword>
    <keyword translate="true">BASIC</keyword>
    <keyword translate="true">DbServer</keyword>
    <keyword translate="true">DbUseArea</keyword>
    <keyword translate="true">Delete</keyword>
    <keyword translate="true">FIELDPUT</keyword>
    <keyword translate="true">Filter</keyword>
    <keyword translate="true">RddSetDefault</keyword>
    <keyword translate="true">Relation</keyword>
    <keyword translate="true">USE</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:48px left,96px left,144px left,192px left,240px left,288px left,336px left,384px left,432px left,480px left ;"><text styleclass="Heading1" translate="true">Getting Started</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">To change a program that was using DBF files to using the SQLRDD you need to do the following steps</text></para>
    <para styleclass="Normal"></para>
    <list id="0" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="font-family:Arial; font-size:11pt; color:#000000;">
      <li styleclass="Normal"><text styleclass="Normal" translate="true">Choose the database that you want to use. If this is one of the databases that are standard supported by the X# SQL RDD than you&apos;re fine. Otherwise you will have to create a SqlDbProvider subclass for that database, and fill it with the information needed by the X# SQLRDD. Please contact us if you need help with that. </text><br/><text styleclass="Normal" style="font-weight:bold; font-style:italic;" translate="true">If you have created your own provider</text><text styleclass="Normal" translate="true">, then you need to register that provider with the RDD by calling </text><text style="font-family:&apos;Cascadia Mono&apos;; font-size:9pt; color:#000000;" translate="true">SqlDbRegisterProvider() </text><text styleclass="Body Text" translate="true">and passing the name that you want to use and the type (System.Type) of the class. For example if you have created a provider for SQLite, you could call </text></li>
    </list>
    <para styleclass="Normal"><br/><tab /><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true">SqlDbRegisterProvider(&quot;SQLITE&quot;, Typeof(MyNamespace.SqliteDbProvider))</text></para>
    <list id="0" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Code Example" style="font-family:Arial; font-size:11pt; color:#000000;">
      <li styleclass="Code Example"><text styleclass="Normal" translate="true">In the code you then need to tell the RDD which provider you want to use. For example</text><br/><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// The builtin SQL Server provider</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true">SqlDbSetProvider(&quot;SQLSERVER&quot;) &#160; &#160;</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// or the provider that was registered in the previous paragraph</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true">SqlDbSetProvider(&quot;SQLITE&quot;)</text></li>
      <li styleclass="Code Example"><text styleclass="Body Text" translate="true">Set the Default RDD to &quot;SQLRDD&quot;</text><br/><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true">RddSetDefault(&quot;SQLRDD&quot;)</text></li>
      <li styleclass="Code Example"><text styleclass="Normal" translate="true">Then you open a connection to the database:</text><br/><br/><text styleclass="Code Example" style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;" translate="true">var</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true"> handle := SqlDbOpenConnection(ConnectionString) &#160; </text><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// This opens a default connection</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// to open a second connection you need to specify a name (the first connection defaults to DEFAULT</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;" translate="true">var</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true"> handle2 := SqlDbOpenConnection(&quot;ALTERNATE&quot;, ConnectionString2)</text></li>
      <li styleclass="Code Example"><text styleclass="Body Text" translate="true">By default the RDD expects you to use the Ini Metdata Provider. If you want to specify another provider you can do that like this. </text><br/><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// Get the connection object</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;" translate="true">var</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true"> conn &#160; := SqlDbGetConnection(handle)</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// Set the MetadataProvider for the connection</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true">conn:MetadataProvider := DatabaseMetaDataProvider{conn}</text></li>
      <li styleclass="Code Example"><text styleclass="Body Text" translate="true">Then you can open tables as normal</text><br/><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// This will open the Customer table and will use the metadata provider to ask for more information</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;" translate="true">var</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true"> oSrv := DbServer{&quot;Customers&quot;} &#160; &#160;</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// You can also open a table from the secondary connection by </text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// prefixing the table name with the connection name followed by a double colon</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;" translate="true">var</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true"> oSrv2 := DbServer{&quot;ALTERNATE::Employees&quot;} &#160; &#160;</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// You can also open a query. This will be readonly</text><br/><text styleclass="Code Example" style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;" translate="true">var</text><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true"> oSrv2 := DbServer{&quot;Select * from Orders where ShippedDate is NULL&quot;} &#160; &#160;</text></li>
      <li styleclass="Code Example"><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true">When you&apos;re done with the database you can (should) close the connection(s)</text><br/><br/><text styleclass="Code Example" style="font-weight:bold; font-style:italic; text-decoration:none; color:#339966;" translate="true">// Note: Closing the connection will fail if there are still open areas for the connection</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true">SqlDbCloseConnection(handle)</text><br/><text styleclass="Code Example" style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;" translate="true">SqlDbCloseConnection(handle2)</text></li>
    </list>
  </body>
</topic>
